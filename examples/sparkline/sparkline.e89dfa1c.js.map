{"version":3,"sources":["index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","webpack:///src/browser/public/AddonManager.ts","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/common/EventEmitter.ts","webpack:///src/common/services/Services.ts","webpack:///src/common/Lifecycle.ts","webpack:///src/common/buffer/Constants.ts","webpack:///src/common/buffer/CellData.ts","webpack:///src/browser/services/Services.ts","webpack:///src/common/buffer/AttributeData.ts","webpack:///src/browser/Lifecycle.ts","webpack:///src/common/input/TextDecoder.ts","webpack:///src/browser/renderer/atlas/Constants.ts","webpack:///src/browser/Color.ts","webpack:///src/common/Platform.ts","webpack:///src/common/data/EscapeSequences.ts","webpack:///src/browser/renderer/BaseRenderLayer.ts","webpack:///src/common/services/ServiceRegistry.ts","webpack:///src/common/TypedArrayUtils.ts","webpack:///src/common/buffer/BufferLine.ts","webpack:///src/browser/Dom.ts","webpack:///src/browser/LocalizableStrings.ts","webpack:///src/common/InputHandler.ts","webpack:///src/common/data/Charsets.ts","webpack:///src/common/parser/Params.ts","webpack:///src/common/parser/OscParser.ts","webpack:///src/common/parser/Constants.ts","webpack:///src/common/parser/DcsParser.ts","webpack:///src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///src/browser/ColorManager.ts","webpack:///src/browser/renderer/RendererUtils.ts","webpack:///src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///src/browser/input/Mouse.ts","webpack:///src/browser/RenderDebouncer.ts","webpack:///src/browser/ScreenDprMonitor.ts","webpack:///src/common/Clone.ts","webpack:///src/browser/public/Terminal.ts","webpack:///src/browser/Terminal.ts","webpack:///src/browser/input/CompositionHelper.ts","webpack:///src/browser/Viewport.ts","webpack:///src/browser/Clipboard.ts","webpack:///src/common/parser/EscapeSequenceParser.ts","webpack:///src/browser/renderer/Renderer.ts","webpack:///src/browser/renderer/TextRenderLayer.ts","webpack:///src/browser/renderer/GridCache.ts","webpack:///src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///src/browser/ColorContrastCache.ts","webpack:///src/browser/renderer/atlas/LRUMap.ts","webpack:///src/browser/renderer/SelectionRenderLayer.ts","webpack:///src/browser/renderer/CursorRenderLayer.ts","webpack:///src/browser/renderer/LinkRenderLayer.ts","webpack:///src/browser/Linkifier.ts","webpack:///src/browser/services/SelectionService.ts","webpack:///src/browser/selection/SelectionModel.ts","webpack:///src/browser/input/MoveToCell.ts","webpack:///src/browser/services/SoundService.ts","webpack:///src/browser/MouseZoneManager.ts","webpack:///src/browser/AccessibilityManager.ts","webpack:///src/browser/renderer/dom/DomRenderer.ts","webpack:///src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///src/common/input/Keyboard.ts","webpack:///src/browser/services/RenderService.ts","webpack:///src/browser/services/CharSizeService.ts","webpack:///src/browser/services/MouseService.ts","webpack:///src/browser/Linkifier2.ts","webpack:///src/browser/services/CoreBrowserService.ts","webpack:///src/common/CoreTerminal.ts","webpack:///src/common/services/InstantiationService.ts","webpack:///src/common/services/LogService.ts","webpack:///src/common/services/BufferService.ts","webpack:///src/common/buffer/BufferSet.ts","webpack:///src/common/buffer/Buffer.ts","webpack:///src/common/CircularList.ts","webpack:///src/common/buffer/BufferReflow.ts","webpack:///src/common/buffer/Marker.ts","webpack:///src/common/services/OptionsService.ts","webpack:///src/common/services/CoreService.ts","webpack:///src/common/services/CoreMouseService.ts","webpack:///src/common/services/DirtyRowService.ts","webpack:///src/common/services/UnicodeService.ts","webpack:///src/common/input/UnicodeV6.ts","webpack:///src/common/services/CharsetService.ts","webpack:///src/common/WindowsMode.ts","webpack:///src/common/input/WriteBuffer.ts","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","AddonManager","root","factory","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_listeners","_disposed","this","_event","listener","push","dispose","splice","fire","arg1","arg2","queue","undefined","EventEmitter","from","to","IBufferService","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","IUnicodeService","_disposables","_isDisposed","unregister","index","indexOf","disposeArray","disposables","Disposable","array","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","content","fg","bg","extended","ExtendedAttrs","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","second","getAsCharData","AttributeData","ICharSizeService","ICoreBrowserService","IMouseService","IRenderService","ISelectionService","ISoundService","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","getFgColor","getBgColor","hasExtendedAttrs","updateExtended","isEmpty","getUnderlineColor","underlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","underlineStyle","node","handler","options","addEventListener","disposed","removeEventListener","codePoint","String","fromCharCode","data","start","end","result","codepoint","_interim","clear","decode","input","target","size","startPos","StringToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","channels","rgb","rgba","toPaddedHex","toString","contrastRatio","l1","l2","toCss","g","b","toRgba","color","blend","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","toColor","opaque","rgbaColor","toChannels","opacity","parseInt","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","_initCanvas","appendChild","removeElementFromParent","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","_drawBoxChar","fillText","_drawChars","contrastColor","_getContrastColor","_drawUncachedChars","drawBoldTextInBrightColors","draw","fgOverride","save","join","ansi","foreground","globalAlpha","restore","char","boxes","boxDrawingBoxes","strokeStyle","xEighth","yEighth","box","w","h","ops","boxDrawingLineSegments","scale","xOffset","yOffset","horizontalCenter","verticalCenter","xPoints","yPoints","op","x1","x2","y1","y2","beginPath","moveTo","cx1","bezierCurveTo","cy1","cx2","cy2","lineTo","stroke","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","minimumContrastRatio","adjustedColor","contrastCache","getColor","fgColor","fgColorMode","bgColor","bgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","setColor","inverse","BaseRenderLayer","serviceRegistry","Map","ctor","has","decorator","arguments","storeServiceDependency","set","fillFallback","constructor","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_extendedAttrs","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","eAttrs","addCodepointToCell","insertCells","eraseAttr","deleteCells","replaceCells","subarray","keys","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","elements","parentElement","removeChild","promptLabel","tooMuchOutput","WindowsOptionsReportType","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_coreService","_logService","hook","params","put","concat","unhook","success","utf32ToString","triggerDataEvent","pt","buffer","scrollTop","scrollBottom","cursorStyle","cursorBlink","debug","_charsetService","_dirtyRowService","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","_workCell","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestScroll","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onCursorMove","_onLineFeed","_onScroll","_onTitleChange","setCsiHandlerFallback","ident","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","action","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","bell","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","OscHandler","setTitle","setIconName","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","state","error","setDcsHandler","DECRQSS","event","parse","cursorStartX","cursorStartY","clearRange","len","chWidth","charset","screenReaderMode","wraparoundMode","decPrivateModes","wraparound","insertMode","modes","curAttr","bufferRow","lines","ybase","markDirty","wcwidth","ch","_eraseAttrData","getNullCell","precedingCodepoint","addCsiHandler","callback","addDcsHandler","DcsHandler","addEscHandler","addOscHandler","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","j","scrollBackSize","trimStart","ydisp","row","scrollBottomRowsOffset","scrollBottomAbsolute","getBlankLine","markRangeDirty","_is","term","termName","applicationCursorKeys","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeProtocol","sendFocus","activeEncoding","isCursorHidden","buffers","activateAltBuffer","isCursorInitialized","bracketedPasteMode","activateNormalBuffer","_updateAttrColor","c1","c2","c3","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","_processUnderline","reset","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","top","GET_WIN_SIZE_PIXELS","GET_CELL_SIZE_PIXELS","shift","pop","_savedCharset","collectAndFlag","scrollRegionHeight","shiftElements","level","markAllDirty","InputHandler","maxLength","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","k","addSubParam","addParam","newParams","res","idx","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","_put","_end","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","EMPTY_HANDLERS","_active","_ident","DcsParser","_params","charAtlasCache","rendererId","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","colorCode","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","v","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","ColorContrastCache","selectionTransparent","selectionOpaque","onOptionsChange","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","split","component","Number","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","element","getBoundingClientRect","clientX","left","clientY","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","ScreenDprMonitor","val","depth","clonedObject","_core","Terminal","_addonManager","_checkProposedApi","optionsService","allowProposedApi","onLineFeed","onSelectionChange","onData","onBinary","onTitleChange","onScroll","onKey","onRender","onResize","ParserApi","UnicodeApi","textarea","BufferNamespaceApi","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","registerLinkProvider","linkProvider","registerMarker","cursorYOffset","addMarker","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","writeln","paste","getOption","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","init","getLine","BufferLineApiView","_buffers","_onBufferChange","_normal","BufferApiView","normal","_alternate","alt","onBufferActivate","active","alternate","_line","getCell","startColumn","endColumn","registerCsiHandler","registerDcsHandler","registerEscHandler","registerOscHandler","provider","unicodeService","versions","activeVersion","version","browser","Browser","_keyDownHandled","_onKey","_onRender","_onSelectionChange","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","Linkifier","linkifier2","Linkifier2","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestReset","onRequestScroll","scroll","onRequestWindowsOptionsReport","_reportWindowsOptions","forwardEvent","onA11yChar","onA11yTab","_afterResize","_renderService","_customKeyEventHandler","parentNode","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","updateCursorStyle","_showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","body","_document","ownerDocument","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","coreBrowserService","CoreBrowserService","setService","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","onOptionChange","renderer","RenderService","onRenderedBufferChange","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onRequestSyncScrollBar","onDimensionsChange","SelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","explainEvents","passive","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","disp","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","charCode","which","_soundBell","playBellSound","hasValidSize","dimensions","toFixed","cellWidth","cellHeight","force","cancelEvents","stopPropagation","_visualBell","bellStyle","CoreTerminal","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","setTimeout","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","diff","dontRecurse","isCursorInViewport","lineHeight","cursorTop","cursorLeft","compositionViewBounds","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","table","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","_screenElement","_onRequestRedraw","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","bufferService","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","clearTimeout","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_color","_rgba","setCss","getCss","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_coreBrowserService","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","cursorX","_renderBlurCursor","isCursorVisible","cursorWidth","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onShowLinkUnderline","_onShowLinkUnderline","onHideLinkUnderline","_onHideLinkUnderline","_clearCurrentLink","middleRowCount","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","newWindow","opener","location","href","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","currentRow","lineWraps","forward","currentCol","bufferStr","mod","str","rpt","targetX","rowDifference","currX","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","bytes","dataURI","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","_terminal","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","_onResize","_onChar","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","forEach","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","lineLength","charElement","_applyMinimumContrast","_addStyle","padStart","padChar","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","_renderer","charSizeService","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","providerIndex","mouseService","renderService","_lastMouseEvent","_positionFromMouseEvent","composedPath","_lastBufferCell","_askForLink","_currentLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","linkWithState","endX","hasLinkBefore","linkAtPosition","find","_handleNewLink","currentLink","activate","_linkLeave","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","activeElement","hasFocus","_onBinary","_onData","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","DirtyRowService","UnicodeService","CharsetService","_writeBuffer","WriteBuffer","_windowsMode","writeSync","MINIMUM_COLS","MINIMUM_ROWS","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","recycle","isUserScrolling","oldYdisp","scrollAmount","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","_entries","entries","service","instance","ServiceCollection","_services","getService","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","off","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","BufferSet","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","scrollback","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","tabStopWidth","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","disableStdin","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","triggerBinaryEvent","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","down","up","drag","move","e1","e2","_providers","_onChange","defaultProvider","UnicodeV6","_activeProvider","num","BMP_COMBINING","HIGH_COMBINING","ucs","mid","glevel","_charsets","lastChar","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","_addons","terminal","loadedAddon","_wrappedAddonDispose","wasm","__exports","heap","getObject","heap_next","dropObject","takeObject","lTextDecoder","TextDecoder","cachedTextDecoder","ignoreBOM","fatal","cachegetUint8Memory0","getUint8Memory0","memory","getStringFromWasm0","ptr","addHeapObject","WASM_VECTOR_LEN","lTextEncoder","TextEncoder","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","read","written","passStringToWasm0","malloc","realloc","mem","isLikeNone","cachegetInt32Memory0","getInt32Memory0","debugString","description","builtInMatches","className","JSON","stringify","_","makeMutClosure","arg0","dtor","f","cnt","real","__wbindgen_export_2","original","__wbg_adapter_20","_ZN132__LT_dyn_u20_core__ops__function__FnMut_LT__LP__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17hf88ede1b5367cfb8E","_assertClass","klass","alt_run","AnimationFrameCallbackWrapper","__wrap","run","cachegetFloat32Memory0","getFloat32Memory0","Float32Array","handleError","__wbindgen_exn_store","getArrayU8FromWasm0","WideCharacterWidth","_0","_1","_2","free","__wbg_animationframecallbackwrapper_free","FunctionIdentifier","toJSON","__wbg_functionidentifier_free","retptr","__wbindgen_export_4","functionidentifier_prefix","r0","r1","v0","__wbindgen_free","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","functionidentifier_set_prefix","functionidentifier_intermediates","functionidentifier_set_intermediates","functionidentifier_final_byte","final_byte","functionidentifier_set_final_byte","LinkMatcherOptions","__wbg_linkmatcheroptions_free","__wbg_get_linkmatcheroptions_matchIndex","__wbg_set_linkmatcheroptions_matchIndex","__wbg_get_linkmatcheroptions_validationCallback","__wbg_get_linkmatcheroptions_tooltipCallback","__wbg_get_linkmatcheroptions_leaveCallback","__wbg_get_linkmatcheroptions_priority","__wbg_set_linkmatcheroptions_priority","__wbg_get_linkmatcheroptions_willLinkActivate","NoOpDispose","__wbg_noopdispose_free","TerminalOptions","__wbg_terminaloptions_free","__wbg_get_terminaloptions_allowProposedApi","__wbg_set_terminaloptions_allowProposedApi","__wbg_get_terminaloptions_allowTransparency","__wbg_set_terminaloptions_allowTransparency","__wbg_get_terminaloptions_bellStyle","__wbg_set_terminaloptions_bellStyle","__wbg_get_terminaloptions_cols","__wbg_set_terminaloptions_cols","__wbg_get_terminaloptions_convertEol","__wbg_set_terminaloptions_convertEol","__wbg_get_terminaloptions_cursorBlink","__wbg_set_terminaloptions_cursorBlink","__wbg_get_terminaloptions_cursorStyle","__wbg_set_terminaloptions_cursorStyle","__wbg_get_terminaloptions_cursorWidth","__wbg_set_terminaloptions_cursorWidth","__wbg_get_terminaloptions_disableStdin","__wbg_set_terminaloptions_disableStdin","__wbg_get_terminaloptions_drawBoldTextInBrightColors","__wbg_set_terminaloptions_drawBoldTextInBrightColors","__wbg_get_terminaloptions_fastScrollModifier","__wbg_set_terminaloptions_fastScrollModifier","__wbg_get_terminaloptions_fastScrollSensitivity","__wbg_set_terminaloptions_fastScrollSensitivity","__wbg_get_terminaloptions_fontSize","__wbg_set_terminaloptions_fontSize","__wbg_get_terminaloptions_fontWeight","__wbg_set_terminaloptions_fontWeight","__wbg_get_terminaloptions_fontWeightBold","__wbg_set_terminaloptions_fontWeightBold","__wbg_get_terminaloptions_letterSpacing","__wbg_set_terminaloptions_letterSpacing","__wbg_get_terminaloptions_lineHeight","__wbg_set_terminaloptions_lineHeight","__wbg_get_terminaloptions_linkTooltipHoverDuration","__wbg_set_terminaloptions_linkTooltipHoverDuration","__wbg_get_terminaloptions_logLevel","__wbg_set_terminaloptions_logLevel","__wbg_get_terminaloptions_macOptionClickForcesSelection","__wbg_set_terminaloptions_macOptionClickForcesSelection","__wbg_get_terminaloptions_macOptionIsMeta","__wbg_set_terminaloptions_macOptionIsMeta","__wbg_get_terminaloptions_minimumContrastRatio","__wbg_set_terminaloptions_minimumContrastRatio","__wbg_get_terminaloptions_rendererType","__wbg_set_terminaloptions_rendererType","__wbg_get_terminaloptions_rightClickSelectsWord","__wbg_set_terminaloptions_rightClickSelectsWord","__wbg_get_terminaloptions_rows","__wbg_set_terminaloptions_rows","__wbg_get_terminaloptions_screenReaderMode","__wbg_set_terminaloptions_screenReaderMode","__wbg_get_terminaloptions_scrollSensitivity","__wbg_set_terminaloptions_scrollSensitivity","__wbg_get_terminaloptions_scrollback","__wbg_set_terminaloptions_scrollback","__wbg_get_terminaloptions_tabStopWidth","__wbg_set_terminaloptions_tabStopWidth","__wbg_get_terminaloptions_windowsMode","__wbg_set_terminaloptions_windowsMode","bell_sound","terminaloptions_font_family","font_family","terminaloptions_set_font_family","terminaloptions_theme","Theme","terminaloptions_set_theme","terminaloptions_window_options","WindowOptions","window_options","terminaloptions_set_window_options","terminaloptions_word_separator","word_separator","terminaloptions_set_word_separator","__wbg_theme_free","theme_blue","theme_set_blue","theme_bright_black","bright_black","theme_set_bright_black","theme_bright_blue","bright_blue","theme_set_bright_blue","theme_bright_cyan","bright_cyan","theme_set_bright_cyan","theme_bright_green","bright_green","theme_set_bright_green","theme_bright_magenta","bright_magenta","theme_set_bright_magenta","theme_bright_red","bright_red","theme_set_bright_red","theme_bright_white","bright_white","theme_set_bright_white","theme_bright_yellow","bright_yellow","theme_set_bright_yellow","theme_cursor","theme_set_cursor","theme_cursor_accent","cursor_accent","theme_set_cursor_accent","theme_cyan","theme_set_cyan","theme_foreground","theme_set_foreground","theme_green","theme_set_green","theme_magenta","theme_set_magenta","theme_red","theme_set_red","theme_selection","theme_set_selection","theme_white","theme_set_white","theme_yellow","theme_set_yellow","ViewportRange","__wbg_viewportrange_free","__wbg_get_viewportrange_start","ViewportRangePosition","__wbg_set_viewportrange_start","__wbg_get_viewportrange_end","__wbg_set_viewportrange_end","__wbg_viewportrangeposition_free","__wbg_get_viewportrangeposition_x","__wbg_set_viewportrangeposition_x","__wbg_get_viewportrangeposition_y","__wbg_set_viewportrangeposition_y","__wbg_windowoptions_free","__wbg_get_windowoptions_fullscreenWin","__wbg_set_windowoptions_fullscreenWin","__wbg_get_windowoptions_getCellSizePixels","__wbg_set_windowoptions_getCellSizePixels","__wbg_get_windowoptions_getIconTitle","__wbg_set_windowoptions_getIconTitle","__wbg_get_windowoptions_getScreenSizeChars","__wbg_set_windowoptions_getScreenSizeChars","__wbg_get_windowoptions_getScreenSizePixels","__wbg_set_windowoptions_getScreenSizePixels","__wbg_get_windowoptions_getWinPosition","__wbg_set_windowoptions_getWinPosition","__wbg_get_windowoptions_getWinSizeChars","__wbg_set_windowoptions_getWinSizeChars","__wbg_get_windowoptions_getWinSizePixels","__wbg_set_windowoptions_getWinSizePixels","__wbg_get_windowoptions_getWinState","__wbg_set_windowoptions_getWinState","__wbg_get_windowoptions_getWinTitle","__wbg_set_windowoptions_getWinTitle","__wbg_get_windowoptions_lowerWin","__wbg_set_windowoptions_lowerWin","__wbg_get_windowoptions_maximizeWin","__wbg_set_windowoptions_maximizeWin","__wbg_get_windowoptions_minimizeWin","__wbg_set_windowoptions_minimizeWin","__wbg_get_windowoptions_popTitle","__wbg_set_windowoptions_popTitle","__wbg_get_windowoptions_pushTitle","__wbg_set_windowoptions_pushTitle","__wbg_get_windowoptions_raiseWin","__wbg_set_windowoptions_raiseWin","__wbg_get_windowoptions_refreshWin","__wbg_set_windowoptions_refreshWin","__wbg_get_windowoptions_restoreWin","__wbg_set_windowoptions_restoreWin","__wbg_get_windowoptions_setWinLines","__wbg_set_windowoptions_setWinLines","__wbg_get_windowoptions_setWinPosition","__wbg_set_windowoptions_setWinPosition","__wbg_get_windowoptions_setWinSizeChars","__wbg_set_windowoptions_setWinSizeChars","__wbg_get_windowoptions_setWinSizePixels","__wbg_set_windowoptions_setWinSizePixels","wasm_path","fetchPromise","fetch","resultPromise","WebAssembly","instantiateStreaming","response","arrayBuffer","instantiate","init_node","fs","readFile","__dirname","__wbindgen_cb_drop","__wbindgen_is_function","__wbindgen_string_new","__wbindgen_object_drop_ref","__wbindgen_object_clone_ref","__wbg_new_d9d9adcd590f8983","__wbg_cols_69058d29550793da","__wbg_rows_01fb1799b4fe09f6","__wbg_open_9f5ab6b87050dde5","__wbg_reset_56236028fb703e24","__wbg_write_127ae9e1488ba0d7","__wbg_instanceof_Window_e8f84259147dce74","Window","__wbg_document_d3b6d86af1c5d199","__wbg_crypto_571359f22faacd5e","crypto","__wbg_cancelAnimationFrame_396f71da29fb2b46","__wbg_requestAnimationFrame_e5d576010b9bc3a3","__wbg_getElementById_71dfbba1688677b0","getElementById","__wbg_getRandomValues_ed3960a0dccdd876","getRandomValues","__wbg_log_61ea781bd002cc41","__wbg_call_e9f0ce4da840ab94","__wbg_newnoargs_e2fdfe2af14a2323","Function","__wbg_self_179e8c2a5a4c73a3","__wbg_window_492cfe63a6e41dfa","__wbg_globalThis_8ebfea75c2dd63ee","globalThis","__wbg_global_62ea2619f58bf94d","global","__wbindgen_is_undefined","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","__wbg_error_4bb6c2a97407129a","__wbindgen_string_get","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_closure_wrapper125","wasm_bindgen","assign"],"mappings":"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GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE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,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACtL,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC1H,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IACxJ,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAClP,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAG,EAAGE,GAAI,EAAGG,IAAK,EAAGE,IAAK,EAAGC,IAAK,EAAGC,IAAK,IAC/D,IAAK,CAAC,CAACV,GAAI,EAAGE,GAAI,EAAGD,GAAG,EAAGE,GAAI,EAAGG,IAAK,EAAGE,IAAK,EAAGC,IAAK,EAAGC,IAAK,IAC/D,IAAK,CAAC,CAACV,GAAI,EAAGE,GAAI,EAAGD,GAAG,EAAGE,GAAI,EAAGG,IAAK,EAAGE,IAAK,EAAGC,IAAK,EAAGC,IAAK,IAC/D,IAAK,CAAC,CAACV,GAAI,EAAGE,GAAI,EAAGD,GAAG,EAAGE,GAAI,EAAGG,IAAK,EAAGE,IAAK,EAAGC,IAAK,EAAGC,IAAK,IAC/D,IAAK,CAAC,CAACV,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAChC,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC9D,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,IAC5F,IAAK,CAAC,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,GAAI,CAACH,GAAI,EAAGE,GAAI,EAAGD,GAAI,EAAGE,GAAI,KAGxFpB,EAA4C,CAChD,IAAK,CAAC,CAACpC,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAC5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAG5B,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAG5B,IAAK,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE5B,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IACpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE9D,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE9D,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE9D,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE9D,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAE9D,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGlH,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAEpC,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGpC,KAAa,CACX,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGlD,KAAa,CACX,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAChD,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,IAGlD,KAAa,CAAC,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,GAAI,CAAC1C,EAAG,EAAGC,EAAG,EAAGwC,EAAG,EAAGC,EAAG,eCluBhE,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,gBAAA,EAAA,uBAAA,EAAA,qBAAA,EAzBa,EAAA8C,gBAAwD,IAAIC,IAEzE,EAAuCC,uBAAAA,SAAAA,GACrC,OAAOA,EAAoB,iBAAK,IAGlC,EAAmC1f,gBAAAA,SAAAA,GACjC,GAAI,EAAAwf,gBAAgBG,IAAI3f,GACtB,OAAO,EAAAwf,gBAAgBhc,IAAIxD,GAG7B,IAAM4f,EAAiB,SAAUtT,EAAkBpI,EAAaqC,GAC9D,GAAyB,IAArBsZ,UAAU5f,OACZ,MAAM,IAAIf,MAAM,qEAYtB,SAAgCc,EAAcsM,EAAkB/F,GACzD+F,EAAwB,YAAMA,EAChCA,EAA8B,gBAAEvH,KAAK,CAAE/E,GAAE,EAAEuG,MAAK,KAEhD+F,EAA8B,gBAAI,CAAC,CAAEtM,GAAE,EAAEuG,MAAK,IAC9C+F,EAAwB,UAAIA,GAd7BwT,CAAuBF,EAAWtT,EAAQ/F,IAM5C,OAHAqZ,EAAU7R,SAAW,WAAM,OAAA/N,GAE3B,EAAAwf,gBAAgBO,IAAI/f,EAAI4f,GACjBA,aClBT,EAAA,EAAA,GAAA,aAAA,SAAgBI,EAAmCpZ,EAAUhD,EAAekI,EAAmBC,GAK7F,QAL0E,IAAAD,IAAA,EAAA,QAAmB,IAAAC,IAAcnF,EAAAA,EAAM3G,QAK7G6L,GAASlF,EAAM3G,OACjB,OAAO2G,EAETkF,GAASlF,EAAM3G,OAAS6L,GAASlF,EAAM3G,OAErC8L,EADEA,GAAOnF,EAAM3G,OACT2G,EAAM3G,QAEL2G,EAAM3G,OAAS8L,GAAOnF,EAAM3G,OAErC,IAAK,IAAIsC,EAAIuJ,EAAOvJ,EAAIwJ,IAAOxJ,EAC7BqE,EAAMrE,GAAKqB,EAEb,OAAOgD,SAzBT,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,OAAA,EAAA,aAAA,EAAA,UAAA,EAAA,EAA2CA,KAAAA,SAAAA,EAAUhD,EAAekI,EAAgBC,GAElF,OAAInF,EAAMgG,KACDhG,EAAMgG,KAAKhJ,EAAOkI,EAAOC,GAE3BiU,EAAapZ,EAAOhD,EAAOkI,EAAOC,IAG3C,EAwBA,aAAA,EAAA,EAA6CzJ,OAAAA,SAAAA,EAAM+L,GACjD,IAAMrC,EAAS,IAAK1J,EAAE2d,YAAoB3d,EAAErC,OAASoO,EAAEpO,QAGvD,OAFA+L,EAAO+T,IAAIzd,GACX0J,EAAO+T,IAAI1R,EAAG/L,EAAErC,QACT+L,aC1CT,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EA4Ba,EAAA,GAAA,EAAAkU,kBAAoB7c,OAAO8c,OAAO,IAAI,EAAAvX,eAiBnD,IAME,EAAA,WAAA,SAAYuV,EAAAA,EAAciC,EAAiCC,QAAA,IAAAA,IAAA,GAAA,GAAAA,KAAAA,UAJjD,EAAA,KAAAC,UAAuC,GACvC,KAAAC,eAAmD,GAI3D3b,KAAK4b,MAAQ,IAAIC,YAxCH,EAwCetC,GAE7B,IADA,IAAMrD,EAAOsF,GAAgB,EAAAnY,SAASF,aAAa,CAAC,EAAG,EAAAZ,eAAgB,EAAAC,gBAAiB,EAAAC,iBAC/E9E,EAAI,EAAGA,EAAI4b,IAAQ5b,EAC1BqC,KAAK8b,QAAQne,EAAGuY,GAElBlW,KAAK3E,OAASke,EAsXlB,OA/WS,EAAA3a,UAAAA,IAAP,SAAW+C,GACT,IAAMkB,EAAU7C,KAAK4b,MArDP,EAqDaja,EAAoB,GACzC2G,EAAe,QAAVzF,EACX,MAAO,CACL7C,KAAK4b,MAxDO,EAwDDja,EAAoB,GACpB,QAAVkB,EACG7C,KAAK0b,UAAU/Z,GACf,EAAO,EAAA+B,oBAAoB4E,GAAM,GACrCzF,GAAW,GACA,QAAVA,EACG7C,KAAK0b,UAAU/Z,GAAOiC,WAAW5D,KAAK0b,UAAU/Z,GAAOtG,OAAS,GAChEiN,IAQD,EAAA6S,UAAAA,IAAP,SAAWxZ,EAAe3C,GACxBgB,KAAK4b,MAxES,EAwEHja,EAAoB,GAAW3C,EAAM,EAAAmD,sBAC5CnD,EAAM,EAAAoD,sBAAsB/G,OAAS,GACvC2E,KAAK0b,UAAU/Z,GAAS3C,EAAM,GAC9BgB,KAAK4b,MA3EO,EA2EDja,EAAoB,GAAwB,QAARA,EAAoC3C,EAAM,EAAAqD,wBAA0B,IAEnHrC,KAAK4b,MA7EO,EA6EDja,EAAoB,GAAgB3C,EAAM,EAAAoD,sBAAsBwB,WAAW,GAAM5E,EAAM,EAAAqD,wBAA0B,IAQzH,EAAAmB,UAAAA,SAAP,SAAgB7B,GACd,OAAO3B,KAAK4b,MAtFE,EAsFIja,EAAoB,IAAiB,IAIlD,EAAAoa,UAAAA,SAAP,SAAgBpa,GACd,OAAsD,SAA/C3B,KAAK4b,MA3FE,EA2FIja,EAAoB,IAIjC,EAAAqa,UAAAA,MAAP,SAAara,GACX,OAAO3B,KAAK4b,MAhGE,EAgGIja,EAAoB,IAIjC,EAAAsa,UAAAA,MAAP,SAAata,GACX,OAAO3B,KAAK4b,MArGE,EAqGIja,EAAoB,IAQjC,EAAAua,UAAAA,WAAP,SAAkBva,GAChB,OAAsD,QAA/C3B,KAAK4b,MA9GE,EA8GIja,EAAoB,IAQjC,EAAAwa,UAAAA,aAAP,SAAoBxa,GAClB,IAAMkB,EAAU7C,KAAK4b,MAvHP,EAuHaja,EAAoB,GAC/C,OAAc,QAAVkB,EACK7C,KAAK0b,UAAU/Z,GAAOiC,WAAW5D,KAAK0b,UAAU/Z,GAAOtG,OAAS,GAExD,QAAVwH,GAIF,EAAAU,UAAAA,WAAP,SAAkB5B,GAChB,OAAsD,QAA/C3B,KAAK4b,MAhIE,EAgIIja,EAAoB,IAIjC,EAAAya,UAAAA,UAAP,SAAiBza,GACf,IAAMkB,EAAU7C,KAAK4b,MArIP,EAqIaja,EAAoB,GAC/C,OAAc,QAAVkB,EACK7C,KAAK0b,UAAU/Z,GAEV,QAAVkB,EACK,EAAAa,oBAA8B,QAAVb,GAGtB,IAOF,EAAAwZ,UAAAA,SAAP,SAAgB1a,EAAeuU,GAC7B,IAAMoG,EArJQ,EAqJK3a,EAUnB,OATAuU,EAAKrT,QAAU7C,KAAK4b,MAAMU,EAAa,GACvCpG,EAAKpT,GAAK9C,KAAK4b,MAAMU,EAAa,GAClCpG,EAAKnT,GAAK/C,KAAK4b,MAAMU,EAAa,GACf,QAAfpG,EAAKrT,UACPqT,EAAKhT,aAAelD,KAAK0b,UAAU/Z,IAEvB,UAAVuU,EAAKnT,KACPmT,EAAKlT,SAAWhD,KAAK2b,eAAeha,IAE/BuU,GAMF,EAAA4F,UAAAA,QAAP,SAAena,EAAeuU,GACT,QAAfA,EAAKrT,UACP7C,KAAK0b,UAAU/Z,GAASuU,EAAKhT,cAEjB,UAAVgT,EAAKnT,KACP/C,KAAK2b,eAAeha,GAASuU,EAAKlT,UAEpChD,KAAK4b,MA5KS,EA4KHja,EAAoB,GAAgBuU,EAAKrT,QACpD7C,KAAK4b,MA7KS,EA6KHja,EAAoB,GAAWuU,EAAKpT,GAC/C9C,KAAK4b,MA9KS,EA8KHja,EAAoB,GAAWuU,EAAKnT,IAQ1C,EAAAwZ,UAAAA,qBAAP,SAA4B5a,EAAemF,EAAmB+N,EAAe/R,EAAYC,EAAYyZ,GAC1F,UAALzZ,IACF/C,KAAK2b,eAAeha,GAAS6a,GAE/Bxc,KAAK4b,MA1LS,EA0LHja,EAAoB,GAAgBmF,EAAa+N,GAAS,GACrE7U,KAAK4b,MA3LS,EA2LHja,EAAoB,GAAWmB,EAC1C9C,KAAK4b,MA5LS,EA4LHja,EAAoB,GAAWoB,GASrC,EAAA0Z,UAAAA,mBAAP,SAA0B9a,EAAemF,GACvC,IAAIjE,EAAU7C,KAAK4b,MAtML,EAsMWja,EAAoB,GAC/B,QAAVkB,EAEF7C,KAAK0b,UAAU/Z,IAAU,EAAA+B,oBAAoBoD,IAE/B,QAAVjE,GAIF7C,KAAK0b,UAAU/Z,GAAS,EAAA+B,oBAA8B,QAAVb,GAAoC,EAAAa,oBAAoBoD,GACpGjE,IAAW,QACXA,GAAW,SAIXA,EAAUiE,EAAa,GAAK,GAE9B9G,KAAK4b,MAvNO,EAuNDja,EAAoB,GAAgBkB,IAI5C,EAAA6Z,UAAAA,YAAP,SAAmBnU,EAAa/I,EAAWgc,EAAyBmB,GAQlE,IAPApU,GAAOvI,KAAK3E,SAG0B,IAA3B2E,KAAKwD,SAAS+E,EAAM,IAC7BvI,KAAKuc,qBAAqBhU,EAAM,EAAG,EAAG,GAAGoU,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,eAG1GzD,EAAIQ,KAAK3E,OAASkN,EAAK,CAEzB,IADA,IAAM2N,EAAO,IAAI,EAAA7S,SACR1F,EAAIqC,KAAK3E,OAASkN,EAAM/I,EAAI,EAAG7B,GAAK,IAAKA,EAChDqC,KAAK8b,QAAQvT,EAAM/I,EAAI7B,EAAGqC,KAAKqc,SAAS9T,EAAM5K,EAAGuY,IAEnD,IAASvY,EAAI,EAAGA,EAAI6B,IAAK7B,EACvBqC,KAAK8b,QAAQvT,EAAM5K,EAAG6d,QAGxB,IAAS7d,EAAI4K,EAAK5K,EAAIqC,KAAK3E,SAAUsC,EACnCqC,KAAK8b,QAAQne,EAAG6d,GAKmB,IAAnCxb,KAAKwD,SAASxD,KAAK3E,OAAS,IAC9B2E,KAAKuc,qBAAqBvc,KAAK3E,OAAS,EAAG,EAAG,GAAGshB,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,gBAIjH,EAAA2Z,UAAAA,YAAP,SAAmBrU,EAAa/I,EAAWgc,EAAyBmB,GAElE,GADApU,GAAOvI,KAAK3E,OACRmE,EAAIQ,KAAK3E,OAASkN,EAAK,CAEzB,IADA,IAAM2N,EAAO,IAAI,EAAA7S,SACR1F,EAAI,EAAGA,EAAIqC,KAAK3E,OAASkN,EAAM/I,IAAK7B,EAC3CqC,KAAK8b,QAAQvT,EAAM5K,EAAGqC,KAAKqc,SAAS9T,EAAM/I,EAAI7B,EAAGuY,IAEnD,IAASvY,EAAIqC,KAAK3E,OAASmE,EAAG7B,EAAIqC,KAAK3E,SAAUsC,EAC/CqC,KAAK8b,QAAQne,EAAG6d,QAGlB,IAAS7d,EAAI4K,EAAK5K,EAAIqC,KAAK3E,SAAUsC,EACnCqC,KAAK8b,QAAQne,EAAG6d,GAOhBjT,GAAkC,IAA3BvI,KAAKwD,SAAS+E,EAAM,IAC7BvI,KAAKuc,qBAAqBhU,EAAM,EAAG,EAAG,GAAGoU,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,eAEnF,IAAvBjD,KAAKwD,SAAS+E,IAAevI,KAAKkc,WAAW3T,IAC/CvI,KAAKuc,qBAAqBhU,EAAK,EAAG,GAAGoU,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,gBAIrG,EAAA4Z,UAAAA,aAAP,SAAoB3V,EAAeC,EAAaqU,EAAyBmB,GAUvE,IARIzV,GAAsC,IAA7BlH,KAAKwD,SAAS0D,EAAQ,IACjClH,KAAKuc,qBAAqBrV,EAAQ,EAAG,EAAG,GAAGyV,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,eAG5GkE,EAAMnH,KAAK3E,QAAqC,IAA3B2E,KAAKwD,SAAS2D,EAAM,IAC3CnH,KAAKuc,qBAAqBpV,EAAK,EAAG,GAAGwV,MAAS,OAAA,EAATA,EAAW7Z,KAAM,GAAG6Z,MAAS,OAAA,EAATA,EAAW5Z,KAAM,GAAG4Z,MAAS,OAAA,EAATA,EAAW3Z,WAAY,IAAI,EAAAC,eAGnGiE,EAAQC,GAAQD,EAAQlH,KAAK3E,QAClC2E,KAAK8b,QAAQ5U,IAASsU,IAInB,EAAAlH,UAAAA,OAAP,SAAciF,EAAciC,GAC1B,GAAIjC,IAASvZ,KAAK3E,OAAlB,CAGA,GAAIke,EAAOvZ,KAAK3E,OAAQ,CACtB,IAAM4L,EAAO,IAAI4U,YAtSL,EAsSiBtC,GACzBvZ,KAAK3E,SAvSG,EAwSNke,EAAmBvZ,KAAK4b,MAAMvgB,OAChC4L,EAAKkU,IAAInb,KAAK4b,MAAMkB,SAAS,EAzSrB,EAySwBvD,IAEhCtS,EAAKkU,IAAInb,KAAK4b,QAGlB5b,KAAK4b,MAAQ3U,EACb,IAAK,IAAItJ,EAAIqC,KAAK3E,OAAQsC,EAAI4b,IAAQ5b,EACpCqC,KAAK8b,QAAQne,EAAG6d,QAGlB,GAAIjC,EAAM,EACFtS,EAAO,IAAI4U,YApTP,EAoTmBtC,IACxB4B,IAAInb,KAAK4b,MAAMkB,SAAS,EArTnB,EAqTsBvD,IAChCvZ,KAAK4b,MAAQ3U,EAEb,IAAM8V,EAAOte,OAAOse,KAAK/c,KAAK0b,WAC9B,IAAS/d,EAAI,EAAGA,EAAIof,EAAK1hB,OAAQsC,IAAK,CACpC,IAAM2B,EAAMwL,SAASiS,EAAKpf,GAAI,IAC1B2B,GAAOia,UACFvZ,KAAK0b,UAAUpc,SAI1BU,KAAK4b,MAAQ,IAAIC,YAAY,GAC7B7b,KAAK0b,UAAY,GAGrB1b,KAAK3E,OAASke,IAIT,EAAAvR,UAAAA,KAAP,SAAYwT,GACVxb,KAAK0b,UAAY,GACjB1b,KAAK2b,eAAiB,GACtB,IAAK,IAAIhe,EAAI,EAAGA,EAAIqC,KAAK3E,SAAUsC,EACjCqC,KAAK8b,QAAQne,EAAG6d,IAKb,EAAAwB,UAAAA,SAAP,SAAgBC,GASd,IAAK,IAAM5Q,KARPrM,KAAK3E,SAAW4hB,EAAK5hB,OACvB2E,KAAK4b,MAAQ,IAAIC,YAAYoB,EAAKrB,OAGlC5b,KAAK4b,MAAMT,IAAI8B,EAAKrB,OAEtB5b,KAAK3E,OAAS4hB,EAAK5hB,OACnB2E,KAAK0b,UAAY,GACAuB,EAAKvB,UACpB1b,KAAK0b,UAAUrP,GAAM4Q,EAAKvB,UAAUrP,GAGtC,IAAK,IAAMA,KADXrM,KAAK2b,eAAiB,GACLsB,EAAKtB,eACpB3b,KAAK2b,eAAetP,GAAM4Q,EAAKtB,eAAetP,GAEhDrM,KAAKyb,UAAYwB,EAAKxB,WAIjB,EAAAhX,UAAAA,MAAP,WACE,IAAMyY,EAAU,IAAIC,EAAW,GAG/B,IAAK,IAAM9Q,KAFX6Q,EAAQtB,MAAQ,IAAIC,YAAY7b,KAAK4b,OACrCsB,EAAQ7hB,OAAS2E,KAAK3E,OACL2E,KAAK0b,UACpBwB,EAAQxB,UAAUrP,GAAMrM,KAAK0b,UAAUrP,GAEzC,IAAK,IAAMA,KAAMrM,KAAK2b,eACpBuB,EAAQvB,eAAetP,GAAMrM,KAAK2b,eAAetP,GAGnD,OADA6Q,EAAQzB,UAAYzb,KAAKyb,UAClByB,GAGF,EAAAE,UAAAA,iBAAP,WACE,IAAK,IAAIzf,EAAIqC,KAAK3E,OAAS,EAAGsC,GAAK,IAAKA,EACtC,GAAgD,QAA3CqC,KAAK4b,MArXE,EAqXIje,EAAgB,GAC9B,OAAOA,GAAKqC,KAAK4b,MAtXP,EAsXaje,EAAgB,IAAiB,IAG5D,OAAO,GAGF,EAAA0f,UAAAA,cAAP,SAAqBC,EAAiBC,EAAgBC,EAAiBniB,EAAgBoiB,GACrF,IAAMC,EAAUJ,EAAI1B,MACpB,GAAI6B,EACF,IAAK,IAAIvH,EAAO7a,EAAS,EAAG6a,GAAQ,EAAGA,IACrC,IAAK,IAAIvY,EAAI,EAAGA,EAhYN,EAgYqBA,IAC7BqC,KAAK4b,MAjYG,GAiYI4B,EAAUtH,GAAoBvY,GAAK+f,EAjYvC,GAiYgDH,EAASrH,GAAoBvY,QAIzF,IAASuY,EAAO,EAAGA,EAAO7a,EAAQ6a,IAChC,IAASvY,EAAI,EAAGA,EAtYN,EAsYqBA,IAC7BqC,KAAK4b,MAvYG,GAuYI4B,EAAUtH,GAAoBvY,GAAK+f,EAvYvC,GAuYgDH,EAASrH,GAAoBvY,GAM3F,IAAMggB,EAAkBlf,OAAOse,KAAKO,EAAI5B,WACxC,IAAS/d,EAAI,EAAGA,EAAIggB,EAAgBtiB,OAAQsC,IAAK,CAC/C,IAAM2B,EAAMwL,SAAS6S,EAAgBhgB,GAAI,IACrC2B,GAAOie,IACTvd,KAAK0b,UAAUpc,EAAMie,EAASC,GAAWF,EAAI5B,UAAUpc,MAKtD,EAAAse,UAAAA,kBAAP,SAAyBC,EAA4BC,EAAsBC,QAAlD,IAAAF,IAAA,GAAA,QAA4B,IAAAC,IAAA,EAAA,QAAsB,IAAAC,IAAiB/d,EAAAA,KAAK3E,QAC3FwiB,IACFE,EAAS3T,KAAKwB,IAAImS,EAAQ/d,KAAKod,qBAGjC,IADA,IAAIhW,EAAS,GACN0W,EAAWC,GAAQ,CACxB,IAAMlb,EAAU7C,KAAK4b,MA5ZT,EA4ZekC,EAAuB,GAC5CxV,EAAe,QAAVzF,EACXuE,GAAqB,QAAVvE,EAAsC7C,KAAK0b,UAAUoC,GAAY,EAAO,EAAApa,oBAAoB4E,GAAM,EAAA5F,qBAC7Gob,GAAajb,GAAW,IAAwB,EAElD,OAAOuE,GAEX,EA5XE,GANW,EAAA+V,uBCjDb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,6BAAA,EAAA,yCAAwC,IAAA,EAAA,EACtC,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,IAAgB,IAAAa,EAAAA,EAAAA,EAAAA,EAAA,EAAU,EAAA,OAAA,IAAA,CAArB,IAAMjhB,EAAC,EACM,GAAA,QAAhB,EAAAA,MAAC,OAAA,EAADA,EAAGkhB,qBAAa,IAAEC,GAAAA,EAAAA,YAAYnhB,eCDvB,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,EAAAohB,YAAc,iBAGd,EAAAC,cAAgB,2ECF3B,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,aAAA,EAAA,8BAAA,EAAA,IAuFYC,EAvFZ,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EAEA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,EACA,EAAA,IAAA,EAKMC,EAAAA,IAAAA,EAAkC,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAqCtF,SAASC,EAAoB/e,EAAWgf,GACtC,GAAIhf,EAAI,GACN,OAAOgf,EAAKC,cAAe,EAE7B,OAAQjf,GACN,KAAK,EAAG,QAASgf,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,GAGT,SAAYJ,GACV,EACA,EAAA,oBAAA,GAAA,sBAAA,EAFF,EAAA,qBAAA,GAAA,uBAAA,CAAYA,EAAA,EAAAA,2BAAA,EAAAA,yBAAwB,KAoCpC,IAGE,EAAA,WAAA,SACU9M,EAAAA,EACAwO,EACAC,EACAxO,GAHA,KAAAD,eACA,EAAA,KAAAwO,aACA,EAAA,KAAAC,YACA,EAAA,KAAAxO,gBANF,EAAA,KAAAoK,MAAqB,IAAIC,YAAY,GAgD/C,OAvCS,EAAAoE,UAAAA,KAAP,SAAYC,GACVlgB,KAAK4b,MAAQ,IAAIC,YAAY,IAGxB,EAAAsE,UAAAA,IAAP,SAAWlZ,EAAmBC,EAAeC,GAC3CnH,KAAK4b,MAAQ,EAAAwE,OAAOpgB,KAAK4b,MAAO3U,EAAK6V,SAAS5V,EAAOC,KAGhD,EAAAkZ,UAAAA,OAAP,SAAcC,GACZ,GAAKA,EAAL,CAIA,IAAMrZ,EAAO,EAAAsZ,cAAcvgB,KAAK4b,OAEhC,OADA5b,KAAK4b,MAAQ,IAAIC,YAAY,GACrB5U,GAEN,IAAK,KACH,OAAOjH,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,UAAU,EAAA5B,GAAG4B,IAAG,MACrE,IAAK,KACH,OAAO1O,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,aAAa,EAAA5B,GAAG4B,IAAG,MACxE,IAAK,IACH,IAAM+R,EAAWzgB,KAAKuR,eAAemP,OAAOC,UAAY,EAChD,KAAO3gB,KAAKuR,eAAemP,OAAOE,aAAe,GAAK,IAC9D,OAAO5gB,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,OAAO+R,EAAK,EAAA3T,GAAG4B,IAAG,MACvE,IAAK,IAEH,OAAO1O,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,SAAS,EAAA5B,GAAG4B,IAAG,MACpE,IAAK,KACH,IACI+D,EADoC,CAAC,MAAS,EAAG,UAAa,EAAG,IAAO,GACzDzS,KAAKwR,gBAAgB9K,QAAQma,aAEhD,OADApO,GAASzS,KAAKwR,gBAAgB9K,QAAQoa,YAAc,EAAI,EACjD9gB,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,OAAO+D,EAAK,KAAK,EAAA3F,GAAG4B,IAAG,MAC5E,QAEE1O,KAAKggB,YAAYe,MAAM,oBAAqB9Z,GAC5CjH,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,OAAO,EAAA5B,GAAG4B,IAAG,YA1B3D1O,KAAK4b,MAAQ,IAAIC,YAAY,IA6BnC,EA9CE,GAiFF,EAuCE,SAAA,GAAA,SACmBtK,EAAAA,EACAyP,EACAjB,EACAkB,EACAjB,EACAxO,EACA0P,EACAC,EACAC,QAAA,IAAAA,IAAA,EAAA,IAAqC,EAAAC,sBATxD,IAWE,EAAA,EAAO,KAAA,OAAA,KAVU,EAAA9P,eACA,EAAA,EAAAyP,gBACA,EAAA,EAAAjB,aACA,EAAA,EAAAkB,iBACA,EAAA,EAAAjB,YACA,EAAA,EAAAxO,gBACA,EAAA,EAAA0P,kBACA,EAAA,EAAAC,gBACA,EAAA,EAAAC,QA/CX,EAAA,EAAAE,aAA4B,IAAIzF,YAAY,MAC5C,EAAA0F,eAAgC,IAAI,EAAA1Z,cACpC,EAAA2Z,aAA4B,IAAI,EAAA7Y,YAChC,EAAA8Y,UAAsB,IAAI,EAAApe,SAC1B,EAAAqe,aAAe,GACf,EAAAC,UAAY,GACV,EAAAC,kBAA8B,GAC9B,EAAAC,eAA2B,GAE7B,EAAAC,aAA+B,EAAAxG,kBAAkB7W,QACjD,EAAAsd,uBAAyC,EAAAzG,kBAAkB7W,QAE3D,EAAAud,eAAiB,IAAI,EAAArhB,aAErB,EAAAshB,sBAAwB,IAAI,EAAAthB,aAE5B,EAAAuhB,gBAAkB,IAAI,EAAAvhB,aAEtB,EAAAwhB,iBAAmB,IAAI,EAAAxhB,aAEvB,EAAAyhB,wBAA0B,IAAI,EAAAzhB,aAE9B,EAAA0hB,+BAAiC,IAAI,EAAA1hB,aAGrC,EAAA2hB,YAAc,IAAI,EAAA3hB,aAElB,EAAA4hB,WAAa,IAAI,EAAA5hB,aAEjB,EAAA6hB,cAAgB,IAAI,EAAA7hB,aAEpB,EAAA8hB,YAAc,IAAI,EAAA9hB,aAElB,EAAA+hB,UAAY,IAAI,EAAA/hB,aAEhB,EAAAgiB,eAAiB,IAAI,EAAAhiB,aAe3B,EAAKpE,SAAS,EAAK6kB,SAKnB,EAAKA,QAAQwB,sBAAsB,SAACC,EAAO3C,GACzC,EAAKF,YAAYe,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,GAAQ3C,OAAQA,EAAO8C,cAE/G,EAAK5B,QAAQ6B,sBAAsB,SAAAJ,GACjC,EAAK7C,YAAYe,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,OAExF,EAAKzB,QAAQ8B,0BAA0B,SAAA1nB,GACrC,EAAKwkB,YAAYe,MAAM,yBAA0B,CAAEvlB,KAAI,MAEzD,EAAK4lB,QAAQ+B,sBAAsB,SAACL,EAAYM,EAAQnc,GACtD,EAAK+Y,YAAYe,MAAM,qBAAsB,CAAE+B,WAAU,EAAEM,OAAM,EAAEnc,KAAI,MAEzE,EAAKma,QAAQiC,sBAAsB,SAACR,EAAOO,EAAQE,GAClC,SAAXF,IACFE,EAAUA,EAAQN,WAEpB,EAAKhD,YAAYe,MAAM,qBAAsB,CAAE+B,WAAY,EAAK1B,QAAQ2B,cAAcF,GAAQO,OAAM,EAAEE,QAAO,MAM/G,EAAKlC,QAAQmC,gBAAgB,SAACtc,EAAMC,EAAOC,GAAQ,OAAKqc,EAAAA,MAAMvc,EAAMC,EAAOC,KAK3E,EAAKia,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKyD,EAAAA,YAAYzD,KACpE,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,KAAM,SAAAxD,GAAU,OAAK2D,EAAAA,WAAW3D,KACvF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK4D,EAAAA,SAAS5D,KACjE,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,KAAM,SAAAxD,GAAU,OAAK6D,EAAAA,YAAY7D,KACxF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK8D,EAAAA,WAAW9D,KACnE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK+D,EAAAA,cAAc/D,KACtE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKgE,EAAAA,eAAehE,KACvE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKiE,EAAAA,eAAejE,KACvE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKkE,EAAAA,oBAAoBlE,KAC5E,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKmE,EAAAA,mBAAmBnE,KAC3E,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKoE,EAAAA,eAAepE,KACvE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKqE,EAAAA,iBAAiBrE,KACzE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKsE,EAAAA,eAAetE,KACvE,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAKsE,EAAAA,eAAetE,KACpF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKwE,EAAAA,YAAYxE,KACpE,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAKwE,EAAAA,YAAYxE,KACjF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKyE,EAAAA,YAAYzE,KACpE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK0E,EAAAA,YAAY1E,KACpE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK2E,EAAAA,YAAY3E,KACpE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK4E,EAAAA,SAAS5E,KACjE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK6E,EAAAA,WAAW7E,KACnE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK8E,EAAAA,WAAW9E,KACnE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK+E,EAAAA,kBAAkB/E,KAC1E,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKgF,EAAAA,gBAAgBhF,KACxE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKiF,EAAAA,kBAAkBjF,KAC1E,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKkF,EAAAA,yBAAyBlF,KACjF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKmF,EAAAA,4BAA4BnF,KACpF,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAKoF,EAAAA,8BAA8BpF,KACnG,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKqF,EAAAA,gBAAgBrF,KACxE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKsF,EAAAA,kBAAkBtF,KAC1E,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKuF,EAAAA,WAAWvF,KACnE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKwF,EAAAA,SAASxF,KACjE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKyF,EAAAA,QAAQzF,KAChE,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAK0F,EAAAA,eAAe1F,KACpF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK2F,EAAAA,UAAU3F,KAClE,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAK4F,EAAAA,iBAAiB5F,KACtF,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK6F,EAAAA,eAAe7F,KACvE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAK8F,EAAAA,aAAa9F,KACrE,EAAKkB,QAAQqC,cAAc,CAACgB,OAAQ,IAAKf,MAAO,KAAM,SAAAxD,GAAU,OAAK+F,EAAAA,oBAAoB/F,KACzF,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,KAAM,SAAAxD,GAAU,OAAKgG,EAAAA,UAAUhG,KACtF,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAKF,MAAO,KAAM,SAAAxD,GAAU,OAAKiG,EAAAA,eAAejG,KAC3F,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKkG,EAAAA,gBAAgBlG,KACxE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKmG,EAAAA,WAAWnG,KACnE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKoG,EAAAA,cAAcpG,KACtE,EAAKkB,QAAQqC,cAAc,CAACC,MAAO,KAAM,SAAAxD,GAAU,OAAKqG,EAAAA,cAAcrG,KACtE,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAMF,MAAO,KAAM,SAAAxD,GAAU,OAAKsG,EAAAA,cAActG,KAC3F,EAAKkB,QAAQqC,cAAc,CAACG,cAAe,IAAMF,MAAO,KAAM,SAAAxD,GAAU,OAAKuG,EAAAA,cAAcvG,KAK3F,EAAKkB,QAAQsF,kBAAkB,EAAA5Z,GAAGQ,IAAK,WAAM,OAAKqZ,EAAAA,SAClD,EAAKvF,QAAQsF,kBAAkB,EAAA5Z,GAAGW,GAAI,WAAM,OAAKmZ,EAAAA,aACjD,EAAKxF,QAAQsF,kBAAkB,EAAA5Z,GAAGY,GAAI,WAAM,OAAKkZ,EAAAA,aACjD,EAAKxF,QAAQsF,kBAAkB,EAAA5Z,GAAGa,GAAI,WAAM,OAAKiZ,EAAAA,aACjD,EAAKxF,QAAQsF,kBAAkB,EAAA5Z,GAAGc,GAAI,WAAM,OAAKiZ,EAAAA,mBACjD,EAAKzF,QAAQsF,kBAAkB,EAAA5Z,GAAGS,GAAI,WAAM,OAAKuZ,EAAAA,cACjD,EAAK1F,QAAQsF,kBAAkB,EAAA5Z,GAAGU,GAAI,WAAM,OAAKuZ,EAAAA,QACjD,EAAK3F,QAAQsF,kBAAkB,EAAA5Z,GAAGe,GAAI,WAAM,OAAKmZ,EAAAA,aACjD,EAAK5F,QAAQsF,kBAAkB,EAAA5Z,GAAGgB,GAAI,WAAM,OAAKmZ,EAAAA,YAGjD,EAAK7F,QAAQsF,kBAAkB,EAAAzX,GAAGK,IAAK,WAAM,OAAK3N,EAAAA,UAClD,EAAKyf,QAAQsF,kBAAkB,EAAAzX,GAAGM,IAAK,WAAM,OAAK2X,EAAAA,aAClD,EAAK9F,QAAQsF,kBAAkB,EAAAzX,GAAGS,IAAK,WAAM,OAAKyX,EAAAA,WAMlD,EAAK/F,QAAQgG,cAAc,EAAG,IAAI,EAAAC,WAAW,SAACpgB,GAAmB,EAAKqgB,SAASrgB,GAAO,EAAKsgB,YAAYtgB,MAEvG,EAAKma,QAAQgG,cAAc,EAAG,IAAI,EAAAC,WAAW,SAACpgB,GAAiB,OAAKsgB,EAAAA,YAAYtgB,MAEhF,EAAKma,QAAQgG,cAAc,EAAG,IAAI,EAAAC,WAAW,SAACpgB,GAAiB,OAAKqgB,EAAAA,SAASrgB,MAqC7E,EAAKma,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAK2C,EAAAA,eACpD,EAAKjF,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAK6C,EAAAA,kBACpD,EAAKnF,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAK/hB,EAAAA,UACpD,EAAKyf,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKwD,EAAAA,aACpD,EAAK9F,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKyD,EAAAA,WACpD,EAAK/F,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAK+D,EAAAA,iBACpD,EAAKrG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKgE,EAAAA,0BACpD,EAAKtG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKiE,EAAAA,sBACpD,EAAKvG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKkE,EAAAA,cACpD,EAAKxG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKmE,EAAAA,UAAU,KAC9D,EAAKzG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKmE,EAAAA,UAAU,KAC9D,EAAKzG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKmE,EAAAA,UAAU,KAC9D,EAAKzG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKmE,EAAAA,UAAU,KAC9D,EAAKzG,QAAQoG,cAAc,CAAC9D,MAAO,KAAM,WAAM,OAAKmE,EAAAA,UAAU,KAC9D,EAAKzG,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAO,KAAM,WAAM,OAAKoE,EAAAA,yBACxE,EAAK1G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAO,KAAM,WAAM,OAAKoE,EAAAA,6BAC7DC,EAAAA,SAAAA,GACT,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,KAC7F,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAOqE,GAAO,WAAM,OAAKC,EAAAA,cAAc,IAAMD,QAP/F,KAAA,IAAK,IAAMA,KAAQ,EAAAE,WAARF,UASX,EAAK3G,QAAQoG,cAAc,CAAC5D,cAAe,IAAKF,MAAO,KAAM,WAAM,OAAKwE,EAAAA,2BAKxE,EAAK9G,QAAQ+G,gBAAgB,SAACC,GAE5B,OADA,EAAKpI,YAAYqI,MAAM,kBAAmBD,GACnCA,IAMT,EAAKhH,QAAQkH,cAAc,CAAC1E,cAAe,IAAKF,MAAO,KAAM,IAAI6E,EAAQ,EAAKhX,eAAgB,EAAKwO,aAAc,EAAKC,YAAa,EAAKxO,oBAu6E5I,OA/oFkC,EAchC,EAAA,GAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WAA2C,OAAOxR,KAAKgiB,eAAewG,mBAEtE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAoB,UAAA,uBAAA,KAA/B,WAA4D,OAAOxoB,KAAKiiB,sBAAsBuG,mBAE9F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WAA4C,OAAOxoB,KAAKkiB,gBAAgBsG,mBAExE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAe,UAAA,kBAAA,KAA1B,WAAuE,OAAOxoB,KAAKmiB,iBAAiBqG,mBAEpG,EAAA,cAAA,IAAA,OAAW,eAAA,EAAsB,UAAA,yBAAA,KAAjC,WAAoD,OAAOxoB,KAAKoiB,wBAAwBoG,mBAExF,EAAA,cAAA,IAAA,OAAW,eAAA,EAA6B,UAAA,gCAAA,KAAxC,WAA+E,OAAOxoB,KAAKqiB,+BAA+BmG,mBAG1H,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAA0C,OAAOxoB,KAAKsiB,YAAYkG,mBAElE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WAAyC,OAAOxoB,KAAKuiB,WAAWiG,mBAEhE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WAA0C,OAAOxoB,KAAKwiB,cAAcgG,mBAEpE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAAwC,OAAOxoB,KAAKyiB,YAAY+F,mBAEhE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAOxoB,KAAK0iB,UAAU8F,mBAE9D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WAA6C,OAAOxoB,KAAK2iB,eAAe6F,mBAsMjE,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KAGR,OAAA,EAAAqoB,UAAAA,MAAP,SAAaxhB,GACX,IAAIyZ,EAAS1gB,KAAKuR,eAAemP,OAC3BgI,EAAehI,EAAOtL,EACtBuT,EAAejI,EAAOrL,EAe5B,GAbArV,KAAKggB,YAAYe,MAAM,eAAgB9Z,GAGnCjH,KAAKshB,aAAajmB,OAAS4L,EAAK5L,QAC9B2E,KAAKshB,aAAajmB,OAvZG,SAwZvB2E,KAAKshB,aAAe,IAAIzF,YAAYzR,KAAKwB,IAAI3E,EAAK5L,OAxZ3B,UA6Z3B2E,KAAKihB,iBAAiB2H,aAGlB3hB,EAAK5L,OAhakB,OAiazB,IAAK,IAAIsC,EAAI,EAAGA,EAAIsJ,EAAK5L,OAAQsC,GAjaR,OAiaqC,CAC5D,IAAMwJ,EAAMxJ,EAlaW,OAkakBsJ,EAAK5L,OAASsC,EAlahC,OAka6DsJ,EAAK5L,OACnFwtB,EAAuB,iBAAT5hB,EAChBjH,KAAKuhB,eAAe/Z,OAAOP,EAAKxK,UAAUkB,EAAGwJ,GAAMnH,KAAKshB,cACxDthB,KAAKwhB,aAAaha,OAAOP,EAAK6V,SAASnf,EAAGwJ,GAAMnH,KAAKshB,cACzDthB,KAAKohB,QAAQqH,MAAMzoB,KAAKshB,aAAcuH,QAGlCA,EAAuB,iBAAT5hB,EAChBjH,KAAKuhB,eAAe/Z,OAAOP,EAAMjH,KAAKshB,cACtCthB,KAAKwhB,aAAaha,OAAOP,EAAMjH,KAAKshB,cACxCthB,KAAKohB,QAAQqH,MAAMzoB,KAAKshB,aAAcuH,IAGxCnI,EAAS1gB,KAAKuR,eAAemP,QAClBtL,IAAMsT,GAAgBhI,EAAOrL,IAAMsT,GAC5C3oB,KAAKwiB,cAAcliB,OAIrBN,KAAKiiB,sBAAsB3hB,KAAKN,KAAKihB,iBAAiB/Z,MAAOlH,KAAKihB,iBAAiB9Z,MAG9E,EAAAqc,UAAAA,MAAP,SAAavc,EAAmBC,EAAeC,GAC7C,IAAI3L,EACAstB,EACEpI,EAAS1gB,KAAKuR,eAAemP,OAC7BqI,EAAU/oB,KAAKghB,gBAAgB+H,QAC/BC,EAAmBhpB,KAAKwR,gBAAgB9K,QAAQsiB,iBAChDzP,EAAOvZ,KAAKuR,eAAegI,KAC3B0P,EAAiBjpB,KAAK+f,aAAamJ,gBAAgBC,WACnDC,EAAappB,KAAK+f,aAAasJ,MAAMD,WACrCE,EAAUtpB,KAAK8hB,aACjByH,EAAY7I,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,GAEvDrV,KAAKihB,iBAAiByI,UAAUhJ,EAAOrL,GAGnCqL,EAAOtL,GAAKjO,EAAMD,EAAQ,GAA0C,IAArCqiB,EAAU/lB,SAASkd,EAAOtL,EAAI,IAC/DmU,EAAUhN,qBAAqBmE,EAAOtL,EAAI,EAAG,EAAG,EAAGkU,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,UAGrF,IAAK,IAAIuF,EAAMrB,EAAOqB,EAAMpB,IAAOoB,EAAK,CAUtC,GATA/M,EAAOyL,EAAKsB,GAIZugB,EAAU9oB,KAAKmhB,gBAAgBwI,QAAQnuB,GAKnCA,EAAO,KAAOutB,EAAS,CACzB,IAAMa,EAAKb,EAAQhiB,OAAOC,aAAaxL,IACnCouB,IACFpuB,EAAOouB,EAAGhmB,WAAW,IAYzB,GARIolB,GACFhpB,KAAKsiB,YAAYhiB,KAAK,EAAAoD,oBAAoBlI,IAOvCstB,IAAWpI,EAAOtL,EAAvB,CAeA,GAAIsL,EAAOtL,EAAI0T,EAAU,GAAKvP,EAG5B,GAAI0P,EAAgB,CAElB,KAAOvI,EAAOtL,EAAImE,GAChBgQ,EAAUhN,qBAAqBmE,EAAOtL,IAAK,EAAG,EAAGkU,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,UAEnF0d,EAAOtL,EAAI,EACXsL,EAAOrL,IACHqL,EAAOrL,IAAMqL,EAAOE,aAAe,GACrCF,EAAOrL,IACPrV,KAAKmiB,iBAAiB7hB,KAAKN,KAAK6pB,kBAAkB,KAE9CnJ,EAAOrL,GAAKrV,KAAKuR,eAAe4C,OAClCuM,EAAOrL,EAAIrV,KAAKuR,eAAe4C,KAAO,GAIxCuM,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,GAAIoG,WAAY,GAGzD8N,EAAY7I,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,QAGnD,GADAqL,EAAOtL,EAAImE,EAAO,EACF,IAAZuP,EAGF,SAuBN,GAjBIM,IAEFG,EAAU7M,YAAYgE,EAAOtL,EAAG0T,EAASpI,EAAOoJ,YAAYR,GAAUA,GAIjC,IAAjCC,EAAU/lB,SAAS+V,EAAO,IAC5BgQ,EAAUhN,qBAAqBhD,EAAO,EAAG,EAAA9W,eAAgB,EAAAD,gBAAiB8mB,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,WAK9GumB,EAAUhN,qBAAqBmE,EAAOtL,IAAK5Z,EAAMstB,EAASQ,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,UAKtF8lB,EAAU,EACZ,OAASA,GAEPS,EAAUhN,qBAAqBmE,EAAOtL,IAAK,EAAG,EAAGkU,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,eApE9EumB,EAAU/lB,SAASkd,EAAOtL,EAAI,GAMjCmU,EAAU9M,mBAAmBiE,EAAOtL,EAAI,EAAG5Z,GAF3C+tB,EAAU9M,mBAAmBiE,EAAOtL,EAAI,EAAG5Z,GAwE7C2L,EAAMD,EAAQ,IAChBqiB,EAAUlN,SAASqE,EAAOtL,EAAI,EAAGpV,KAAKyhB,WACJ,IAA9BzhB,KAAKyhB,UAAUje,YAAoBxD,KAAKyhB,UAAU9d,UAAY,MAChE3D,KAAKohB,QAAQ2I,mBAAqB,EACzB/pB,KAAKyhB,UAAUle,aACxBvD,KAAKohB,QAAQ2I,mBAAqB/pB,KAAKyhB,UAAUhe,WAAWG,WAAW,GAEvE5D,KAAKohB,QAAQ2I,mBAAqB/pB,KAAKyhB,UAAU5e,SAKjD6d,EAAOtL,EAAImE,GAAQpS,EAAMD,EAAQ,GAAsC,IAAjCqiB,EAAU/lB,SAASkd,EAAOtL,KAAamU,EAAUrN,WAAWwE,EAAOtL,IAC3GmU,EAAUhN,qBAAqBmE,EAAOtL,EAAG,EAAG,EAAGkU,EAAQxmB,GAAIwmB,EAAQvmB,GAAIumB,EAAQtmB,UAGjFhD,KAAKihB,iBAAiByI,UAAUhJ,EAAOrL,IAMlC,EAAA2U,UAAAA,cAAP,SAAqB5uB,EAAyB6uB,GAA9C,IACE,EAAA,KAAA,MAAiB,MAAb7uB,EAAGsoB,OAAkBtoB,EAAGqpB,QAAWrpB,EAAGwoB,cASnC5jB,KAAKohB,QAAQ4I,cAAc5uB,EAAI6uB,GAP7BjqB,KAAKohB,QAAQ4I,cAAc5uB,EAAI,SAAA8kB,GACpC,OAAK3B,EAAoB2B,EAAOA,OAAO,GAAI,EAAK1O,gBAAgB9K,QAAQ4f,gBAGjE2D,EAAS/J,MASf,EAAAgK,UAAAA,cAAP,SAAqB9uB,EAAyB6uB,GAC5C,OAAOjqB,KAAKohB,QAAQ8I,cAAc9uB,EAAI,IAAI,EAAA+uB,WAAWF,KAMhD,EAAAG,UAAAA,cAAP,SAAqBhvB,EAAyB6uB,GAC5C,OAAOjqB,KAAKohB,QAAQgJ,cAAchvB,EAAI6uB,IAMjC,EAAAI,UAAAA,cAAP,SAAqBxH,EAAeoH,GAClC,OAAOjqB,KAAKohB,QAAQiJ,cAAcxH,EAAO,IAAI,EAAAwE,WAAW4C,KAWnD,EAAAtD,UAAAA,KAAP,WACE3mB,KAAKgiB,eAAe1hB,QAaf,EAAAsmB,UAAAA,SAAP,WAEE,IAAMlG,EAAS1gB,KAAKuR,eAAemP,OAEnC1gB,KAAKihB,iBAAiByI,UAAUhJ,EAAOrL,GACnCrV,KAAKwR,gBAAgB9K,QAAQ4jB,aAC/B5J,EAAOtL,EAAI,GAEbsL,EAAOrL,IACHqL,EAAOrL,IAAMqL,EAAOE,aAAe,GACrCF,EAAOrL,IACPrV,KAAKmiB,iBAAiB7hB,KAAKN,KAAK6pB,mBACvBnJ,EAAOrL,GAAKrV,KAAKuR,eAAe4C,OACzCuM,EAAOrL,EAAIrV,KAAKuR,eAAe4C,KAAO,GAGpCuM,EAAOtL,GAAKpV,KAAKuR,eAAegI,MAClCmH,EAAOtL,IAETpV,KAAKihB,iBAAiByI,UAAUhJ,EAAOrL,GAEvCrV,KAAKyiB,YAAYniB,QASZ,EAAAumB,UAAAA,eAAP,WACE7mB,KAAKuR,eAAemP,OAAOtL,EAAI,GAc1B,EAAA0R,UAAAA,UAAP,eACQpG,EAAAA,EAAS1gB,KAAKuR,eAAemP,OAGnC,IAAK1gB,KAAK+f,aAAamJ,gBAAgBqB,kBAKrC,OAJAvqB,KAAKwqB,uBACD9J,EAAOtL,EAAI,GACbsL,EAAOtL,KAUX,GAFApV,KAAKwqB,gBAAgBxqB,KAAKuR,eAAegI,MAErCmH,EAAOtL,EAAI,EACbsL,EAAOtL,SAUP,GAAiB,IAAbsL,EAAOtL,GACJsL,EAAOrL,EAAIqL,EAAOC,WAClBD,EAAOrL,GAAKqL,EAAOE,eACsB,UAAzCF,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,UAAE,IAAEoG,OAAAA,EAAAA,EAAAA,WAClD,CACEiF,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,GAAIoG,WAAY,EACvDiF,EAAOrL,IACPqL,EAAOtL,EAAIpV,KAAKuR,eAAegI,KAAO,EAKtC,IAAM0D,EAAOyD,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQ/I,EAAOrL,GAChD4H,EAAKlB,SAAS2E,EAAOtL,KAAO6H,EAAKf,WAAWwE,EAAOtL,IACrDsL,EAAOtL,IAObpV,KAAKwqB,mBASA,EAAAzD,UAAAA,IAAP,WACE,KAAI/mB,KAAKuR,eAAemP,OAAOtL,GAAKpV,KAAKuR,eAAegI,MAAxD,CAGA,IAAMkR,EAAYzqB,KAAKuR,eAAemP,OAAOtL,EAC7CpV,KAAKuR,eAAemP,OAAOtL,EAAIpV,KAAKuR,eAAemP,OAAOgK,WACtD1qB,KAAKwR,gBAAgB9K,QAAQsiB,kBAC/BhpB,KAAKuiB,WAAWjiB,KAAKN,KAAKuR,eAAemP,OAAOtL,EAAIqV,KAWjD,EAAAzD,UAAAA,SAAP,WACEhnB,KAAKghB,gBAAgB6G,UAAU,IAU1B,EAAAZ,UAAAA,QAAP,WACEjnB,KAAKghB,gBAAgB6G,UAAU,IAMzB,EAAA2C,UAAAA,gBAAR,SAAwBG,QAAA,IAAAA,IAAiB3qB,EAAAA,KAAKuR,eAAegI,KAAO,GAClEvZ,KAAKuR,eAAemP,OAAOtL,EAAIhL,KAAKwB,IAAI+e,EAAQvgB,KAAKqB,IAAI,EAAGzL,KAAKuR,eAAemP,OAAOtL,IACvFpV,KAAKuR,eAAemP,OAAOrL,EAAIrV,KAAK+f,aAAamJ,gBAAgB0B,OAC7DxgB,KAAKwB,IAAI5L,KAAKuR,eAAemP,OAAOE,aAAcxW,KAAKqB,IAAIzL,KAAKuR,eAAemP,OAAOC,UAAW3gB,KAAKuR,eAAemP,OAAOrL,IAC5HjL,KAAKwB,IAAI5L,KAAKuR,eAAe4C,KAAO,EAAG/J,KAAKqB,IAAI,EAAGzL,KAAKuR,eAAemP,OAAOrL,IAClFrV,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,IAMrD,EAAAwV,UAAAA,WAAR,SAAmBzV,EAAWC,GAC5BrV,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,GACvDrV,KAAK+f,aAAamJ,gBAAgB0B,QACpC5qB,KAAKuR,eAAemP,OAAOtL,EAAIA,EAC/BpV,KAAKuR,eAAemP,OAAOrL,EAAIrV,KAAKuR,eAAemP,OAAOC,UAAYtL,IAEtErV,KAAKuR,eAAemP,OAAOtL,EAAIA,EAC/BpV,KAAKuR,eAAemP,OAAOrL,EAAIA,GAEjCrV,KAAKwqB,kBACLxqB,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,IAMrD,EAAAyV,UAAAA,YAAR,SAAoB1V,EAAWC,GAG7BrV,KAAKwqB,kBACLxqB,KAAK6qB,WAAW7qB,KAAKuR,eAAemP,OAAOtL,EAAIA,EAAGpV,KAAKuR,eAAemP,OAAOrL,EAAIA,IAU5E,EAAAyO,UAAAA,SAAP,SAAgB5D,GAEd,IAAM6K,EAAY/qB,KAAKuR,eAAemP,OAAOrL,EAAIrV,KAAKuR,eAAemP,OAAOC,UACxEoK,GAAa,EACf/qB,KAAK8qB,YAAY,GAAI1gB,KAAKwB,IAAImf,EAAW7K,EAAOA,OAAO,IAAM,IAE7DlgB,KAAK8qB,YAAY,IAAK5K,EAAOA,OAAO,IAAM,KAWvC,EAAA8D,UAAAA,WAAP,SAAkB9D,GAEhB,IAAM8K,EAAehrB,KAAKuR,eAAemP,OAAOE,aAAe5gB,KAAKuR,eAAemP,OAAOrL,EACtF2V,GAAgB,EAClBhrB,KAAK8qB,YAAY,EAAG1gB,KAAKwB,IAAIof,EAAc9K,EAAOA,OAAO,IAAM,IAE/DlgB,KAAK8qB,YAAY,EAAG5K,EAAOA,OAAO,IAAM,IAUrC,EAAA+D,UAAAA,cAAP,SAAqB/D,GACnBlgB,KAAK8qB,YAAY5K,EAAOA,OAAO,IAAM,EAAG,IASnC,EAAAgE,UAAAA,eAAP,SAAsBhE,GACpBlgB,KAAK8qB,cAAc5K,EAAOA,OAAO,IAAM,GAAI,IAWtC,EAAAiE,UAAAA,eAAP,SAAsBjE,GACpBlgB,KAAKgkB,WAAW9D,GAChBlgB,KAAKuR,eAAemP,OAAOtL,EAAI,GAW1B,EAAAgP,UAAAA,oBAAP,SAA2BlE,GACzBlgB,KAAK8jB,SAAS5D,GACdlgB,KAAKuR,eAAemP,OAAOtL,EAAI,GAS1B,EAAAiP,UAAAA,mBAAP,SAA0BnE,GACxBlgB,KAAK6qB,YAAY3K,EAAOA,OAAO,IAAM,GAAK,EAAGlgB,KAAKuR,eAAemP,OAAOrL,IAYnE,EAAAiP,UAAAA,eAAP,SAAsBpE,GACpBlgB,KAAK6qB,WAEF3K,EAAO7kB,QAAU,GAAM6kB,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,IAUvB,EAAAgF,UAAAA,gBAAP,SAAuBhF,GACrBlgB,KAAK6qB,YAAY3K,EAAOA,OAAO,IAAM,GAAK,EAAGlgB,KAAKuR,eAAemP,OAAOrL,IASnE,EAAA8P,UAAAA,kBAAP,SAAyBjF,GACvBlgB,KAAK8qB,YAAY5K,EAAOA,OAAO,IAAM,EAAG,IASnC,EAAAqF,UAAAA,gBAAP,SAAuBrF,GACrBlgB,KAAK6qB,WAAW7qB,KAAKuR,eAAemP,OAAOtL,GAAI8K,EAAOA,OAAO,IAAM,GAAK,IAUnE,EAAAsF,UAAAA,kBAAP,SAAyBtF,GACvBlgB,KAAK8qB,YAAY,EAAG5K,EAAOA,OAAO,IAAM,IAWnC,EAAAuF,UAAAA,WAAP,SAAkBvF,GAChBlgB,KAAKskB,eAAepE,IAcf,EAAAwF,UAAAA,SAAP,SAAgBxF,GACd,IAAM+K,EAAQ/K,EAAOA,OAAO,GACd,IAAV+K,SACKjrB,KAAKuR,eAAemP,OAAOwK,KAAKlrB,KAAKuR,eAAemP,OAAOtL,GAC/C,IAAV6V,IACTjrB,KAAKuR,eAAemP,OAAOwK,KAAO,KAU/B,EAAA3G,UAAAA,iBAAP,SAAwBrE,GACtB,KAAIlgB,KAAKuR,eAAemP,OAAOtL,GAAKpV,KAAKuR,eAAegI,MAIxD,IADA,IAAI0R,EAAQ/K,EAAOA,OAAO,IAAM,EACzB+K,KACLjrB,KAAKuR,eAAemP,OAAOtL,EAAIpV,KAAKuR,eAAemP,OAAOgK,YASvD,EAAAzF,UAAAA,kBAAP,SAAyB/E,GACvB,KAAIlgB,KAAKuR,eAAemP,OAAOtL,GAAKpV,KAAKuR,eAAegI,MAQxD,IALA,IAAI0R,EAAQ/K,EAAOA,OAAO,IAAM,EAG1BQ,EAAS1gB,KAAKuR,eAAemP,OAE5BuK,KACLvK,EAAOtL,EAAIsL,EAAOyK,YAYd,EAAAC,UAAAA,mBAAR,SAA2B/V,EAAWnO,EAAeC,EAAakkB,QAAA,IAAAA,IAAA,GAAA,GAChE,IAAMpO,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKuR,eAAemP,OAAO+I,MAAQpU,GACrF4H,EAAKJ,aACH3V,EACAC,EACAnH,KAAKuR,eAAemP,OAAOoJ,YAAY9pB,KAAK6pB,kBAC5C7pB,KAAK6pB,kBAEHwB,IACFpO,EAAKxB,WAAY,IASb,EAAA6P,UAAAA,iBAAR,SAAyBjW,GACvB,IAAM4H,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKuR,eAAemP,OAAO+I,MAAQpU,GACrF4H,EAAKjV,KAAKhI,KAAKuR,eAAemP,OAAOoJ,YAAY9pB,KAAK6pB,mBACtD5M,EAAKxB,WAAY,GA2BZ,EAAA+I,UAAAA,eAAP,SAAsBtE,GAEpB,IAAIqL,EACJ,OAFAvrB,KAAKwqB,kBAEGtK,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHAqL,EAAIvrB,KAAKuR,eAAemP,OAAOrL,EAC/BrV,KAAKihB,iBAAiByI,UAAU6B,GAChCvrB,KAAKorB,mBAAmBG,IAAKvrB,KAAKuR,eAAemP,OAAOtL,EAAGpV,KAAKuR,eAAegI,KAAuC,IAAjCvZ,KAAKuR,eAAemP,OAAOtL,GACzGmW,EAAIvrB,KAAKuR,eAAe4C,KAAMoX,IACnCvrB,KAAKsrB,iBAAiBC,GAExBvrB,KAAKihB,iBAAiByI,UAAU6B,GAChC,MACF,KAAK,EASH,IARAA,EAAIvrB,KAAKuR,eAAemP,OAAOrL,EAC/BrV,KAAKihB,iBAAiByI,UAAU6B,GAEhCvrB,KAAKorB,mBAAmBG,EAAG,EAAGvrB,KAAKuR,eAAemP,OAAOtL,EAAI,GAAG,GAC5DpV,KAAKuR,eAAemP,OAAOtL,EAAI,GAAKpV,KAAKuR,eAAegI,OAE1DvZ,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAI2sB,EAAI,GAAI9P,WAAY,GAEpD8P,KACLvrB,KAAKsrB,iBAAiBC,GAExBvrB,KAAKihB,iBAAiByI,UAAU,GAChC,MACF,KAAK,EAGH,IAFA6B,EAAIvrB,KAAKuR,eAAe4C,KACxBnU,KAAKihB,iBAAiByI,UAAU6B,EAAI,GAC7BA,KACLvrB,KAAKsrB,iBAAiBC,GAExBvrB,KAAKihB,iBAAiByI,UAAU,GAChC,MACF,KAAK,EAEH,IAAM8B,EAAiBxrB,KAAKuR,eAAemP,OAAO8I,MAAMnuB,OAAS2E,KAAKuR,eAAe4C,KACjFqX,EAAiB,IACnBxrB,KAAKuR,eAAemP,OAAO8I,MAAMiC,UAAUD,GAC3CxrB,KAAKuR,eAAemP,OAAO+I,MAAQrf,KAAKqB,IAAIzL,KAAKuR,eAAemP,OAAO+I,MAAQ+B,EAAgB,GAC/FxrB,KAAKuR,eAAemP,OAAOgL,MAAQthB,KAAKqB,IAAIzL,KAAKuR,eAAemP,OAAOgL,MAAQF,EAAgB,GAE/FxrB,KAAK0iB,UAAUpiB,KAAK,MA4BrB,EAAAokB,UAAAA,YAAP,SAAmBxE,GAEjB,OADAlgB,KAAKwqB,kBACGtK,EAAOA,OAAO,IACpB,KAAK,EACHlgB,KAAKorB,mBAAmBprB,KAAKuR,eAAemP,OAAOrL,EAAGrV,KAAKuR,eAAemP,OAAOtL,EAAGpV,KAAKuR,eAAegI,MACxG,MACF,KAAK,EACHvZ,KAAKorB,mBAAmBprB,KAAKuR,eAAemP,OAAOrL,EAAG,EAAGrV,KAAKuR,eAAemP,OAAOtL,EAAI,GACxF,MACF,KAAK,EACHpV,KAAKorB,mBAAmBprB,KAAKuR,eAAemP,OAAOrL,EAAG,EAAGrV,KAAKuR,eAAegI,MAGjFvZ,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,IAYtD,EAAAsP,UAAAA,YAAP,SAAmBzE,GACjBlgB,KAAKwqB,kBACL,IAAIS,EAAQ/K,EAAOA,OAAO,IAAM,EAG1BQ,EAAS1gB,KAAKuR,eAAemP,OAEnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAQA,IAJA,IAAMgL,EAAcjL,EAAO+I,MAAQ/I,EAAOrL,EAEpCuW,EAAyB5rB,KAAKuR,eAAe4C,KAAO,EAAIuM,EAAOE,aAC/DiL,EAAuB7rB,KAAKuR,eAAe4C,KAAO,EAAIuM,EAAO+I,MAAQmC,EAAyB,EAC7FX,KAGLvK,EAAO8I,MAAMnpB,OAAOwrB,EAAuB,EAAG,GAC9CnL,EAAO8I,MAAMnpB,OAAOsrB,EAAK,EAAGjL,EAAOoL,aAAa9rB,KAAK6pB,mBAGvD7pB,KAAKihB,iBAAiB8K,eAAerL,EAAOrL,EAAGqL,EAAOE,cACtDF,EAAOtL,EAAI,IAYN,EAAAwP,UAAAA,YAAP,SAAmB1E,GACjBlgB,KAAKwqB,kBACL,IAAIS,EAAQ/K,EAAOA,OAAO,IAAM,EAG1BQ,EAAS1gB,KAAKuR,eAAemP,OAEnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAIA,IAEI4K,EAFEI,EAAcjL,EAAO+I,MAAQ/I,EAAOrL,EAK1C,IAFAkW,EAAIvrB,KAAKuR,eAAe4C,KAAO,EAAIuM,EAAOE,aAC1C2K,EAAIvrB,KAAKuR,eAAe4C,KAAO,EAAIuM,EAAO+I,MAAQ8B,EAC3CN,KAGLvK,EAAO8I,MAAMnpB,OAAOsrB,EAAK,GACzBjL,EAAO8I,MAAMnpB,OAAOkrB,EAAG,EAAG7K,EAAOoL,aAAa9rB,KAAK6pB,mBAGrD7pB,KAAKihB,iBAAiB8K,eAAerL,EAAOrL,EAAGqL,EAAOE,cACtDF,EAAOtL,EAAI,IAcN,EAAAuO,UAAAA,YAAP,SAAmBzD,GACjBlgB,KAAKwqB,kBACL,IAAMvN,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,GAC5G4H,IACFA,EAAKP,YACH1c,KAAKuR,eAAemP,OAAOtL,EAC3B8K,EAAOA,OAAO,IAAM,EACpBlgB,KAAKuR,eAAemP,OAAOoJ,YAAY9pB,KAAK6pB,kBAC5C7pB,KAAK6pB,kBAEP7pB,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,KAexD,EAAAwP,UAAAA,YAAP,SAAmB3E,GACjBlgB,KAAKwqB,kBACL,IAAMvN,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,GAC5G4H,IACFA,EAAKL,YACH5c,KAAKuR,eAAemP,OAAOtL,EAC3B8K,EAAOA,OAAO,IAAM,EACpBlgB,KAAKuR,eAAemP,OAAOoJ,YAAY9pB,KAAK6pB,kBAC5C7pB,KAAK6pB,kBAEP7pB,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,KAYxD,EAAAyP,UAAAA,SAAP,SAAgB5E,GAMd,IALA,IAAI+K,EAAQ/K,EAAOA,OAAO,IAAM,EAG1BQ,EAAS1gB,KAAKuR,eAAemP,OAE5BuK,KACLvK,EAAO8I,MAAMnpB,OAAOqgB,EAAO+I,MAAQ/I,EAAOC,UAAW,GACrDD,EAAO8I,MAAMnpB,OAAOqgB,EAAO+I,MAAQ/I,EAAOE,aAAc,EAAGF,EAAOoL,aAAa9rB,KAAK6pB,mBAEtF7pB,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,eAQzD,EAAAmE,UAAAA,WAAP,SAAkB7E,GAMhB,IALA,IAAI+K,EAAQ/K,EAAOA,OAAO,IAAM,EAG1BQ,EAAS1gB,KAAKuR,eAAemP,OAE5BuK,KACLvK,EAAO8I,MAAMnpB,OAAOqgB,EAAO+I,MAAQ/I,EAAOE,aAAc,GACxDF,EAAO8I,MAAMnpB,OAAOqgB,EAAO+I,MAAQ/I,EAAOC,UAAW,EAAGD,EAAOoL,aAAa,EAAAxQ,oBAE9Etb,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,eAqBzD,EAAAiD,UAAAA,WAAP,SAAkB3D,GAChB,IAAMQ,EAAS1gB,KAAKuR,eAAemP,OACnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAIA,IADA,IAAMsK,EAAQ/K,EAAOA,OAAO,IAAM,EACzB7K,EAAIqL,EAAOC,UAAWtL,GAAKqL,EAAOE,eAAgBvL,EAAG,CAC5D,IAAM4H,EAAOyD,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQpU,GAC7C4H,EAAKL,YAAY,EAAGqO,EAAOvK,EAAOoJ,YAAY9pB,KAAK6pB,kBAAmB7pB,KAAK6pB,kBAC3E5M,EAAKxB,WAAY,EAEnBzb,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,gBAsBzD,EAAAmD,UAAAA,YAAP,SAAmB7D,GACjB,IAAMQ,EAAS1gB,KAAKuR,eAAemP,OACnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAIA,IADA,IAAMsK,EAAQ/K,EAAOA,OAAO,IAAM,EACzB7K,EAAIqL,EAAOC,UAAWtL,GAAKqL,EAAOE,eAAgBvL,EAAG,CAC5D,IAAM4H,EAAOyD,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQpU,GAC7C4H,EAAKP,YAAY,EAAGuO,EAAOvK,EAAOoJ,YAAY9pB,KAAK6pB,kBAAmB7pB,KAAK6pB,kBAC3E5M,EAAKxB,WAAY,EAEnBzb,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,gBAYzD,EAAA4F,UAAAA,cAAP,SAAqBtG,GACnB,IAAMQ,EAAS1gB,KAAKuR,eAAemP,OACnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAIA,IADA,IAAMsK,EAAQ/K,EAAOA,OAAO,IAAM,EACzB7K,EAAIqL,EAAOC,UAAWtL,GAAKqL,EAAOE,eAAgBvL,EAAG,CAC5D,IAAM4H,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQpU,GACjE4H,EAAKP,YAAYgE,EAAOtL,EAAG6V,EAAOvK,EAAOoJ,YAAY9pB,KAAK6pB,kBAAmB7pB,KAAK6pB,kBAClF5M,EAAKxB,WAAY,EAEnBzb,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,gBAYzD,EAAA6F,UAAAA,cAAP,SAAqBvG,GACnB,IAAMQ,EAAS1gB,KAAKuR,eAAemP,OACnC,KAAIA,EAAOrL,EAAIqL,EAAOE,cAAgBF,EAAOrL,EAAIqL,EAAOC,WAAxD,CAIA,IADA,IAAMsK,EAAQ/K,EAAOA,OAAO,IAAM,EACzB7K,EAAIqL,EAAOC,UAAWtL,GAAKqL,EAAOE,eAAgBvL,EAAG,CAC5D,IAAM4H,EAAOyD,EAAO8I,MAAM5qB,IAAI8hB,EAAO+I,MAAQpU,GAC7C4H,EAAKL,YAAY8D,EAAOtL,EAAG6V,EAAOvK,EAAOoJ,YAAY9pB,KAAK6pB,kBAAmB7pB,KAAK6pB,kBAClF5M,EAAKxB,WAAY,EAEnBzb,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,gBAWzD,EAAAoE,UAAAA,WAAP,SAAkB9E,GAChBlgB,KAAKwqB,kBACL,IAAMvN,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,GAC5G4H,IACFA,EAAKJ,aACH7c,KAAKuR,eAAemP,OAAOtL,EAC3BpV,KAAKuR,eAAemP,OAAOtL,GAAK8K,EAAOA,OAAO,IAAM,GACpDlgB,KAAKuR,eAAemP,OAAOoJ,YAAY9pB,KAAK6pB,kBAC5C7pB,KAAK6pB,kBAEP7pB,KAAKihB,iBAAiByI,UAAU1pB,KAAKuR,eAAemP,OAAOrL,KA+BxD,EAAA+P,UAAAA,yBAAP,SAAgClF,GAC9B,GAAKlgB,KAAKohB,QAAQ2I,mBAAlB,CAMA,IAFA,IAAM1uB,EAAS6kB,EAAOA,OAAO,IAAM,EAC7BjZ,EAAO,IAAI4U,YAAYxgB,GACpBsC,EAAI,EAAGA,EAAItC,IAAUsC,EAC5BsJ,EAAKtJ,GAAKqC,KAAKohB,QAAQ2I,mBAEzB/pB,KAAKwjB,MAAMvc,EAAM,EAAGA,EAAK5L,UA4BpB,EAAAgqB,UAAAA,4BAAP,SAAmCnF,GAC7BA,EAAOA,OAAO,GAAK,IAGnBlgB,KAAKgsB,IAAI,UAAYhsB,KAAKgsB,IAAI,iBAAmBhsB,KAAKgsB,IAAI,UAC5DhsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,UACnC1O,KAAKgsB,IAAI,UAClBhsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,UA4BzC,EAAA4W,UAAAA,8BAAP,SAAqCpF,GAC/BA,EAAOA,OAAO,GAAK,IAMnBlgB,KAAKgsB,IAAI,SACXhsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,cACnC1O,KAAKgsB,IAAI,gBAClBhsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,cACnC1O,KAAKgsB,IAAI,SAGlBhsB,KAAK+f,aAAaS,iBAAiBN,EAAOA,OAAO,GAAK,KAC7ClgB,KAAKgsB,IAAI,WAClBhsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,mBAQxC,EAAAsd,UAAAA,IAAR,SAAYC,GACV,OAAsE,KAA9DjsB,KAAKwR,gBAAgB9K,QAAQwlB,SAAW,IAAItqB,QAAQqqB,IAoBvD,EAAAtG,UAAAA,QAAP,SAAezF,GACb,IAAK,IAAIviB,EAAI,EAAGA,EAAIuiB,EAAO7kB,OAAQsC,IACjC,OAAQuiB,EAAOA,OAAOviB,IACpB,KAAK,EACHqC,KAAK+f,aAAasJ,MAAMD,YAAa,IA0HtC,EAAAxD,UAAAA,eAAP,SAAsB1F,GACpB,IAAK,IAAIviB,EAAI,EAAGA,EAAIuiB,EAAO7kB,OAAQsC,IACjC,OAAQuiB,EAAOA,OAAOviB,IACpB,KAAK,EACHqC,KAAK+f,aAAamJ,gBAAgBiD,uBAAwB,EAC1D,MACF,KAAK,EACHnsB,KAAKghB,gBAAgBoL,YAAY,EAAG,EAAAC,iBACpCrsB,KAAKghB,gBAAgBoL,YAAY,EAAG,EAAAC,iBACpCrsB,KAAKghB,gBAAgBoL,YAAY,EAAG,EAAAC,iBACpCrsB,KAAKghB,gBAAgBoL,YAAY,EAAG,EAAAC,iBAEpC,MACF,KAAK,EAMCrsB,KAAKwR,gBAAgB9K,QAAQ4f,cAAc7H,cAC7Cze,KAAKuR,eAAe+C,OAAO,IAAKtU,KAAKuR,eAAe4C,MACpDnU,KAAKkiB,gBAAgB5hB,QAEvB,MACF,KAAK,EACHN,KAAK+f,aAAamJ,gBAAgB0B,QAAS,EAC3C5qB,KAAK6qB,WAAW,EAAG,GACnB,MACF,KAAK,EACH7qB,KAAK+f,aAAamJ,gBAAgBC,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACHnpB,KAAK+f,aAAamJ,gBAAgBqB,mBAAoB,EACtD,MACF,KAAK,GACHvqB,KAAKggB,YAAYe,MAAM,6CACvB/gB,KAAK+f,aAAamJ,gBAAgBoD,mBAAoB,EACtDtsB,KAAKoiB,wBAAwB9hB,OAC7B,MACF,KAAK,EAEHN,KAAKkhB,kBAAkBqL,eAAiB,MACxC,MACF,KAAK,IAEHvsB,KAAKkhB,kBAAkBqL,eAAiB,QACxC,MACF,KAAK,KACHvsB,KAAKkhB,kBAAkBqL,eAAiB,OACxC,MACF,KAAK,KAGHvsB,KAAKkhB,kBAAkBqL,eAAiB,MACxC,MACF,KAAK,KAGHvsB,KAAK+f,aAAamJ,gBAAgBsD,WAAY,EAC9C,MACF,KAAK,KACHxsB,KAAKggB,YAAYe,MAAM,yCACvB,MACF,KAAK,KACH/gB,KAAKkhB,kBAAkBuL,eAAiB,MACxC,MACF,KAAK,KACHzsB,KAAKggB,YAAYe,MAAM,yCACvB,MACF,KAAK,GACH/gB,KAAK+f,aAAa2M,gBAAiB,EACnC,MACF,KAAK,KACH1sB,KAAKqmB,aACL,MACF,KAAK,KACHrmB,KAAKqmB,aAEP,KAAK,GACL,KAAK,KACHrmB,KAAKuR,eAAeob,QAAQC,kBAAkB5sB,KAAK6pB,kBACnD7pB,KAAK+f,aAAa8M,qBAAsB,EACxC7sB,KAAKiiB,sBAAsB3hB,KAAK,EAAGN,KAAKuR,eAAe4C,KAAO,GAC9DnU,KAAKoiB,wBAAwB9hB,OAC7B,MACF,KAAK,KACHN,KAAK+f,aAAamJ,gBAAgB4D,oBAAqB,IA2BxD,EAAAjH,UAAAA,UAAP,SAAiB3F,GACf,IAAK,IAAIviB,EAAI,EAAGA,EAAIuiB,EAAO7kB,OAAQsC,IACjC,OAAQuiB,EAAOA,OAAOviB,IACpB,KAAK,EACHqC,KAAK+f,aAAasJ,MAAMD,YAAa,IAsHtC,EAAAtD,UAAAA,iBAAP,SAAwB5F,GACtB,IAAK,IAAIviB,EAAI,EAAGA,EAAIuiB,EAAO7kB,OAAQsC,IACjC,OAAQuiB,EAAOA,OAAOviB,IACpB,KAAK,EACHqC,KAAK+f,aAAamJ,gBAAgBiD,uBAAwB,EAC1D,MACF,KAAK,EAMCnsB,KAAKwR,gBAAgB9K,QAAQ4f,cAAc7H,cAC7Cze,KAAKuR,eAAe+C,OAAO,GAAItU,KAAKuR,eAAe4C,MACnDnU,KAAKkiB,gBAAgB5hB,QAEvB,MACF,KAAK,EACHN,KAAK+f,aAAamJ,gBAAgB0B,QAAS,EAC3C5qB,KAAK6qB,WAAW,EAAG,GACnB,MACF,KAAK,EACH7qB,KAAK+f,aAAamJ,gBAAgBC,YAAa,EAC/C,MACF,KAAK,GAEH,MACF,KAAK,GACHnpB,KAAK+f,aAAamJ,gBAAgBqB,mBAAoB,EACtD,MACF,KAAK,GACHvqB,KAAKggB,YAAYe,MAAM,oCACvB/gB,KAAK+f,aAAamJ,gBAAgBoD,mBAAoB,EACtDtsB,KAAKoiB,wBAAwB9hB,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACHN,KAAKkhB,kBAAkBqL,eAAiB,OACxC,MACF,KAAK,KACHvsB,KAAK+f,aAAamJ,gBAAgBsD,WAAY,EAC9C,MACF,KAAK,KACHxsB,KAAKggB,YAAYe,MAAM,yCACvB,MACF,KAAK,KACH/gB,KAAKkhB,kBAAkBuL,eAAiB,UACxC,MACF,KAAK,KACHzsB,KAAKggB,YAAYe,MAAM,yCACvB,MACF,KAAK,GACH/gB,KAAK+f,aAAa2M,gBAAiB,EACnC,MACF,KAAK,KACH1sB,KAAKumB,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEHvmB,KAAKuR,eAAeob,QAAQI,uBACH,OAArB7M,EAAOA,OAAOviB,IAChBqC,KAAKumB,gBAEPvmB,KAAK+f,aAAa8M,qBAAsB,EACxC7sB,KAAKiiB,sBAAsB3hB,KAAK,EAAGN,KAAKuR,eAAe4C,KAAO,GAC9DnU,KAAKoiB,wBAAwB9hB,OAC7B,MACF,KAAK,KACHN,KAAK+f,aAAamJ,gBAAgB4D,oBAAqB,IASvD,EAAAE,UAAAA,iBAAR,SAAyBrjB,EAAezK,EAAc+tB,EAAYC,EAAYC,GAS5E,OARa,IAATjuB,GACFyK,GAAS,SACTA,IAAS,SACTA,GAAS,EAAA3F,cAAcQ,aAAa,CAACyoB,EAAIC,EAAIC,KAC3B,IAATjuB,IACTyK,IAAS,SACTA,GAAS,SAA2B,IAALsjB,GAE1BtjB,GAOD,EAAAyjB,UAAAA,cAAR,SAAsBlN,EAAiB3X,EAAa8kB,GAKlD,IAAMC,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG1BC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAUrN,EAAOA,OAAO3X,EAAMilB,GACzCtN,EAAOuN,aAAallB,EAAMilB,GAAU,CACtC,IAAME,EAAYxN,EAAOyN,aAAaplB,EAAMilB,GACxC7vB,EAAI,EACR,GACkB,IAAZ2vB,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAU7vB,EAAI,EAAI4vB,GAAUG,EAAU/vB,WAClCA,EAAI+vB,EAAUryB,QAAUsC,EAAI6vB,EAAU,EAAID,EAASD,EAAKjyB,QACnE,MAGF,GAAiB,IAAZiyB,EAAK,IAAYE,EAAUD,GAAU,GACtB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EAC3C,MAGED,EAAK,KACPC,EAAS,WAEFC,EAAUjlB,EAAM2X,EAAO7kB,QAAUmyB,EAAUD,EAASD,EAAKjyB,QAGpE,IAASsC,EAAI,EAAGA,EAAI2vB,EAAKjyB,SAAUsC,GAChB,IAAb2vB,EAAK3vB,KACP2vB,EAAK3vB,GAAK,GAKd,OAAQ2vB,EAAK,IACX,KAAK,GACHD,EAAKvqB,GAAK9C,KAAKgtB,iBAAiBK,EAAKvqB,GAAIwqB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKtqB,GAAK/C,KAAKgtB,iBAAiBK,EAAKtqB,GAAIuqB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACHD,EAAKrqB,SAAWqqB,EAAKrqB,SAASyB,QAC9B4oB,EAAKrqB,SAASiD,eAAiBjG,KAAKgtB,iBAAiBK,EAAKrqB,SAASiD,eAAgBqnB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOE,GAYD,EAAAI,UAAAA,kBAAR,SAA0Bnb,EAAe4a,GAGvCA,EAAKrqB,SAAWqqB,EAAKrqB,SAASyB,WAGxBgO,GAASA,EAAQ,KACrBA,EAAQ,GAEV4a,EAAKrqB,SAASuD,eAAiBkM,EAC/B4a,EAAKvqB,IAAM,UAGG,IAAV2P,IACF4a,EAAKvqB,KAAM,WAIbuqB,EAAKvnB,kBAoFA,EAAAigB,UAAAA,eAAP,SAAsB7F,GAEpB,GAAsB,IAAlBA,EAAO7kB,QAAqC,IAArB6kB,EAAOA,OAAO,GAGvC,OAFAlgB,KAAK8hB,aAAahf,GAAK,EAAAwY,kBAAkBxY,QACzC9C,KAAK8hB,aAAa/e,GAAK,EAAAuY,kBAAkBvY,IAQ3C,IAJA,IACInD,EADE5B,EAAIkiB,EAAO7kB,OAEXgyB,EAAOrtB,KAAK8hB,aAETnkB,EAAI,EAAGA,EAAIK,EAAGL,KACrBiC,EAAIsgB,EAAOA,OAAOviB,KACT,IAAMiC,GAAK,IAElBytB,EAAKvqB,KAAM,SACXuqB,EAAKvqB,IAAM,SAAqBlD,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBytB,EAAKtqB,KAAM,SACXsqB,EAAKtqB,IAAM,SAAqBnD,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzBytB,EAAKvqB,KAAM,SACXuqB,EAAKvqB,IAAM,SAAqBlD,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1BytB,EAAKtqB,KAAM,SACXsqB,EAAKtqB,IAAM,SAAqBnD,EAAI,KACrB,IAANA,GAETytB,EAAKvqB,GAAK,EAAAwY,kBAAkBxY,GAC5BuqB,EAAKtqB,GAAK,EAAAuY,kBAAkBvY,IACb,IAANnD,EAETytB,EAAKvqB,IAAM,UACI,IAANlD,EAETytB,EAAKtqB,IAAM,SACI,IAANnD,GAETytB,EAAKvqB,IAAM,UACX9C,KAAK4tB,kBAAkB1N,EAAOuN,aAAa9vB,GAAKuiB,EAAOyN,aAAahwB,GAAI,GAAK,EAAuB0vB,IACrF,IAANztB,EAETytB,EAAKvqB,IAAM,UACI,IAANlD,EAGTytB,EAAKvqB,IAAM,SACI,IAANlD,EAETytB,EAAKvqB,IAAM,WACI,IAANlD,EAETytB,EAAKtqB,IAAM,UACI,KAANnD,EAETI,KAAK4tB,kBAAkB,EAAuBP,GAC/B,KAANztB,GAETytB,EAAKvqB,KAAM,UACXuqB,EAAKtqB,KAAM,WACI,KAANnD,EAETytB,EAAKtqB,KAAM,SACI,KAANnD,EAETytB,EAAKvqB,KAAM,UACI,KAANlD,EAETytB,EAAKvqB,KAAM,UACI,KAANlD,EAETytB,EAAKvqB,KAAM,SACI,KAANlD,EAETytB,EAAKvqB,KAAM,WACI,KAANlD,GAETytB,EAAKvqB,KAAM,SACXuqB,EAAKvqB,IAA6B,SAAvB,EAAAwY,kBAAkBxY,IACd,KAANlD,GAETytB,EAAKtqB,KAAM,SACXsqB,EAAKtqB,IAA6B,SAAvB,EAAAuY,kBAAkBvY,IACd,KAANnD,GAAkB,KAANA,GAAkB,KAANA,EAEjCjC,GAAKqC,KAAKotB,cAAclN,EAAQviB,EAAG0vB,GACpB,KAANztB,GACTytB,EAAKrqB,SAAWqqB,EAAKrqB,SAASyB,QAC9B4oB,EAAKrqB,SAASiD,gBAAkB,EAChConB,EAAKvnB,kBACU,MAANlG,GAETytB,EAAKvqB,KAAM,SACXuqB,EAAKvqB,IAA6B,SAAvB,EAAAwY,kBAAkBxY,GAC7BuqB,EAAKtqB,KAAM,SACXsqB,EAAKtqB,IAA6B,SAAvB,EAAAuY,kBAAkBvY,IAE7B/C,KAAKggB,YAAYe,MAAM,6BAA8BnhB,IA8BpD,EAAAomB,UAAAA,aAAP,SAAoB9F,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEHlgB,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,OAC5C,MACF,KAAK,EAEH,IAAM2G,EAAIrV,KAAKuR,eAAemP,OAAOrL,EAAI,EACnCD,EAAIpV,KAAKuR,eAAemP,OAAOtL,EAAI,EACzCpV,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,IAAI2G,EAAC,IAAID,EAAC,OAMrD,EAAA6Q,UAAAA,oBAAP,SAA2B/F,GAGzB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH,IAAM7K,EAAIrV,KAAKuR,eAAemP,OAAOrL,EAAI,EACnCD,EAAIpV,KAAKuR,eAAemP,OAAOtL,EAAI,EACzCpV,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,KAAK2G,EAAC,IAAID,EAAC,OAwCtD,EAAA8Q,UAAAA,UAAP,SAAiBhG,GACflgB,KAAK+f,aAAa2M,gBAAiB,EACnC1sB,KAAKoiB,wBAAwB9hB,OAC7BN,KAAKuR,eAAemP,OAAOC,UAAY,EACvC3gB,KAAKuR,eAAemP,OAAOE,aAAe5gB,KAAKuR,eAAe4C,KAAO,EACrEnU,KAAK8hB,aAAe,EAAAxG,kBAAkB7W,QACtCzE,KAAK+f,aAAa8N,QAClB7tB,KAAKghB,gBAAgB6M,QAGrB7tB,KAAKuR,eAAemP,OAAOoN,OAAS,EACpC9tB,KAAKuR,eAAemP,OAAOqN,OAAS/tB,KAAKuR,eAAemP,OAAO+I,MAC/DzpB,KAAKuR,eAAemP,OAAOsN,iBAAiBlrB,GAAK9C,KAAK8hB,aAAahf,GACnE9C,KAAKuR,eAAemP,OAAOsN,iBAAiBjrB,GAAK/C,KAAK8hB,aAAa/e,GACnE/C,KAAKuR,eAAemP,OAAOuN,aAAejuB,KAAKghB,gBAAgB+H,QAG/D/oB,KAAK+f,aAAamJ,gBAAgB0B,QAAS,GAsBtC,EAAAzE,UAAAA,eAAP,SAAsBjG,GACpB,IAAM+K,EAAQ/K,EAAOA,OAAO,IAAM,EAClC,OAAQ+K,GACN,KAAK,EACL,KAAK,EACHjrB,KAAKwR,gBAAgB9K,QAAQma,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACH7gB,KAAKwR,gBAAgB9K,QAAQma,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACH7gB,KAAKwR,gBAAgB9K,QAAQma,YAAc,MAG/C,IAAMqN,EAAajD,EAAQ,GAAM,EACjCjrB,KAAKwR,gBAAgB9K,QAAQoa,YAAcoN,GAUtC,EAAA9H,UAAAA,gBAAP,SAAuBlG,GACrB,IACIiO,EADEC,EAAMlO,EAAOA,OAAO,IAAM,GAG5BA,EAAO7kB,OAAS,IAAM8yB,EAASjO,EAAOA,OAAO,IAAOlgB,KAAKuR,eAAe4C,MAAmB,IAAXga,KAClFA,EAASnuB,KAAKuR,eAAe4C,MAG3Bga,EAASC,IACXpuB,KAAKuR,eAAemP,OAAOC,UAAYyN,EAAM,EAC7CpuB,KAAKuR,eAAemP,OAAOE,aAAeuN,EAAS,EACnDnuB,KAAK6qB,WAAW,EAAG,KAkChB,EAAAvE,UAAAA,cAAP,SAAqBpG,GACnB,GAAK3B,EAAoB2B,EAAOA,OAAO,GAAIlgB,KAAKwR,gBAAgB9K,QAAQ4f,eAAxE,CAGA,IAAMxiB,EAAUoc,EAAO7kB,OAAS,EAAK6kB,EAAOA,OAAO,GAAK,EACxD,OAAQA,EAAOA,OAAO,IACpB,KAAK,GACY,IAAXpc,GACF9D,KAAKqiB,+BAA+B/hB,KAAK+d,EAAyBgQ,qBAEpE,MACF,KAAK,GACHruB,KAAKqiB,+BAA+B/hB,KAAK+d,EAAyBiQ,sBAClE,MACF,KAAK,GACCtuB,KAAKuR,gBACPvR,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,MAAM1O,KAAKuR,eAAe4C,KAAI,IAAInU,KAAKuR,eAAegI,KAAI,KAExG,MACF,KAAK,GACY,IAAXzV,GAA2B,IAAXA,IAClB9D,KAAK4hB,kBAAkBzhB,KAAKH,KAAK0hB,cAC7B1hB,KAAK4hB,kBAAkBvmB,OArgFjB,IAsgFR2E,KAAK4hB,kBAAkB2M,SAGZ,IAAXzqB,GAA2B,IAAXA,IAClB9D,KAAK6hB,eAAe1hB,KAAKH,KAAK2hB,WAC1B3hB,KAAK6hB,eAAexmB,OA3gFd,IA4gFR2E,KAAK6hB,eAAe0M,SAGxB,MACF,KAAK,GACY,IAAXzqB,GAA2B,IAAXA,GACd9D,KAAK4hB,kBAAkBvmB,QACzB2E,KAAKsnB,SAAStnB,KAAK4hB,kBAAkB4M,OAG1B,IAAX1qB,GAA2B,IAAXA,GACd9D,KAAK6hB,eAAexmB,QACtB2E,KAAKunB,YAAYvnB,KAAK6hB,eAAe2M,UAgBxC,EAAAnI,UAAAA,WAAP,SAAkBnG,GAChBlgB,KAAKuR,eAAemP,OAAOoN,OAAS9tB,KAAKuR,eAAemP,OAAOtL,EAC/DpV,KAAKuR,eAAemP,OAAOqN,OAAS/tB,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,EAClGrV,KAAKuR,eAAemP,OAAOsN,iBAAiBlrB,GAAK9C,KAAK8hB,aAAahf,GACnE9C,KAAKuR,eAAemP,OAAOsN,iBAAiBjrB,GAAK/C,KAAK8hB,aAAa/e,GACnE/C,KAAKuR,eAAemP,OAAOuN,aAAejuB,KAAKghB,gBAAgB+H,SAY1D,EAAAxC,UAAAA,cAAP,SAAqBrG,GACnBlgB,KAAKuR,eAAemP,OAAOtL,EAAIpV,KAAKuR,eAAemP,OAAOoN,QAAU,EACpE9tB,KAAKuR,eAAemP,OAAOrL,EAAIjL,KAAKqB,IAAIzL,KAAKuR,eAAemP,OAAOqN,OAAS/tB,KAAKuR,eAAemP,OAAO+I,MAAO,GAC9GzpB,KAAK8hB,aAAahf,GAAK9C,KAAKuR,eAAemP,OAAOsN,iBAAiBlrB,GACnE9C,KAAK8hB,aAAa/e,GAAK/C,KAAKuR,eAAemP,OAAOsN,iBAAiBjrB,GACnE/C,KAAKghB,gBAAgB+H,QAAW/oB,KAAayuB,cACzCzuB,KAAKuR,eAAemP,OAAOuN,eAC7BjuB,KAAKghB,gBAAgB+H,QAAU/oB,KAAKuR,eAAemP,OAAOuN,cAE5DjuB,KAAKwqB,mBAcA,EAAAlD,UAAAA,SAAP,SAAgBrgB,GACdjH,KAAK0hB,aAAeza,EACpBjH,KAAK2iB,eAAeriB,KAAK2G,IAOpB,EAAAsgB,UAAAA,YAAP,SAAmBtgB,GACjBjH,KAAK2hB,UAAY1a,GAYZ,EAAAigB,UAAAA,SAAP,WACElnB,KAAKuR,eAAemP,OAAOtL,EAAI,EAC/BpV,KAAK2B,SAQA,EAAA+lB,UAAAA,sBAAP,WACE1nB,KAAKggB,YAAYe,MAAM,6CACvB/gB,KAAK+f,aAAamJ,gBAAgBoD,mBAAoB,EACtDtsB,KAAKoiB,wBAAwB9hB,QAQxB,EAAAqnB,UAAAA,kBAAP,WACE3nB,KAAKggB,YAAYe,MAAM,oCACvB/gB,KAAK+f,aAAamJ,gBAAgBoD,mBAAoB,EACtDtsB,KAAKoiB,wBAAwB9hB,QASxB,EAAAwnB,UAAAA,qBAAP,WACE9nB,KAAKghB,gBAAgB6G,UAAU,GAC/B7nB,KAAKghB,gBAAgBoL,YAAY,EAAG,EAAAC,kBAmB/B,EAAArE,UAAAA,cAAP,SAAqB0G,GACW,IAA1BA,EAAerzB,OAIO,MAAtBqzB,EAAe,IAGnB1uB,KAAKghB,gBAAgBoL,YAAY9N,EAAOoQ,EAAe,IAAK,EAAAzG,SAASyG,EAAe,KAAO,EAAArC,iBANzFrsB,KAAK8nB,wBAmBF,EAAAnmB,UAAAA,MAAP,WACE3B,KAAKwqB,kBACL,IAAM9J,EAAS1gB,KAAKuR,eAAemP,OACnC1gB,KAAKuR,eAAemP,OAAOrL,IACvBqL,EAAOrL,IAAMqL,EAAOE,aAAe,GACrCF,EAAOrL,IACPrV,KAAKmiB,iBAAiB7hB,KAAKN,KAAK6pB,mBACvBnJ,EAAOrL,GAAKrV,KAAKuR,eAAe4C,OACzCuM,EAAOrL,EAAIrV,KAAKuR,eAAe4C,KAAO,GAExCnU,KAAKwqB,mBAaA,EAAArD,UAAAA,OAAP,WACEnnB,KAAKuR,eAAemP,OAAOwK,KAAKlrB,KAAKuR,eAAemP,OAAOtL,IAAK,GAY3D,EAAAqS,UAAAA,aAAP,WACEznB,KAAKwqB,kBACL,IAAM9J,EAAS1gB,KAAKuR,eAAemP,OACnC,GAAIA,EAAOrL,IAAMqL,EAAOC,UAAW,CAIjC,IAAMgO,EAAqBjO,EAAOE,aAAeF,EAAOC,UACxDD,EAAO8I,MAAMoF,cAAclO,EAAO+I,MAAQ/I,EAAOrL,EAAGsZ,EAAoB,GACxEjO,EAAO8I,MAAMrO,IAAIuF,EAAO+I,MAAQ/I,EAAOrL,EAAGqL,EAAOoL,aAAa9rB,KAAK6pB,mBACnE7pB,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,mBAE9DF,EAAOrL,IACPrV,KAAKwqB,mBASF,EAAA5C,UAAAA,UAAP,WACE5nB,KAAKohB,QAAQyM,QACb7tB,KAAKkiB,gBAAgB5hB,QAGhB,EAAAutB,UAAAA,MAAP,WACE7tB,KAAK8hB,aAAe,EAAAxG,kBAAkB7W,QACtCzE,KAAK+hB,uBAAyB,EAAAzG,kBAAkB7W,SAM1C,EAAAolB,UAAAA,eAAR,WAGE,OAFA7pB,KAAK+hB,uBAAuBhf,KAAM,SAClC/C,KAAK+hB,uBAAuBhf,IAA6B,SAAvB/C,KAAK8hB,aAAa/e,GAC7C/C,KAAK+hB,wBAaP,EAAA8F,UAAAA,UAAP,SAAiBgH,GACf7uB,KAAKghB,gBAAgB6G,UAAUgH,IAW1B,EAAA3G,UAAAA,uBAAP,WAEE,IAAMhS,EAAO,IAAI,EAAA7S,SACjB6S,EAAKrT,QAAU,GAAK,GAAsB,IAAIe,WAAW,GACzDsS,EAAKpT,GAAK9C,KAAK8hB,aAAahf,GAC5BoT,EAAKnT,GAAK/C,KAAK8hB,aAAa/e,GAE5B,IAAM2d,EAAS1gB,KAAKuR,eAAemP,OAEnC1gB,KAAK6qB,WAAW,EAAG,GACnB,IAAK,IAAI1S,EAAU,EAAGA,EAAUnY,KAAKuR,eAAe4C,OAAQgE,EAAS,CACnE,IAAMwT,EAAMjL,EAAO+I,MAAQ/I,EAAOrL,EAAI8C,EAChC8E,EAAOyD,EAAO8I,MAAM5qB,IAAI+sB,GAC1B1O,IACFA,EAAKjV,KAAKkO,GACV+G,EAAKxB,WAAY,GAGrBzb,KAAKihB,iBAAiB6N,eACtB9uB,KAAK6qB,WAAW,EAAG,IAEvB,EAxmFE,CAvCgC,EAAA9oB,YAArB,EAAAgtB,yBC1MA,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,EAAA9G,SAAoD,GAKpD,EAAAoE,gBAAwC,EAAApE,SAAY,EAYjE,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,KAOP,EAAAA,SAAY,OAAIvnB,EAOhB,EAAAunB,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EAAI,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAY,EACZ,EAAAA,SAAS,GAAO,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP,EAAAA,SAAS,KAAO,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,eCvPP,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,YAAA,EAAA,IAuBA,EAyCE,WAAA,SAAmB+G,EAAAA,EAA+BC,GAChD,QADiB,IAAAD,IAAA,EAAA,SAA+B,IAAAC,IAAA,EAAA,IAA/B,KAAAD,UAA+B,EAAA,KAAAC,mBAC5CA,EAAAA,EA/Dc,IAgEhB,MAAM,IAAI30B,MAAM,mDAElB0F,KAAKkgB,OAAS,IAAIgP,WAAWF,GAC7BhvB,KAAK3E,OAAS,EACd2E,KAAKmvB,WAAa,IAAID,WAAWD,GACjCjvB,KAAKovB,iBAAmB,EACxBpvB,KAAKqvB,cAAgB,IAAIC,YAAYN,GACrChvB,KAAKuvB,eAAgB,EACrBvvB,KAAKwvB,kBAAmB,EACxBxvB,KAAKyvB,aAAc,EAkJvB,OApLgB,EAAAC,UAAd,SAAwBC,GACtB,IAAMzP,EAAS,IAAI0P,EACnB,IAAKD,EAAOt0B,OACV,OAAO6kB,EAGT,IAAK,IAAIviB,EAAKgyB,EAAO,aAAcz0B,MAAS,EAAI,EAAGyC,EAAIgyB,EAAOt0B,SAAUsC,EAAG,CACzE,IAAMqB,EAAQ2wB,EAAOhyB,GACrB,GAAIqB,aAAiB9D,MACnB,IAAK,IAAI20B,EAAI,EAAGA,EAAI7wB,EAAM3D,SAAUw0B,EAClC3P,EAAO4P,YAAY9wB,EAAM6wB,SAG3B3P,EAAO6P,SAAS/wB,GAGpB,OAAOkhB,GAwBF,EAAAzb,UAAAA,MAAP,WACE,IAAMurB,EAAY,IAAIJ,EAAO5vB,KAAKgvB,UAAWhvB,KAAKivB,oBASlD,OARAe,EAAU9P,OAAO/E,IAAInb,KAAKkgB,QAC1B8P,EAAU30B,OAAS2E,KAAK3E,OACxB20B,EAAUb,WAAWhU,IAAInb,KAAKmvB,YAC9Ba,EAAUZ,iBAAmBpvB,KAAKovB,iBAClCY,EAAUX,cAAclU,IAAInb,KAAKqvB,eACjCW,EAAUT,cAAgBvvB,KAAKuvB,cAC/BS,EAAUR,iBAAmBxvB,KAAKwvB,iBAClCQ,EAAUP,YAAczvB,KAAKyvB,YACtBO,GASF,EAAAhN,UAAAA,QAAP,WAEE,IADA,IAAMiN,EAAmB,GAChBtyB,EAAI,EAAGA,EAAIqC,KAAK3E,SAAUsC,EAAG,CACpCsyB,EAAI9vB,KAAKH,KAAKkgB,OAAOviB,IACrB,IAAMuJ,EAAQlH,KAAKqvB,cAAc1xB,IAAM,EACjCwJ,EAA8B,IAAxBnH,KAAKqvB,cAAc1xB,GAC3BwJ,EAAMD,EAAQ,GAChB+oB,EAAI9vB,KAAKjF,MAAMgC,UAAUtB,MAAMsC,KAAK8B,KAAKmvB,WAAYjoB,EAAOC,IAGhE,OAAO8oB,GAMF,EAAApC,UAAAA,MAAP,WACE7tB,KAAK3E,OAAS,EACd2E,KAAKovB,iBAAmB,EACxBpvB,KAAKuvB,eAAgB,EACrBvvB,KAAKwvB,kBAAmB,EACxBxvB,KAAKyvB,aAAc,GAUd,EAAAM,UAAAA,SAAP,SAAgB/wB,GAEd,GADAgB,KAAKyvB,aAAc,EACfzvB,KAAK3E,QAAU2E,KAAKgvB,UACtBhvB,KAAKuvB,eAAgB,MADvB,CAIA,GAAIvwB,GAAS,EACX,MAAM,IAAI1E,MAAM,yCAElB0F,KAAKqvB,cAAcrvB,KAAK3E,QAAU2E,KAAKovB,kBAAoB,EAAIpvB,KAAKovB,iBACpEpvB,KAAKkgB,OAAOlgB,KAAK3E,UAAY2D,EA7If,WA6I+CA,WAAAA,IAUxD,EAAA8wB,UAAAA,YAAP,SAAmB9wB,GAEjB,GADAgB,KAAKyvB,aAAc,EACdzvB,KAAK3E,OAGV,GAAI2E,KAAKuvB,eAAiBvvB,KAAKovB,kBAAoBpvB,KAAKivB,mBACtDjvB,KAAKwvB,kBAAmB,MAD1B,CAIA,GAAIxwB,GAAS,EACX,MAAM,IAAI1E,MAAM,yCAElB0F,KAAKmvB,WAAWnvB,KAAKovB,oBAAsBpwB,EAnK7B,WAmK6DA,WAAAA,EAC3EgB,KAAKqvB,cAAcrvB,KAAK3E,OAAS,OAM5B,EAAAoyB,UAAAA,aAAP,SAAoByC,GAClB,OAAmC,IAA1BlwB,KAAKqvB,cAAca,KAAgBlwB,KAAKqvB,cAAca,IAAQ,GAAK,GAQvE,EAAAvC,UAAAA,aAAP,SAAoBuC,GAClB,IAAMhpB,EAAQlH,KAAKqvB,cAAca,IAAQ,EACnC/oB,EAAgC,IAA1BnH,KAAKqvB,cAAca,GAC/B,OAAI/oB,EAAMD,EAAQ,EACTlH,KAAKmvB,WAAWrS,SAAS5V,EAAOC,GAElC,MAOF,EAAAgpB,UAAAA,gBAAP,WAEE,IADA,IAAM/oB,EAAsC,GACnCzJ,EAAI,EAAGA,EAAIqC,KAAK3E,SAAUsC,EAAG,CACpC,IAAMuJ,EAAQlH,KAAKqvB,cAAc1xB,IAAM,EACjCwJ,EAA8B,IAAxBnH,KAAKqvB,cAAc1xB,GAC3BwJ,EAAMD,EAAQ,IAChBE,EAAOzJ,GAAKqC,KAAKmvB,WAAWvzB,MAAMsL,EAAOC,IAG7C,OAAOC,GAOF,EAAAgpB,UAAAA,SAAP,SAAgBpxB,GACd,IAAI3D,EACJ,KAAI2E,KAAKuvB,iBACFl0B,EAAS2E,KAAKyvB,YAAczvB,KAAKovB,iBAAmBpvB,KAAK3E,SAC1D2E,KAAKyvB,aAAezvB,KAAKwvB,kBAF/B,CAOA,IAAMa,EAAQrwB,KAAKyvB,YAAczvB,KAAKmvB,WAAanvB,KAAKkgB,OAClDoQ,EAAMD,EAAMh1B,EAAS,GAC3Bg1B,EAAMh1B,EAAS,IAAMi1B,EAAMlmB,KAAKwB,IAAU,GAAN0kB,EAAWtxB,EA3NjC,YA2NqDA,IAEvE,EA7JE,GAzCW,EAAA4wB,mBCxBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,eAAA,EAAA,IACA,EAAA,EAAA,IAAA,EAIA,EAAA,GAAA,EACU,WAAA,SAAA,IAAA,KAAAW,OAAS,EACT,KAAAC,KAAO,EACP,KAAAC,UAA6ChyB,OAAOY,OAAO,MAC3D,KAAAqxB,WAAqC,aAoJ/C,OAlJS,EAAAC,UAAAA,WAAP,SAAkB9N,EAAepc,QACD/F,IAA1BV,KAAKywB,UAAU5N,KACjB7iB,KAAKywB,UAAU5N,GAAS,IAE1B,IAAM+N,EAAc5wB,KAAKywB,UAAU5N,GAEnC,OADA+N,EAAYzwB,KAAKsG,GACV,CACLrG,QAAS,WACP,IAAMywB,EAAeD,EAAYhvB,QAAQ6E,IACnB,IAAlBoqB,GACFD,EAAYvwB,OAAOwwB,EAAc,MAKlC,EAAAC,UAAAA,WAAP,SAAkBjO,EAAepc,GAC/BzG,KAAKywB,UAAU5N,GAAS,CAACpc,IAEpB,EAAAsqB,UAAAA,aAAP,SAAoBlO,GACd7iB,KAAKywB,UAAU5N,WAAe7iB,KAAKywB,UAAU5N,IAE5C,EAAAmO,UAAAA,mBAAP,SAA0BvqB,GACxBzG,KAAK0wB,WAAajqB,GAGb,EAAArG,UAAAA,QAAP,WACEJ,KAAKywB,UAAYhyB,OAAOY,OAAO,MAC/BW,KAAK0wB,WAAa,cAGb,EAAA7C,UAAAA,MAAP,WAEsB,IAAhB7tB,KAAKuwB,QACPvwB,KAAKmH,KAAI,GAEXnH,KAAKwwB,KAAO,EACZxwB,KAAKuwB,OAAS,GAGR,EAAAU,UAAAA,OAAR,WACE,IAAMC,EAAWlxB,KAAKywB,UAAUzwB,KAAKwwB,KACrC,GAAKU,EAGH,IAAK,IAAI3F,EAAI2F,EAAS71B,OAAS,EAAGkwB,GAAK,EAAGA,IACxC2F,EAAS3F,GAAGrkB,aAHdlH,KAAK0wB,WAAW1wB,KAAKwwB,IAAK,UAQtB,EAAAW,UAAAA,KAAR,SAAalqB,EAAmBC,EAAeC,GAC7C,IAAM+pB,EAAWlxB,KAAKywB,UAAUzwB,KAAKwwB,KACrC,GAAKU,EAGH,IAAK,IAAI3F,EAAI2F,EAAS71B,OAAS,EAAGkwB,GAAK,EAAGA,IACxC2F,EAAS3F,GAAGpL,IAAIlZ,EAAMC,EAAOC,QAH/BnH,KAAK0wB,WAAW1wB,KAAKwwB,IAAK,MAAO,EAAAjQ,cAActZ,EAAMC,EAAOC,KAQxD,EAAAiqB,UAAAA,KAAR,SAAa9Q,GAIX,IAAM4Q,EAAWlxB,KAAKywB,UAAUzwB,KAAKwwB,KACrC,GAAKU,EAEE,CAEL,IADA,IAAI3F,EAAI2F,EAAS71B,OAAS,EACnBkwB,GAAK,IACuB,IAA7B2F,EAAS3F,GAAGpkB,IAAImZ,GADPiL,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACb2F,EAAS3F,GAAGpkB,KAAI,QAXlBnH,KAAK0wB,WAAW1wB,KAAKwwB,IAAK,MAAOlQ,IAgB9B,EAAApZ,UAAAA,MAAP,WAEElH,KAAK6tB,QACL7tB,KAAKwwB,KAAO,EACZxwB,KAAKuwB,OAAS,GAUT,EAAApQ,UAAAA,IAAP,SAAWlZ,EAAmBC,EAAeC,GAC3C,GAAoB,IAAhBnH,KAAKuwB,OAAT,CAGA,GAAoB,IAAhBvwB,KAAKuwB,OACP,KAAOrpB,EAAQC,GAAK,CAClB,IAAM3L,EAAOyL,EAAKC,KAClB,GAAa,KAAT1L,EAAe,CACjBwE,KAAKuwB,OAAS,EACdvwB,KAAKixB,SACL,MAEF,GAAIz1B,EAAO,IAAQ,GAAOA,EAExB,YADAwE,KAAKuwB,OAAS,IAGE,IAAdvwB,KAAKwwB,MACPxwB,KAAKwwB,IAAM,GAEbxwB,KAAKwwB,IAAiB,GAAXxwB,KAAKwwB,IAAWh1B,EAAO,GAGlB,IAAhBwE,KAAKuwB,QAA+BppB,EAAMD,EAAQ,GACpDlH,KAAKmxB,KAAKlqB,EAAMC,EAAOC,KASpB,EAAAA,UAAAA,IAAP,SAAWmZ,GACW,IAAhBtgB,KAAKuwB,SAIW,IAAhBvwB,KAAKuwB,SAIa,IAAhBvwB,KAAKuwB,QACPvwB,KAAKixB,SAEPjxB,KAAKoxB,KAAK9Q,IAEZtgB,KAAKwwB,KAAO,EACZxwB,KAAKuwB,OAAS,IAElB,EAvJU,GADG,EAAAc,UA8Jb,EAAA,IAIE,EAAA,WAAA,SAAoBC,EAAAA,GAAA,KAAAA,SAHZ,EAAA,KAAA1V,MAAQ,GACR,KAAA2V,WAAqB,EA+B/B,OA3BS,EAAArqB,UAAAA,MAAP,WACElH,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,GAGZ,EAAApR,UAAAA,IAAP,SAAWlZ,EAAmBC,EAAeC,GACvCnH,KAAKuxB,YAGTvxB,KAAK4b,OAAS,EAAA2E,cAActZ,EAAMC,EAAOC,GACrCnH,KAAK4b,MAAMvgB,OAAS,EAAAm2B,gBACtBxxB,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,KAId,EAAApqB,UAAAA,IAAP,SAAWmZ,GACT,IAAImR,EAQJ,OAPIzxB,KAAKuxB,UACPE,GAAM,EACGnR,IACTmR,EAAMzxB,KAAKsxB,SAAStxB,KAAK4b,QAE3B5b,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,EACVE,GAEX,EA7BE,GAJW,EAAApK,uBChHA,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,mBAAA,EAAA,EAAAmK,cAAgB,cClD7B,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,eAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EAEME,EAAAA,IAAAA,EAAgC,GAEtC,EACU,WAAA,SAAA,IAAA,KAAAjB,UAA6ChyB,OAAOY,OAAO,MAC3D,KAAAsyB,QAAyBD,EACzB,KAAAE,OAAiB,EACjB,KAAAlB,WAAqC,aAsF/C,OApFS,EAAAtwB,UAAAA,QAAP,WACEJ,KAAKywB,UAAYhyB,OAAOY,OAAO,MAC/BW,KAAK0wB,WAAa,cAGb,EAAAC,UAAAA,WAAP,SAAkB9N,EAAepc,QACD/F,IAA1BV,KAAKywB,UAAU5N,KACjB7iB,KAAKywB,UAAU5N,GAAS,IAE1B,IAAM+N,EAAc5wB,KAAKywB,UAAU5N,GAEnC,OADA+N,EAAYzwB,KAAKsG,GACV,CACLrG,QAAS,WACP,IAAMywB,EAAeD,EAAYhvB,QAAQ6E,IACnB,IAAlBoqB,GACFD,EAAYvwB,OAAOwwB,EAAc,MAMlC,EAAAC,UAAAA,WAAP,SAAkBjO,EAAepc,GAC/BzG,KAAKywB,UAAU5N,GAAS,CAACpc,IAGpB,EAAAsqB,UAAAA,aAAP,SAAoBlO,GACd7iB,KAAKywB,UAAU5N,WAAe7iB,KAAKywB,UAAU5N,IAG5C,EAAAmO,UAAAA,mBAAP,SAA0BvqB,GACxBzG,KAAK0wB,WAAajqB,GAGb,EAAAonB,UAAAA,MAAP,WACM7tB,KAAK2xB,QAAQt2B,QACf2E,KAAKqgB,QAAO,GAEdrgB,KAAK2xB,QAAUD,EACf1xB,KAAK4xB,OAAS,GAGT,EAAA3R,UAAAA,KAAP,SAAY4C,EAAe3C,GAKzB,GAHAlgB,KAAK6tB,QACL7tB,KAAK4xB,OAAS/O,EACd7iB,KAAK2xB,QAAU3xB,KAAKywB,UAAU5N,IAAU6O,EACnC1xB,KAAK2xB,QAAQt2B,OAGhB,IAAK,IAAIkwB,EAAIvrB,KAAK2xB,QAAQt2B,OAAS,EAAGkwB,GAAK,EAAGA,IAC5CvrB,KAAK2xB,QAAQpG,GAAGtL,KAAKC,QAHvBlgB,KAAK0wB,WAAW1wB,KAAK4xB,OAAQ,OAAQ1R,IAQlC,EAAAC,UAAAA,IAAP,SAAWlZ,EAAmBC,EAAeC,GAC3C,GAAKnH,KAAK2xB,QAAQt2B,OAGhB,IAAK,IAAIkwB,EAAIvrB,KAAK2xB,QAAQt2B,OAAS,EAAGkwB,GAAK,EAAGA,IAC5CvrB,KAAK2xB,QAAQpG,GAAGpL,IAAIlZ,EAAMC,EAAOC,QAHnCnH,KAAK0wB,WAAW1wB,KAAK4xB,OAAQ,MAAO,EAAArR,cAActZ,EAAMC,EAAOC,KAQ5D,EAAAkZ,UAAAA,OAAP,SAAcC,GACZ,GAAKtgB,KAAK2xB,QAAQt2B,OAEX,CAEL,IADA,IAAIkwB,EAAIvrB,KAAK2xB,QAAQt2B,OAAS,EACvBkwB,GAAK,IAC8B,IAApCvrB,KAAK2xB,QAAQpG,GAAGlL,OAAOC,GADdiL,KAOf,IAFAA,IAEOA,GAAK,EAAGA,IACbvrB,KAAK2xB,QAAQpG,GAAGlL,QAAO,QAXzBrgB,KAAK0wB,WAAW1wB,KAAK4xB,OAAQ,SAAUtR,GAczCtgB,KAAK2xB,QAAUD,EACf1xB,KAAK4xB,OAAS,GAElB,EAzFU,GADG,EAAAC,UAgGb,EAAA,IAKE,EAAA,WAAA,SAAoBP,EAAAA,GAAA,KAAAA,SAJZ,EAAA,KAAA1V,MAAQ,GAER,KAAA2V,WAAqB,EAiC/B,OA7BS,EAAAtR,UAAAA,KAAP,SAAYC,GACVlgB,KAAK8xB,QAAU5R,EAAOzb,QACtBzE,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,GAGZ,EAAApR,UAAAA,IAAP,SAAWlZ,EAAmBC,EAAeC,GACvCnH,KAAKuxB,YAGTvxB,KAAK4b,OAAS,EAAA2E,cAActZ,EAAMC,EAAOC,GACrCnH,KAAK4b,MAAMvgB,OAAS,EAAAm2B,gBACtBxxB,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,KAId,EAAAlR,UAAAA,OAAP,SAAcC,GACZ,IAAImR,EASJ,OARIzxB,KAAKuxB,UACPE,GAAM,EACGnR,IACTmR,EAAMzxB,KAAKsxB,SAAStxB,KAAK4b,MAAO5b,KAAK8xB,SAAW,IAAI,EAAAlC,SAEtD5vB,KAAK8xB,aAAUpxB,EACfV,KAAK4b,MAAQ,GACb5b,KAAKuxB,WAAY,EACVE,GAEX,EA/BE,GALW,EAAAtH,uBCxGb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,wBAAA,EAAA,sBAAA,EAAA,IAEA,EAAA,EAAA,IAAA,EAaM4H,EAAAA,IAAAA,EAAyC,GAM/C,EACErrB,iBAAAA,SAAAA,EACAsrB,EACAC,EACAxd,EACAC,GAKA,IAHA,IAAMwd,EAAY,EAAAC,eAAe1d,EAAiBC,EAAkBhO,EAASurB,GAGpEt0B,EAAI,EAAGA,EAAIo0B,EAAe12B,OAAQsC,IAAK,CAC9C,IACMy0B,GADAC,EAAQN,EAAep0B,IACF20B,QAAQ1wB,QAAQowB,GAC3C,GAAII,GAAgB,EAAG,CACrB,GAAI,EAAAG,aAAaF,EAAMG,OAAQN,GAC7B,OAAOG,EAAMI,MAGc,IAAzBJ,EAAMC,QAAQj3B,QAChBg3B,EAAMI,MAAMryB,UACZ2xB,EAAe1xB,OAAO1C,EAAG,IAEzB00B,EAAMC,QAAQjyB,OAAO+xB,EAAc,GAErC,OAKJ,IAASz0B,EAAI,EAAGA,EAAIo0B,EAAe12B,OAAQsC,IAAK,CAC9C,IAAM00B,EAAQN,EAAep0B,GAC7B,GAAI,EAAA40B,aAAaF,EAAMG,OAAQN,GAG7B,OADAG,EAAMC,QAAQnyB,KAAK6xB,GACZK,EAAMI,MAIjB,IAAMC,EAAiC,CACrCD,MAAO,IAAI,EAAAE,iBACTtgB,SACA6f,GAEFM,OAAQN,EACRI,QAAS,CAACN,IAGZ,OADAD,EAAe5xB,KAAKuyB,GACbA,EAASD,OAMlB,EAAwCT,wBAAAA,SAAAA,GACtC,IAAK,IAAIr0B,EAAI,EAAGA,EAAIo0B,EAAe12B,OAAQsC,IAAK,CAC9C,IAAMgE,EAAQowB,EAAep0B,GAAG20B,QAAQ1wB,QAAQowB,GAChD,IAAe,IAAXrwB,EAAc,CACyB,IAArCowB,EAAep0B,GAAG20B,QAAQj3B,QAE5B02B,EAAep0B,GAAG80B,MAAMryB,UACxB2xB,EAAe1xB,OAAO1C,EAAG,IAGzBo0B,EAAep0B,GAAG20B,QAAQjyB,OAAOsB,EAAO,GAE1C,mBCrFN,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,aAAA,EAAA,oBAAA,EAAA,IAIA,EAAA,EAAA,GAAA,EAA+B8S,eAAAA,SAAAA,EAAyBC,EAA0BhO,EAA2BurB,GAE3G,IAAMW,EAAiC,CACrCzb,WAAY8a,EAAO9a,WACnBpB,WAAYkc,EAAOlc,WACnB8c,YAAQnyB,EACRoyB,kBAAcpyB,EACdqyB,eAAWryB,EAGXwW,KAAM+a,EAAO/a,KAAKtb,MAAM,EAAG,KAE7B,MAAO,CACL4Z,iBAAkB5X,OAAO4X,iBACzBf,gBAAe,EACfC,iBAAgB,EAChBkF,WAAYlT,EAAQkT,WACpBD,SAAUjT,EAAQiT,SAClBD,WAAYhT,EAAQgT,WACpBD,eAAgB/S,EAAQ+S,eACxBuZ,kBAAmBtsB,EAAQssB,kBAC3Bf,OAAQW,IAIZ,EAA6Bl1B,aAAAA,SAAAA,EAAqB+L,GAChD,IAAK,IAAI9L,EAAI,EAAGA,EAAID,EAAEu0B,OAAO/a,KAAK7b,OAAQsC,IACxC,GAAID,EAAEu0B,OAAO/a,KAAKvZ,GAAGsL,OAASQ,EAAEwoB,OAAO/a,KAAKvZ,GAAGsL,KAC7C,OAAO,EAGX,OAAOvL,EAAE8X,mBAAqB/L,EAAE+L,kBAC5B9X,EAAEkc,aAAenQ,EAAEmQ,YACnBlc,EAAEic,WAAalQ,EAAEkQ,UACjBjc,EAAEgc,aAAejQ,EAAEiQ,YACnBhc,EAAE+b,iBAAmBhQ,EAAEgQ,gBACvB/b,EAAEs1B,oBAAsBvpB,EAAEupB,mBAC1Bt1B,EAAE+W,kBAAoBhL,EAAEgL,iBACxB/W,EAAEgX,mBAAqBjL,EAAEiL,kBACzBhX,EAAEu0B,OAAO9a,aAAe1N,EAAEwoB,OAAO9a,YACjCzZ,EAAEu0B,OAAOlc,aAAetM,EAAEwoB,OAAOlc,YAGvC,EAA2Bkd,WAAAA,SAAAA,GACzB,OAAOA,EAAY,EAAAhxB,yBC/CrB,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,aAAA,EAAA,yBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EAEMixB,EAAAA,IAAAA,EAAqB,EAAArpB,IAAIY,QAAQ,WACjC0oB,EAAqB,EAAAtpB,IAAIY,QAAQ,WACjC2oB,EAAiB,EAAAvpB,IAAIY,QAAQ,WAC7B4oB,EAAwB,EAAAxpB,IAAIY,QAAQ,WACpC6oB,EAAoB,CACxBzpB,IAAK,2BACLZ,KAAM,YAKK,EAAAsqB,oBAAsB,WAyBjC,IAxBA,IAAMtB,EAAS,CAEb,EAAApoB,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WAEZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,WACZ,EAAAZ,IAAIY,QAAQ,YAKR+oB,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KAChC71B,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMkB,EAAI20B,EAAG71B,EAAI,GAAM,EAAI,GACrB6L,EAAIgqB,EAAG71B,EAAI,EAAK,EAAI,GACpB8L,EAAI+pB,EAAE71B,EAAI,GAChBs0B,EAAO9xB,KAAK,CACV0J,IAAK,EAAAd,SAASQ,MAAM1K,EAAG2K,EAAGC,GAC1BR,KAAM,EAAAF,SAASW,OAAO7K,EAAG2K,EAAGC,KAKhC,IAAS9L,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMS,EAAI,EAAQ,GAAJT,EACds0B,EAAO9xB,KAAK,CACV0J,IAAK,EAAAd,SAASQ,MAAMnL,EAAGA,EAAGA,GAC1B6K,KAAM,EAAAF,SAASW,OAAOtL,EAAGA,EAAGA,KAIhC,OAAO6zB,EA5C0B,GAkDnC,IAME,EAAA,WAAA,SAAY5f,EAAAA,EAA2B2gB,GAAA,KAAAA,kBACrC,EAAA,IAAMS,EAASphB,EAASC,cAAc,UACtCmhB,EAAO5e,MAAQ,EACf4e,EAAO1e,OAAS,EAChB,IAAM2e,EAAMD,EAAOzgB,WAAW,MAC9B,IAAK0gB,EACH,MAAM,IAAIp5B,MAAM,mCAElB0F,KAAK8S,KAAO4gB,EACZ1zB,KAAK8S,KAAK6gB,yBAA2B,OACrC3zB,KAAK4zB,aAAe5zB,KAAK8S,KAAK+gB,qBAAqB,EAAG,EAAG,EAAG,GAC5D7zB,KAAK8zB,eAAiB,IAAI,EAAAC,mBAC1B/zB,KAAKiyB,OAAS,CACZ9a,WAAY+b,EACZnd,WAAYod,EACZN,OAAQO,EACRN,aAAcO,EACdW,qBAAsBV,EACtBW,gBAAiB,EAAAtqB,MAAMC,MAAMupB,EAAoBG,GACjDpc,KAAM,EAAAqc,oBAAoB33B,QAC1Bme,cAAe/Z,KAAK8zB,gBAoH1B,OAhHS,EAAAI,UAAAA,gBAAP,SAAuB50B,GACT,yBAARA,GACFU,KAAK8zB,eAAevsB,SASjB,EAAA4sB,UAAAA,SAAP,SAAgBC,QAAA,IAAAA,IAAA,EAAA,IACdp0B,KAAKiyB,OAAO9a,WAAanX,KAAKq0B,YAAYD,EAAMjd,WAAY+b,GAC5DlzB,KAAKiyB,OAAOlc,WAAa/V,KAAKq0B,YAAYD,EAAMre,WAAYod,GAC5DnzB,KAAKiyB,OAAOY,OAAS7yB,KAAKq0B,YAAYD,EAAMvB,OAAQO,GAAgB,GACpEpzB,KAAKiyB,OAAOa,aAAe9yB,KAAKq0B,YAAYD,EAAMtB,aAAcO,GAAuB,GACvFrzB,KAAKiyB,OAAO+B,qBAAuBh0B,KAAKq0B,YAAYD,EAAMrB,UAAWO,GAAmB,GACxFtzB,KAAKiyB,OAAOgC,gBAAkB,EAAAtqB,MAAMC,MAAM5J,KAAKiyB,OAAOlc,WAAY/V,KAAKiyB,OAAO+B,sBAK1E,EAAArqB,MAAMW,SAAStK,KAAKiyB,OAAO+B,wBAE7Bh0B,KAAKiyB,OAAO+B,qBAAuB,EAAArqB,MAAMkB,QAAQ7K,KAAKiyB,OAAO+B,qBAD7C,KAGlBh0B,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAME,MAAO,EAAAf,oBAAoB,IACxEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMG,IAAK,EAAAhB,oBAAoB,IACtEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMI,MAAO,EAAAjB,oBAAoB,IACxEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMK,OAAQ,EAAAlB,oBAAoB,IACzEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMM,KAAM,EAAAnB,oBAAoB,IACvEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMO,QAAS,EAAApB,oBAAoB,IAC1EvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMQ,KAAM,EAAArB,oBAAoB,IACvEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMS,MAAO,EAAAtB,oBAAoB,IACxEvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMU,YAAa,EAAAvB,oBAAoB,IAC9EvzB,KAAKiyB,OAAO/a,KAAK,GAAKlX,KAAKq0B,YAAYD,EAAMW,UAAW,EAAAxB,oBAAoB,IAC5EvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMY,YAAa,EAAAzB,oBAAoB,KAC/EvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMa,aAAc,EAAA1B,oBAAoB,KAChFvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMc,WAAY,EAAA3B,oBAAoB,KAC9EvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMe,cAAe,EAAA5B,oBAAoB,KACjFvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMgB,WAAY,EAAA7B,oBAAoB,KAC9EvzB,KAAKiyB,OAAO/a,KAAK,IAAMlX,KAAKq0B,YAAYD,EAAMiB,YAAa,EAAA9B,oBAAoB,KAE/EvzB,KAAK8zB,eAAevsB,SAGd,EAAA8sB,UAAAA,YAAR,SACExqB,EACAyrB,EACAtC,GAEA,QAFA,IAAAA,IAA6BhzB,EAAAA,KAAKgzB,wBAEtBtyB,IAARmJ,EACF,OAAOyrB,EAQT,GAFAt1B,KAAK8S,KAAKgD,UAAY9V,KAAK4zB,aAC3B5zB,KAAK8S,KAAKgD,UAAYjM,EACa,iBAAxB7J,KAAK8S,KAAKgD,UAEnB,OADAyf,QAAQC,KAAK,UAAU3rB,EAAG,8BAA8ByrB,EAASzrB,KAC1DyrB,EAGTt1B,KAAK8S,KAAKwC,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAMrO,EAAOjH,KAAK8S,KAAK2iB,aAAa,EAAG,EAAG,EAAG,GAAGxuB,KAGhD,GAAgB,MAAZA,EAAK,GAAa,CACpB,IAAK+rB,EAqBH,OAJAuC,QAAQC,KACN,UAAU3rB,EAAG,0EACKyrB,EAASzrB,IAAG,KAEzByrB,EAKH,IAAet1B,EAAAA,KAAK8S,KAAKgD,UAAUrZ,UAAU,EAAGuD,KAAK8S,KAAKgD,UAAUza,OAAS,GAAGq6B,MAAM,KAAK35B,IAAI,SAAA45B,GAAa,OAAAC,OAAOD,KAAlH92B,EAAC,EAAE2K,GAAAA,EAAC,EAAEC,GAAAA,EAAC,EAAE/L,GAAAA,EAAC,EACXuV,GAAAA,EAAQ7I,KAAKC,MAAU,IAAJ3M,GAEzB,MAAO,CACLuL,KAFmB,EAAAF,SAASW,OAAO7K,EAAG2K,EAAGC,EAAGwJ,GAG5CpJ,IAAG,GAIP,MAAO,CAGLA,IAAK7J,KAAK8S,KAAKgD,UACf7M,KAAM,EAAAF,SAASW,OAAOzC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAG5D,EAxIE,GANW,EAAA4uB,yBClEb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,EAAgC72B,aAAAA,SAAAA,GAC9B,IAAKA,EACH,MAAM,IAAI1E,MAAM,2BAElB,OAAO0E,aCFT,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,wBAAA,EAAA,oBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAGA,EAAA,GAAA,EASE,SAAA,GAAA,SAAY82B,EAAAA,EAAsB9jB,EAAe6C,GAAjD,IACE,EAAA,EAAO,KAAA,OAAA,YANF,EAAAhS,QAAkB,EAGlB,EAAAK,aAAuB,GAI5B,EAAKJ,GAAKgzB,EAAUhzB,GACpB,EAAKC,GAAK+yB,EAAU/yB,GACpB,EAAKG,aAAe8O,EACpB,EAAK+jB,OAASlhB,IA6BlB,OA3CoC,EAiB3B,EAAA,GAAA,EAAAtR,UAAAA,WAAP,WAEE,OAAO,SAGF,EAAAC,UAAAA,SAAP,WACE,OAAOxD,KAAK+1B,QAGP,EAAAtyB,UAAAA,SAAP,WACE,OAAOzD,KAAKkD,cAGP,EAAAS,UAAAA,QAAP,WAGE,OAAO,SAGF,EAAAL,UAAAA,gBAAP,SAAuBtE,GACrB,MAAM,IAAI1E,MAAM,oBAGX,EAAAyJ,UAAAA,cAAP,WACE,MAAO,CAAC/D,KAAK8C,GAAI9C,KAAKyD,WAAYzD,KAAKwD,WAAYxD,KAAK2D,YAE5D,EAlCE,CATkC,EAAAK,eAAvB,EAAAgyB,eA6Cb,EAAA,IAME,EAAA,WAAA,SAAoBzkB,EAAAA,GAAA,KAAAA,eAJZ,EAAA,KAAA0kB,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAAzU,UAAsB,IAAI,EAAApe,SAwQpC,OApQS,EAAA8yB,UAAAA,wBAAP,SAA+B1vB,GAC7B,IAAM2vB,EAA2B,CAC/Bh7B,GAAI4E,KAAKk2B,yBACTzvB,QAAO,GAIT,OADAzG,KAAKi2B,kBAAkB91B,KAAKi2B,GACrBA,EAAOh7B,IAGT,EAAAi7B,UAAAA,0BAAP,SAAiCC,GAC/B,IAAK,IAAI34B,EAAI,EAAGA,EAAIqC,KAAKi2B,kBAAkB56B,OAAQsC,IACjD,GAAIqC,KAAKi2B,kBAAkBt4B,GAAGvC,KAAOk7B,EAEnC,OADAt2B,KAAKi2B,kBAAkB51B,OAAO1C,EAAG,IAC1B,EAIX,OAAO,GAGF,EAAA44B,UAAAA,oBAAP,SAA2B5K,GACzB,GAAsC,IAAlC3rB,KAAKi2B,kBAAkB56B,OACzB,MAAO,GAGT,IAAM4hB,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAI+sB,GAClD,IAAK1O,GAAwB,IAAhBA,EAAK5hB,OAChB,MAAO,GAgBT,IAbA,IAAMm7B,EAA6B,GAC7BC,EAAUxZ,EAAKW,mBAAkB,GAMnC8Y,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAc5Z,EAAKjB,MAAM,GACzB8a,EAAc7Z,EAAKhB,MAAM,GAEpB7G,EAAI,EAAGA,EAAI6H,EAAKG,mBAAoBhI,IAG3C,GAFA6H,EAAKZ,SAASjH,EAAGpV,KAAKyhB,WAEY,IAA9BzhB,KAAKyhB,UAAUje,WAAnB,CAMA,GAAIxD,KAAKyhB,UAAU3e,KAAO+zB,GAAe72B,KAAKyhB,UAAU1e,KAAO+zB,EAAa,CAG1E,GAAI1hB,EAAIshB,EAAmB,EAQzB,IAPA,IAAMK,EAAe/2B,KAAKg3B,iBACxBP,EACAG,EACAD,EACA1Z,EACAyZ,GAEO/4B,EAAI,EAAGA,EAAIo5B,EAAa17B,OAAQsC,IACvC64B,EAAOr2B,KAAK42B,EAAap5B,IAK7B+4B,EAAmBthB,EACnBwhB,EAAwBD,EACxBE,EAAc72B,KAAKyhB,UAAU3e,GAC7Bg0B,EAAc92B,KAAKyhB,UAAU1e,GAG/B4zB,GAAsB32B,KAAKyhB,UAAUhe,WAAWpI,QAAU,EAAAqH,qBAAqBrH,OAIjF,GAAI2E,KAAKuR,eAAegI,KAAOmd,EAAmB,EAQhD,IAPMK,EAAe/2B,KAAKg3B,iBACxBP,EACAG,EACAD,EACA1Z,EACAyZ,GAEO/4B,EAAI,EAAGA,EAAIo5B,EAAa17B,OAAQsC,IACvC64B,EAAOr2B,KAAK42B,EAAap5B,IAI7B,OAAO64B,GAWD,EAAAQ,UAAAA,iBAAR,SAAyB/Z,EAAcX,EAAoB2a,EAAkBC,EAAuBpZ,GAMlG,IALA,IAAMqZ,EAAOla,EAAKxgB,UAAU6f,EAAY2a,GAIlCF,EAAmC/2B,KAAKi2B,kBAAkB,GAAGxvB,QAAQ0wB,GAClEx5B,EAAI,EAAGA,EAAIqC,KAAKi2B,kBAAkB56B,OAAQsC,IAGjD,IADA,IAAMy5B,EAAep3B,KAAKi2B,kBAAkBt4B,GAAG8I,QAAQ0wB,GAC9C5L,EAAI,EAAGA,EAAI6L,EAAa/7B,OAAQkwB,IACvC8L,EAAwBC,aAAaP,EAAcK,EAAa7L,IAIpE,OADAvrB,KAAKu3B,0BAA0BR,EAAcG,EAAUpZ,GAChDiZ,GAWD,EAAAQ,UAAAA,0BAAR,SAAkCf,EAA4BvZ,EAAmBa,GAC/E,IAAI0Z,EAAoB,EACpBC,GAAsB,EACtBd,EAAqB,EACrBe,EAAelB,EAAOgB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAItiB,EAAI0I,EAAU1I,EAAIpV,KAAKuR,eAAegI,KAAMnE,IAAK,CACxD,IAAMP,EAAQoI,EAAKzZ,SAAS4R,GACtB,EAAS6H,EAAKb,UAAUhH,GAAG/Z,QAAU,EAAAqH,qBAAqBrH,OAIhE,GAAc,IAAVwZ,EAAJ,CAWA,IANK4iB,GAAuBC,EAAa,IAAMf,IAC7Ce,EAAa,GAAKtiB,EAClBqiB,GAAsB,GAIpBC,EAAa,IAAMf,EAAoB,CAOzC,GANAe,EAAa,GAAKtiB,IAGlBsiB,EAAelB,IAASgB,IAItB,MAOEE,EAAa,IAAMf,GACrBe,EAAa,GAAKtiB,EAClBqiB,GAAsB,GAEtBA,GAAsB,EAM1Bd,GAAsB,GAKpBe,IACFA,EAAa,GAAK13B,KAAKuR,eAAegI,QAY3B,EAAA+d,aAAf,SAA4Bd,EAA4BmB,GAEtD,IADA,IAAIC,GAAU,EACLj6B,EAAI,EAAGA,EAAI64B,EAAOn7B,OAAQsC,IAAK,CACtC,IAAMk6B,EAAQrB,EAAO74B,GACrB,GAAKi6B,EAAL,CAwBE,GAAID,EAAS,IAAME,EAAM,GAIvB,OADArB,EAAO74B,EAAI,GAAG,GAAKg6B,EAAS,GACrBnB,EAGT,GAAImB,EAAS,IAAME,EAAM,GAKvB,OAFArB,EAAO74B,EAAI,GAAG,GAAKyM,KAAKqB,IAAIksB,EAAS,GAAIE,EAAM,IAC/CrB,EAAOn2B,OAAO1C,EAAG,GACV64B,EAKTA,EAAOn2B,OAAO1C,EAAG,GACjBA,QA1CF,CACE,GAAIg6B,EAAS,IAAME,EAAM,GAGvB,OADArB,EAAOn2B,OAAO1C,EAAG,EAAGg6B,GACbnB,EAGT,GAAImB,EAAS,IAAME,EAAM,GAIvB,OADAA,EAAM,GAAKztB,KAAKwB,IAAI+rB,EAAS,GAAIE,EAAM,IAChCrB,EAGLmB,EAAS,GAAKE,EAAM,KAGtBA,EAAM,GAAKztB,KAAKwB,IAAI+rB,EAAS,GAAIE,EAAM,IACvCD,GAAU,IAoChB,OARIA,EAEFpB,EAAOA,EAAOn7B,OAAS,GAAG,GAAKs8B,EAAS,GAGxCnB,EAAOr2B,KAAKw3B,GAGPnB,GAEX,EAtQE,GANW,EAAAa,oCCpDb,EAAA,EAAA,GAAA,aAAA,SAAgBS,EAA2BtP,EAA2CuP,GACpF,IAAMze,EAAOye,EAAQC,wBACrB,MAAO,CAACxP,EAAMyP,QAAU3e,EAAK4e,KAAM1P,EAAM2P,QAAU7e,EAAK8U,YAF1D,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,gCAAA,EAAA,EAiBA,2BAAA,EAAA,EAA0B5F,UAAAA,SAAAA,EAA2CuP,EAAsBK,EAAkBC,EAAkBC,EAA2BC,EAAyBC,EAA0BC,GAE3M,GAAKH,EAAL,CAIA,IAAMI,EAASZ,EAA2BtP,EAAOuP,GACjD,GAAKW,EAaL,OATAA,EAAO,GAAKtuB,KAAKsB,MAAMgtB,EAAO,IAAMD,EAAcF,EAAkB,EAAI,IAAMA,GAC9EG,EAAO,GAAKtuB,KAAKsB,KAAKgtB,EAAO,GAAKF,GAKlCE,EAAO,GAAKtuB,KAAKwB,IAAIxB,KAAKqB,IAAIitB,EAAO,GAAI,GAAIN,GAAYK,EAAc,EAAI,IAC3EC,EAAO,GAAKtuB,KAAKwB,IAAIxB,KAAKqB,IAAIitB,EAAO,GAAI,GAAIL,GAEtCK,IAQT,EAAiCA,iBAAAA,SAAAA,GAC/B,GAAKA,EAKL,MAAO,CAAEtjB,EAAGsjB,EAAO,GAAK,GAAIrjB,EAAGqjB,EAAO,GAAK,eC9C7C,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,IAME,EAAA,WAAA,SACUC,EAAAA,GAAA,KAAAA,gBA6CZ,EAAA,OAzCS,EAAAv4B,UAAAA,QAAP,WACMJ,KAAK44B,kBACPh7B,OAAOi7B,qBAAqB74B,KAAK44B,iBACjC54B,KAAK44B,qBAAkBl4B,IAIpB,EAAAo4B,UAAAA,QAAP,SAAeC,EAA8BC,EAA4BX,GAAzE,IACEr4B,EAAAA,KAAAA,KAAKi5B,UAAYZ,EAEjBU,OAAwBr4B,IAAbq4B,EAAyBA,EAAW,EAC/CC,OAAoBt4B,IAAXs4B,EAAuBA,EAASh5B,KAAKi5B,UAAY,EAE1Dj5B,KAAKk5B,eAA+Bx4B,IAAnBV,KAAKk5B,UAA0B9uB,KAAKwB,IAAI5L,KAAKk5B,UAAWH,GAAYA,EACrF/4B,KAAKm5B,aAA2Bz4B,IAAjBV,KAAKm5B,QAAwB/uB,KAAKqB,IAAIzL,KAAKm5B,QAASH,GAAUA,EAEzEh5B,KAAK44B,kBAIT54B,KAAK44B,gBAAkBh7B,OAAOw7B,sBAAsB,WAAM,OAAKC,EAAAA,oBAGzD,EAAAA,UAAAA,cAAR,WAEE,QAAuB34B,IAAnBV,KAAKk5B,gBAA4Cx4B,IAAjBV,KAAKm5B,cAA4Cz4B,IAAnBV,KAAKi5B,UAAvE,CAKA,IAAM/xB,EAAQkD,KAAKqB,IAAIzL,KAAKk5B,UAAW,GACjC/xB,EAAMiD,KAAKwB,IAAI5L,KAAKm5B,QAASn5B,KAAKi5B,UAAY,GAGpDj5B,KAAKk5B,eAAYx4B,EACjBV,KAAKm5B,aAAUz4B,EACfV,KAAK44B,qBAAkBl4B,EAGvBV,KAAK24B,gBAAgBzxB,EAAOC,KAEhC,EA9CE,GANW,EAAAmyB,4BCLb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,sBAAA,EAAA,IAcA,gFACU,EAAAC,yBAAmC37B,OAAO4X,mBAgDpD,OAjDsC,EAM7B,EAAA,GAAA,EAAAgkB,UAAAA,YAAP,SAAmBt5B,GAAnB,IACMF,EAAAA,KAAAA,KAAKy5B,WACPz5B,KAAK05B,gBAEP15B,KAAKy5B,UAAYv5B,EACjBF,KAAK25B,eAAiB,WACf,EAAKF,YAGV,EAAKA,UAAU77B,OAAO4X,iBAAkB,EAAK+jB,0BAC7C,EAAKK,eAEP55B,KAAK45B,cAGA,EAAAx5B,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KACbJ,MAAAA,KAAK05B,iBAGC,EAAAE,UAAAA,WAAR,eACO55B,EAAAA,KAAK25B,iBAKoB,QAA9B,EAAA35B,KAAK65B,iCAAyB,IAAEC,GAAAA,EAAAA,eAAe95B,KAAK25B,gBAGpD35B,KAAKu5B,yBAA2B37B,OAAO4X,iBACvCxV,KAAK65B,0BAA4Bj8B,OAAOm8B,WAAW,2BAA2Bn8B,OAAO4X,iBAAgB,SACrGxV,KAAK65B,0BAA0BG,YAAYh6B,KAAK25B,kBAG3C,EAAAD,UAAAA,cAAP,WACO15B,KAAK65B,2BAA8B75B,KAAKy5B,WAAcz5B,KAAK25B,iBAGhE35B,KAAK65B,0BAA0BC,eAAe95B,KAAK25B,gBACnD35B,KAAK65B,+BAA4Bn5B,EACjCV,KAAKy5B,eAAY/4B,EACjBV,KAAK25B,oBAAiBj5B,IAE1B,GA/DA,EAcsCqB,GAAAA,YAAzB,EAAAk4B,6BCXb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,EAAgBx1B,MAAAA,SAAAA,EAASy1B,EAAQC,GAC/B,QAD+B,IAAAA,IAAA,EAAA,GACZ,iBAARD,EACT,OAAOA,EAIT,IAAME,EAAoBl/B,MAAMC,QAAQ++B,GAAO,GAAK,GAEpD,IAAK,IAAM56B,KAAO46B,EAEhBE,EAAa96B,GAAO66B,GAAS,EAAID,EAAI56B,GAAQ46B,EAAI56B,GAAOmF,EAAMy1B,EAAI56B,GAAM66B,EAAQ,GAAKD,EAAI56B,GAG3F,OAAO86B,aCZT,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EAGA,EAAA,IAAA,EAKE,WAAA,SAAY1zB,EAAAA,GACV1G,KAAKq6B,MAAQ,IAAI,EAAAC,SAAa5zB,GAC9B1G,KAAKu6B,cAAgB,IAAI,EAAAl9B,aA6L7B,OA1LU,EAAAm9B,UAAAA,kBAAR,WACE,IAAKx6B,KAAKq6B,MAAMI,eAAe/zB,QAAQg0B,iBACrC,MAAM,IAAIpgC,MAAM,yEAIpB,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WAA0C,OAAO0F,KAAKq6B,MAAM/mB,0BAC5D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAAwC,OAAOtT,KAAKq6B,MAAMM,wBAC1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAiB,UAAA,oBAAA,KAA5B,WAA+C,OAAO36B,KAAKq6B,MAAMO,+BACjE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAAsC,OAAO56B,KAAKq6B,MAAMQ,oBACxD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAO76B,KAAKq6B,MAAMS,sBAC1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WAA6C,OAAO96B,KAAKq6B,MAAMU,2BAC/D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAO/6B,KAAKq6B,MAAMW,sBAC1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAK,UAAA,QAAA,KAAhB,WAAuE,OAAOh7B,KAAKq6B,MAAMY,mBACzF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAgE,OAAOj7B,KAAKq6B,MAAMa,sBAClF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAgE,OAAOl7B,KAAKq6B,MAAMc,sBAElF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAAgD,OAAOn7B,KAAKq6B,MAAMtC,qBAClE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAKE,OAJA/3B,KAAKw6B,oBACAx6B,KAAKohB,UACRphB,KAAKohB,QAAU,IAAIga,EAAUp7B,KAAKq6B,QAE7Br6B,KAAKohB,qBAEd,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAEE,OADAphB,KAAKw6B,oBACE,IAAIa,EAAWr7B,KAAKq6B,oBAE7B,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAyD,OAAOr6B,KAAKq6B,MAAMiB,sBAC3E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAI,UAAA,OAAA,KAAf,WAA4B,OAAOt7B,KAAKq6B,MAAMlmB,kBAC9C,EAAA,cAAA,IAAA,OAAW,eAAA,EAAI,UAAA,OAAA,KAAf,WAA4B,OAAOnU,KAAKq6B,MAAM9gB,kBAC9C,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAEE,OADAvZ,KAAKw6B,oBACE,IAAIe,EAAmBv7B,KAAKq6B,MAAM1N,sBAE3C,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAEE,OADA3sB,KAAKw6B,oBACEx6B,KAAKq6B,MAAMmB,qBAEb,EAAA,cAAA,IAAA,EAAAC,UAAAA,KAAP,WACEz7B,KAAKq6B,MAAMoB,QAEN,EAAAC,UAAAA,MAAP,WACE17B,KAAKq6B,MAAMqB,SAEN,EAAApnB,UAAAA,OAAP,SAAcqnB,EAAiBxnB,GAC7BnU,KAAK47B,gBAAgBD,EAASxnB,GAC9BnU,KAAKq6B,MAAM/lB,OAAOqnB,EAASxnB,IAEtB,EAAA0nB,UAAAA,KAAP,SAAYC,GACV97B,KAAKq6B,MAAMwB,KAAKC,IAEX,EAAAC,UAAAA,4BAAP,SAAmCC,GACjCh8B,KAAKq6B,MAAM0B,4BAA4BC,IAElC,EAAAC,UAAAA,oBAAP,SAA2BC,EAAez1B,EAAmDC,GAE3F,OADA1G,KAAKw6B,oBACEx6B,KAAKq6B,MAAM4B,oBAAoBC,EAAOz1B,EAASC,IAEjD,EAAAy1B,UAAAA,sBAAP,SAA6BC,GAC3Bp8B,KAAKw6B,oBACLx6B,KAAKq6B,MAAM8B,sBAAsBC,IAE5B,EAAAC,UAAAA,qBAAP,SAA4BC,GAE1B,OADAt8B,KAAKw6B,oBACEx6B,KAAKq6B,MAAMgC,qBAAqBC,IAElC,EAAAnG,UAAAA,wBAAP,SAA+B1vB,GAE7B,OADAzG,KAAKw6B,oBACEx6B,KAAKq6B,MAAMlE,wBAAwB1vB,IAErC,EAAA4vB,UAAAA,0BAAP,SAAiCC,GAC/Bt2B,KAAKw6B,oBACLx6B,KAAKq6B,MAAMhE,0BAA0BC,IAEhC,EAAAiG,UAAAA,eAAP,SAAsBC,GAGpB,OAFAx8B,KAAKw6B,oBACLx6B,KAAK47B,gBAAgBY,GACdx8B,KAAKq6B,MAAMoC,UAAUD,IAEvB,EAAAC,UAAAA,UAAP,SAAiBD,GACf,OAAOx8B,KAAKu8B,eAAeC,IAEtB,EAAAE,UAAAA,aAAP,WACE,OAAO18B,KAAKq6B,MAAMqC,gBAEb,EAAAC,UAAAA,OAAP,SAAcC,EAAgBjR,EAAatwB,GACzC2E,KAAK47B,gBAAgBgB,EAAQjR,EAAKtwB,GAClC2E,KAAKq6B,MAAMsC,OAAOC,EAAQjR,EAAKtwB,IAE1B,EAAAwhC,UAAAA,aAAP,WACE,OAAO78B,KAAKq6B,MAAMwC,gBAEb,EAAAC,UAAAA,qBAAP,WACE,OAAO98B,KAAKq6B,MAAMyC,wBAEb,EAAAC,UAAAA,eAAP,WACE/8B,KAAKq6B,MAAM0C,kBAEN,EAAAC,UAAAA,UAAP,WACEh9B,KAAKq6B,MAAM2C,aAEN,EAAAC,UAAAA,YAAP,SAAmB/1B,EAAeC,GAChCnH,KAAK47B,gBAAgB10B,EAAOC,GAC5BnH,KAAKq6B,MAAM4C,YAAY/1B,EAAOC,IAEzB,EAAA/G,UAAAA,QAAP,WACEJ,KAAKu6B,cAAcn6B,UACnBJ,KAAKq6B,MAAMj6B,WAEN,EAAA88B,UAAAA,YAAP,SAAmBC,GACjBn9B,KAAK47B,gBAAgBuB,GACrBn9B,KAAKq6B,MAAM6C,YAAYC,IAElB,EAAAC,UAAAA,YAAP,SAAmBC,GACjBr9B,KAAK47B,gBAAgByB,GACrBr9B,KAAKq6B,MAAM+C,YAAYC,IAElB,EAAAC,UAAAA,YAAP,WACEt9B,KAAKq6B,MAAMiD,eAEN,EAAAC,UAAAA,eAAP,WACEv9B,KAAKq6B,MAAMkD,kBAEN,EAAAC,UAAAA,aAAP,SAAoBvgB,GAClBjd,KAAK47B,gBAAgB3e,GACrBjd,KAAKq6B,MAAMmD,aAAavgB,IAEnB,EAAA1V,UAAAA,MAAP,WACEvH,KAAKq6B,MAAM9yB,SAEN,EAAAk2B,UAAAA,MAAP,SAAax2B,EAA2BgjB,GACtCjqB,KAAKq6B,MAAMoD,MAAMx2B,EAAMgjB,IAElB,EAAAyT,UAAAA,UAAP,SAAiBz2B,EAAkBgjB,GACjCjqB,KAAKq6B,MAAMoD,MAAMx2B,EAAMgjB,IAElB,EAAA0T,UAAAA,QAAP,SAAe12B,EAA2BgjB,GACxCjqB,KAAKq6B,MAAMoD,MAAMx2B,GACjBjH,KAAKq6B,MAAMoD,MAAM,OAAQxT,IAEpB,EAAA2T,UAAAA,MAAP,SAAa32B,GACXjH,KAAKq6B,MAAMuD,MAAM32B,IAMZ,EAAA42B,UAAAA,UAAP,SAAiBv+B,GACf,OAAOU,KAAKq6B,MAAMI,eAAeoD,UAAUv+B,IAYtC,EAAAw+B,UAAAA,UAAP,SAAiBx+B,EAAUN,GACzBgB,KAAKq6B,MAAMI,eAAeqD,UAAUx+B,EAAKN,IAEpC,EAAA85B,UAAAA,QAAP,SAAe5xB,EAAeC,GAC5BnH,KAAK47B,gBAAgB10B,EAAOC,GAC5BnH,KAAKq6B,MAAMvB,QAAQ5xB,EAAOC,IAErB,EAAA0mB,UAAAA,MAAP,WACE7tB,KAAKq6B,MAAMxM,SAEN,EAAAkQ,UAAAA,UAAP,SAAiBC,GACf,OAAOh+B,KAAKu6B,cAAcwD,UAAU/9B,KAAMg+B,IAE5C,OAAkB,eAAA,EAAO,UAAA,KAAzB,WACE,OAAOC,eAGD,EAAA,cAAA,IAAA,EAAArC,UAAAA,gBAAR,eAAwB,IACtB,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,IAAoB,IAAAjM,EAAAA,EAAAA,EAAAA,EAAA,EAAQ,EAAA,OAAA,IAAA,CAAvB,IAAM3wB,EAAK,EACd,GAAA,GAAIA,IAAUk/B,EAAAA,GAAYC,MAAMn/B,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAI1E,MAAM,oCAIxB,EA/LE,GALW,EAAAggC,SAsMb,EAAA,IACE,EAAA,WAAA,SACU8D,EAAAA,EACQjiC,GADR,KAAAiiC,QACQ,EAAA,KAAAjiC,KAqBpB,EAAA,OAlBS,EAAAkiC,UAAAA,KAAP,SAAY3d,GAEV,OADA1gB,KAAKo+B,QAAU1d,EACR1gB,MAGT,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAA+B,OAAOA,KAAKo+B,QAAQ/oB,eACnD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAA+B,OAAOrV,KAAKo+B,QAAQhpB,eACnD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WAAiC,OAAOpV,KAAKo+B,QAAQ1S,mBACrD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAK,UAAA,QAAA,KAAhB,WAA6B,OAAO1rB,KAAKo+B,QAAQ3U,mBACjD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAA8B,OAAOzpB,KAAKo+B,QAAQ5U,MAAMnuB,oBACjD,EAAA,cAAA,IAAA,EAAAijC,UAAAA,QAAP,SAAejpB,GACb,IAAM4H,EAAOjd,KAAKo+B,QAAQ5U,MAAM5qB,IAAIyW,GACpC,GAAK4H,EAGL,OAAO,IAAIshB,EAAkBthB,IAExB,EAAA6M,UAAAA,YAAP,WAAuC,OAAO,IAAI,EAAAzmB,UACpD,EAvBE,GAyBF,EAME,WAAA,SAAoBm7B,EAAAA,GAApB,IAAoB,EAAA,KAAA,KAAAA,SAHZ,EAAA,KAAAC,gBAAkB,IAAI,EAAA99B,aAI5BX,KAAK0+B,QAAU,IAAIC,EAAc3+B,KAAKw+B,SAASI,OAAQ,UACvD5+B,KAAK6+B,WAAa,IAAIF,EAAc3+B,KAAKw+B,SAASM,IAAK,aACvD9+B,KAAKw+B,SAASO,iBAAiB,WAAM,OAAKN,EAAAA,gBAAgBn+B,KAAK,EAAK0+B,UAaxE,OAlBE,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WAAkD,OAAOh/B,KAAKy+B,gBAAgBjW,mBAO9E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,GAAIxoB,KAAKw+B,SAASQ,SAAWh/B,KAAKw+B,SAASI,OAAU,OAAO5+B,KAAK4+B,OACjE,GAAI5+B,KAAKw+B,SAASQ,SAAWh/B,KAAKw+B,SAASM,IAAO,OAAO9+B,KAAKi/B,UAC9D,MAAM,IAAI3kC,MAAM,8DAElB,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAO0F,KAAK0+B,QAAQL,KAAKr+B,KAAKw+B,SAASI,qBAEzC,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WACE,OAAO5+B,KAAK6+B,WAAWR,KAAKr+B,KAAKw+B,SAASM,kBAE9C,EAAA,cAAA,IAAA,EAhBE,GAkBF,EACE,WAAA,SAAoBI,EAAAA,GAAA,KAAAA,MAkBtB,EAAA,OAhBE,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WAAkC,OAAOl/B,KAAKk/B,MAAMzjB,uBACpD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAA8B,OAAOzb,KAAKk/B,MAAM7jC,oBACzC,EAAA,cAAA,IAAA,EAAA8jC,UAAAA,QAAP,SAAe/pB,EAAWc,GACxB,KAAId,EAAI,GAAKA,GAAKpV,KAAKk/B,MAAM7jC,QAI7B,OAAI6a,GACFlW,KAAKk/B,MAAM7iB,SAASjH,EAAcc,GAC3BA,GAEFlW,KAAKk/B,MAAM7iB,SAASjH,EAAG,IAAI,EAAA/R,WAE7B,EAAAua,UAAAA,kBAAP,SAAyBC,EAAqBuhB,EAAsBC,GAClE,OAAOr/B,KAAKk/B,MAAMthB,kBAAkBC,EAAWuhB,EAAaC,IAEhE,EAlBE,GAoBF,EACE,WAAA,SAAoBhF,EAAAA,GAAA,KAAAA,MA0BtB,EAAA,OAxBS,EAAAiF,UAAAA,mBAAP,SAA0BlkC,EAAyB6uB,GACjD,OAAOjqB,KAAKq6B,MAAMrQ,cAAc5uB,EAAI,SAAC8kB,GAAoB,OAAA+J,EAAS/J,EAAO8C,cAEpE,EAAAgH,UAAAA,cAAP,SAAqB5uB,EAAyB6uB,GAC5C,OAAOjqB,KAAKs/B,mBAAmBlkC,EAAI6uB,IAE9B,EAAAsV,UAAAA,mBAAP,SAA0BnkC,EAAyB6uB,GACjD,OAAOjqB,KAAKq6B,MAAMnQ,cAAc9uB,EAAI,SAAC6L,EAAciZ,GAAoB,OAAA+J,EAAShjB,EAAMiZ,EAAO8C,cAExF,EAAAkH,UAAAA,cAAP,SAAqB9uB,EAAyB6uB,GAC5C,OAAOjqB,KAAKu/B,mBAAmBnkC,EAAI6uB,IAE9B,EAAAuV,UAAAA,mBAAP,SAA0BpkC,EAAyBqL,GACjD,OAAOzG,KAAKq6B,MAAMjQ,cAAchvB,EAAIqL,IAE/B,EAAA2jB,UAAAA,cAAP,SAAqBhvB,EAAyBqL,GAC5C,OAAOzG,KAAKw/B,mBAAmBpkC,EAAIqL,IAE9B,EAAAg5B,UAAAA,mBAAP,SAA0B5c,EAAeoH,GACvC,OAAOjqB,KAAKq6B,MAAMhQ,cAAcxH,EAAOoH,IAElC,EAAAI,UAAAA,cAAP,SAAqBxH,EAAeoH,GAClC,OAAOjqB,KAAKy/B,mBAAmB5c,EAAOoH,IAE1C,EA1BE,GA4BF,EACE,WAAA,SAAoBoQ,EAAAA,GAAA,KAAAA,MAiBtB,EAAA,OAfS,EAAA99B,UAAAA,SAAP,SAAgBmjC,GACd1/B,KAAKq6B,MAAMsF,eAAepjC,SAASmjC,IAGrC,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WACE,OAAO1/B,KAAKq6B,MAAMsF,eAAeC,sBAGnC,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WACE,OAAO5/B,KAAKq6B,MAAMsF,eAAeE,mBAGnC,SAAyBC,GACvB9/B,KAAKq6B,MAAMsF,eAAeE,cAAgBC,eAE9C,EAAA,cAAA,IAAA,EAjBE,aClSF,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAIMztB,EAAAA,IAAAA,EAAwC,oBAAXzU,OAA0BA,OAAOyU,SAAW,KAE/E,EA2EE,SAAA,GAAA,SACE3L,EAAAA,QAAA,IAAAA,IAAA,EAAA,IADF,IAGE,EAAA,EAAMA,KAAAA,KAAAA,IAAQ,YAjET,EAAAq5B,QAAyBC,EAmBxB,EAAAC,iBAA2B,EAW3B,EAAAzd,cAAgB,IAAI,EAAA7hB,aAEpB,EAAAu/B,OAAS,IAAI,EAAAv/B,aAEb,EAAAw/B,UAAY,IAAI,EAAAx/B,aAEhB,EAAAy/B,mBAAqB,IAAI,EAAAz/B,aAEzB,EAAAgiB,eAAiB,IAAI,EAAAhiB,aAGrB,EAAA0/B,SAAW,IAAI,EAAA1/B,aAEf,EAAA2/B,QAAU,IAAI,EAAA3/B,aAEd,EAAA4/B,mBAAqB,IAAI,EAAA5/B,aAEzB,EAAA6/B,kBAAoB,IAAI,EAAA7/B,aAoB9B,EAAK8/B,SAEL,EAAKC,UAAY,EAAKC,sBAAsBC,eAAe,EAAAC,WAC3D,EAAKC,WAAa,EAAKvkC,SAAS,EAAKokC,sBAAsBC,eAAe,EAAAG,aAG1E,EAAKxkC,SAAS,EAAKykC,cAAcC,cAAc,WAAM,OAAKta,EAAAA,UAC1D,EAAKpqB,SAAS,EAAKykC,cAAcE,qBAAqB,SAACh6B,EAAOC,GAAQ,OAAK2xB,EAAAA,QAAQ5xB,EAAOC,MAC1F,EAAK5K,SAAS,EAAKykC,cAAcG,eAAe,WAAM,OAAKtT,EAAAA,WAC3D,EAAKtxB,SAAS,EAAKykC,cAAcI,gBAAgB,SAACzkB,EAAWlB,GAAc,OAAK4lB,EAAAA,OAAO1kB,EAAWlB,QAAa/a,MAC/G,EAAKnE,SAAS,EAAKykC,cAAcM,8BAA8B,SAAAnlC,GAAQ,OAAKolC,EAAAA,sBAAsBplC,MAClG,EAAKI,SAAS,EAAAilC,aAAa,EAAKR,cAAc1tB,aAAc,EAAKkP,gBACjE,EAAKjmB,SAAS,EAAAilC,aAAa,EAAKR,cAAcjG,cAAe,EAAKpY,iBAClE,EAAKpmB,SAAS,EAAAilC,aAAa,EAAKR,cAAcS,WAAY,EAAKlB,qBAC/D,EAAKhkC,SAAS,EAAAilC,aAAa,EAAKR,cAAcU,UAAW,EAAKlB,oBAG9D,EAAKjkC,SAAS,EAAKgV,eAAe4pB,SAAS,SAAAp+B,GAAK,OAAK4kC,EAAAA,aAAa5kC,EAAEwc,KAAMxc,EAAEoX,WAuiChF,OAxoC8B,EAgB5B,EAAA,GAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAAoD,OAAOnU,KAAKy6B,eAAe/zB,qBA4B/E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WAA0C,OAAO1G,KAAKwiB,cAAcgG,mBAEpE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAK,UAAA,QAAA,KAAhB,WAAuE,OAAOxoB,KAAKkgC,OAAO1X,mBAE1F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAgE,OAAOxoB,KAAKmgC,UAAU3X,mBAEtF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAiB,UAAA,oBAAA,KAA5B,WAA+C,OAAOxoB,KAAKogC,mBAAmB5X,mBAE9E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WAA6C,OAAOxoB,KAAK2iB,eAAe6F,mBAGxE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAAqC,OAAOxoB,KAAKqgC,SAAS7X,mBAE1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAAoC,OAAOxoB,KAAKsgC,QAAQ9X,mBAExD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAA0C,OAAOxoB,KAAKugC,mBAAmB/X,mBAEzE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WAAyC,OAAOxoB,KAAKwgC,kBAAkBhY,mBAuChE,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,eACMJ,EAAAA,EAAAA,EAAAA,KAAKyB,cAGT,EAAMrB,UAAAA,QAAO,KACM,MAAA,QAAnB,EAAAJ,KAAK4hC,sBAAc,IAAExhC,GAAAA,EAAAA,UACrBJ,KAAK6hC,4BAAyBnhC,EAC9BV,KAAKy9B,MAAQ,aACW,QAAxB,EAAY,QAAZ,EAAAz9B,KAAK+3B,eAAO,IAAE+J,OAAAA,EAAAA,EAAAA,kBAAU,IAAE5jB,GAAAA,EAAAA,YAAYle,KAAK+3B,WAGnC,EAAA0I,UAAAA,OAAV,WACE,EAAMA,UAAAA,OAAM,KAEZzgC,MAAAA,KAAK6hC,4BAAyBnhC,GAMhC,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAOV,KAAK2sB,QAAQqS,oBAMf,EAAA,cAAA,IAAA,EAAAtD,UAAAA,MAAP,WACM17B,KAAKs7B,UACPt7B,KAAKs7B,SAASI,MAAM,CAAEqG,eAAe,KAI/B,EAAAC,UAAAA,eAAV,SAAyB1iC,OAIvB,EAAA,EAAA,EAAA,EAAA,OAHA,EAAM0iC,UAAAA,eAAc,KAAC1iC,KAAAA,GAGbA,GACN,IAAK,aACL,IAAK,WAEgB,QAAnB,EAAAU,KAAK4hC,sBAAc,IAAEr6B,GAAAA,EAAAA,QACA,QAArB,EAAAvH,KAAKiiC,wBAAgB,IAAEC,GAAAA,EAAAA,UACvB,MACF,IAAK,cACL,IAAK,cAEHliC,KAAK84B,QAAQ94B,KAAK0gB,OAAOrL,EAAGrV,KAAK0gB,OAAOrL,GACxC,MACF,IAAK,6BACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,uBAECrV,KAAK4hC,iBACP5hC,KAAK4hC,eAAer6B,QACpBvH,KAAK4hC,eAAezG,SAASn7B,KAAKuZ,KAAMvZ,KAAKmU,MAC7CnU,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,IAE9B,MACF,IAAK,eACCnU,KAAK4hC,iBACP5hC,KAAK4hC,eAAeO,YAAYniC,KAAKoiC,mBACrCpiC,KAAK4hC,eAAezG,SAASn7B,KAAKuZ,KAAMvZ,KAAKmU,OAE/C,MACF,IAAK,aACU,QAAb,EAAAnU,KAAKqiC,gBAAQ,IAAEC,GAAAA,EAAAA,iBACf,MACF,IAAK,mBACCtiC,KAAKy6B,eAAe/zB,QAAQsiB,kBACzBhpB,KAAKuiC,uBAAyBviC,KAAK4hC,iBACtC5hC,KAAKuiC,sBAAwB,IAAI,EAAAC,qBAAqBxiC,KAAMA,KAAK4hC,kBAGzC,QAA1B,EAAA5hC,KAAKuiC,6BAAqB,IAAEniC,GAAAA,EAAAA,UAC5BJ,KAAKuiC,2BAAwB7hC,GAE/B,MACF,IAAK,eAAgBV,KAAK2sB,QAAQ8V,gBAAiB,MACnD,IAAK,QACHziC,KAAK0iC,UAAU1iC,KAAKy6B,eAAe/zB,QAAQ0tB,SAQzC,EAAAuO,UAAAA,iBAAR,SAAyBC,GACnB5iC,KAAK+f,aAAamJ,gBAAgBsD,WACpCxsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,MAE9C1O,KAAK6iC,kBAAkBD,GACvB5iC,KAAK+3B,QAASxlB,UAAUC,IAAI,SAC5BxS,KAAK8iC,cACL9iC,KAAKqgC,SAAS//B,QAOT,EAAAm7B,UAAAA,KAAP,eACE,EAAA,OAAoB,QAApB,EAAOz7B,KAAKs7B,gBAAQ,IAAEG,OAAAA,EAAAA,EAAAA,QAMhB,EAAAsH,UAAAA,gBAAR,WAGE/iC,KAAKs7B,SAAUt8B,MAAQ,GACvBgB,KAAK84B,QAAQ94B,KAAK0gB,OAAOrL,EAAGrV,KAAK0gB,OAAOrL,GACpCrV,KAAK+f,aAAamJ,gBAAgBsD,WACpCxsB,KAAK+f,aAAaS,iBAAiB,EAAA1T,GAAG4B,IAAM,MAE9C1O,KAAK+3B,QAASxlB,UAAUywB,OAAO,SAC/BhjC,KAAKsgC,QAAQhgC,QAMP,EAAA2iC,UAAAA,YAAR,WACEjjC,IAAAA,EAAAA,KAAAA,KAAKkjC,YAGLljC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAU,OAAQ,SAACvP,GAGxD,EAAKkU,gBAGV,EAAA0G,YAAY5a,EAAO,EAAK6a,sBAE1B,IAAMC,EAAsB,SAAC9a,GAAgC,OAAA+a,EAAAA,iBAAiB/a,EAAO,EAAK8S,SAAW,EAAKvb,eAC1G/f,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,QAASgI,IAChEtjC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAU,QAASuL,IAG3DtD,EAAQ1zB,UAEVtM,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAU,YAAa,SAACvP,GAC7C,IAAjBA,EAAMgb,QACR,EAAAC,kBAAkBjb,EAAO,EAAK8S,SAAW,EAAKoI,cAAgB,EAAKL,kBAAoB,EAAK38B,QAAQi9B,0BAIxG3jC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAU,cAAe,SAACvP,GACpE,EAAAib,kBAAkBjb,EAAO,EAAK8S,SAAW,EAAKoI,cAAgB,EAAKL,kBAAoB,EAAK38B,QAAQi9B,0BAOpG3D,EAAQnzB,SAGV7M,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAU,WAAY,SAACvP,GAC5C,IAAjBA,EAAMgb,QACR,EAAAI,6BAA6Bpb,EAAO,EAAK8S,SAAW,EAAKoI,mBASzD,EAAAR,UAAAA,UAAR,WACEljC,IAAAA,EAAAA,KAAAA,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,QAAS,SAACsH,GAAsB,OAAKiB,EAAAA,OAAOjB,KAAK,IACxG5iC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,UAAW,SAACsH,GAAsB,OAAKkB,EAAAA,SAASlB,KAAK,IAC5G5iC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,WAAY,SAACsH,GAAsB,OAAKmB,EAAAA,UAAUnB,KAAK,IAC9G5iC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,mBAAoB,WAAM,OAAK0I,EAAAA,mBAAoBC,sBAC1GjkC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,oBAAqB,SAACv+B,GAAwB,OAAKinC,EAAAA,mBAAoBE,kBAAkBnnC,MAChJiD,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAW,iBAAkB,WAAM,OAAK0I,EAAAA,mBAAoBG,oBACxGnkC,KAAKzD,SAASyD,KAAKk7B,SAAS,WAAM,OAAK8I,EAAAA,mBAAoBI,+BAC3DpkC,KAAKzD,SAASyD,KAAKk7B,SAAS,SAAAn+B,GAAK,OAAKsnC,EAAAA,oBAAoBtnC,EAAEmK,MAAOnK,EAAEoK,SAQhE,EAAA00B,UAAAA,KAAP,SAAYC,GAAZ,IACE,EAAA,KAAA,IAAKA,EACH,MAAM,IAAIxhC,MAAM,uCAGb+X,EAASiyB,KAAKn4B,SAAS2vB,IAC1B97B,KAAKggB,YAAYe,MAAM,2EAGzB/gB,KAAKukC,UAAYzI,EAAO0I,cAGxBxkC,KAAK+3B,QAAU/3B,KAAKukC,UAAUjyB,cAAc,OAC5CtS,KAAK+3B,QAAQ0M,IAAM,MACnBzkC,KAAK+3B,QAAQxlB,UAAUC,IAAI,YAC3BxS,KAAK+3B,QAAQxlB,UAAUC,IAAI,SAC3BxS,KAAK+3B,QAAQ2M,aAAa,WAAY,KACtC5I,EAAOnpB,YAAY3S,KAAK+3B,SAIxB,IAAM4M,EAAWtyB,EAASuyB,yBAC1B5kC,KAAK6kC,iBAAmBxyB,EAASC,cAAc,OAC/CtS,KAAK6kC,iBAAiBtyB,UAAUC,IAAI,kBACpCmyB,EAAShyB,YAAY3S,KAAK6kC,kBAC1B7kC,KAAK8kC,oBAAsBzyB,EAASC,cAAc,OAClDtS,KAAK8kC,oBAAoBvyB,UAAUC,IAAI,qBACvCxS,KAAK6kC,iBAAiBlyB,YAAY3S,KAAK8kC,qBAEvC9kC,KAAK0jC,cAAgBrxB,EAASC,cAAc,OAC5CtS,KAAK0jC,cAAcnxB,UAAUC,IAAI,gBAGjCxS,KAAK+kC,iBAAmB1yB,EAASC,cAAc,OAC/CtS,KAAK+kC,iBAAiBxyB,UAAUC,IAAI,iBACpCxS,KAAK0jC,cAAc/wB,YAAY3S,KAAK+kC,kBACpCJ,EAAShyB,YAAY3S,KAAK0jC,eAE1B1jC,KAAKs7B,SAAWjpB,EAASC,cAAc,YACvCtS,KAAKs7B,SAAS/oB,UAAUC,IAAI,yBAC5BxS,KAAKs7B,SAASoJ,aAAa,aAAczG,EAAQ9f,aACjDne,KAAKs7B,SAASoJ,aAAa,iBAAkB,SAC7C1kC,KAAKs7B,SAASoJ,aAAa,cAAe,OAC1C1kC,KAAKs7B,SAASoJ,aAAa,iBAAkB,OAC7C1kC,KAAKs7B,SAASoJ,aAAa,aAAc,SACzC1kC,KAAKs7B,SAAS0J,SAAW,EACzBhlC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAU,QAAS,SAACsH,GAAsB,OAAKD,EAAAA,iBAAiBC,MAC5G5iC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAKs7B,SAAU,OAAQ,WAAM,OAAKyH,EAAAA,qBACzE/iC,KAAK+kC,iBAAiBpyB,YAAY3S,KAAKs7B,UAEvC,IAAM2J,EAAqBjlC,KAAK2gC,sBAAsBC,eAAe,EAAAsE,mBAAoBllC,KAAKs7B,UAC9Ft7B,KAAK2gC,sBAAsBwE,WAAW,EAAAjhC,oBAAqB+gC,GAE3DjlC,KAAKiiC,iBAAmBjiC,KAAK2gC,sBAAsBC,eAAe,EAAAwE,gBAAiBplC,KAAKukC,UAAWvkC,KAAK+kC,kBACxG/kC,KAAK2gC,sBAAsBwE,WAAW,EAAAlhC,iBAAkBjE,KAAKiiC,kBAE7DjiC,KAAKqlC,iBAAmBhzB,EAASC,cAAc,OAC/CtS,KAAKqlC,iBAAiB9yB,UAAUC,IAAI,oBACpCxS,KAAKgkC,mBAAqBhkC,KAAK2gC,sBAAsBC,eAAe,EAAA0E,kBAAmBtlC,KAAKs7B,SAAUt7B,KAAKqlC,kBAC3GrlC,KAAK+kC,iBAAiBpyB,YAAY3S,KAAKqlC,kBAGvCrlC,KAAK+3B,QAAQplB,YAAYgyB,GAEzB3kC,KAAKulC,OAASvlC,KAAK0G,QAAQ0tB,OAASp0B,KAAKulC,OACzCvlC,KAAKwlC,cAAgB,IAAI,EAAA3P,aAAaxjB,EAAUrS,KAAK0G,QAAQssB,mBAC7DhzB,KAAKzD,SAASyD,KAAKy6B,eAAegL,eAAe,SAAA1oC,GAAK,OAAKyoC,EAAAA,cAAetR,gBAAgBn3B,MAC1FiD,KAAKwlC,cAAcrR,SAASn0B,KAAKulC,QAEjC,IAAMG,EAAW1lC,KAAKoiC,kBACtBpiC,KAAK4hC,eAAiB5hC,KAAKzD,SAASyD,KAAK2gC,sBAAsBC,eAAe,EAAA+E,cAAeD,EAAU1lC,KAAKmU,KAAMnU,KAAK0jC,gBACvH1jC,KAAK2gC,sBAAsBwE,WAAW,EAAA/gC,eAAgBpE,KAAK4hC,gBAC3D5hC,KAAKzD,SAASyD,KAAK4hC,eAAegE,uBAAuB,SAAA7oC,GAAK,OAAKojC,EAAAA,UAAU7/B,KAAKvD,MAClFiD,KAAKm7B,SAAS,SAAAp+B,GAAK,OAAK6kC,EAAAA,eAAgBttB,OAAOvX,EAAEwc,KAAMxc,EAAEoX,QAEzDnU,KAAK6lC,cAAgB7lC,KAAK2gC,sBAAsBC,eAAe,EAAAkF,cAC/D9lC,KAAK2gC,sBAAsBwE,WAAW,EAAA7gC,cAAetE,KAAK6lC,eAC1D7lC,KAAK+lC,cAAgB/lC,KAAK2gC,sBAAsBC,eAAe,EAAAoF,cAC/DhmC,KAAK2gC,sBAAsBwE,WAAW,EAAAhhC,cAAenE,KAAK+lC,eAE1D/lC,KAAKqiC,SAAWriC,KAAK2gC,sBAAsBC,eAAe,EAAAqF,SACxD,SAAC9I,EAAgB+I,GAA2B,OAAKhJ,EAAAA,YAAYC,EAAQ+I,IACrElmC,KAAK6kC,iBACL7kC,KAAK8kC,qBAEP9kC,KAAKqiC,SAAS8D,cAAcnmC,KAAKwlC,cAAcvT,QAC/CjyB,KAAKzD,SAASyD,KAAKghC,cAAcoF,uBAAuB,WAAM,OAAK/D,EAAAA,SAAUC,oBAC7EtiC,KAAKzD,SAASyD,KAAKqiC,UAEnBriC,KAAKzD,SAASyD,KAAKsT,aAAa,WAAM,OAAKsuB,EAAAA,eAAgBtuB,kBAC3DtT,KAAKzD,SAASyD,KAAKm7B,SAAS,WAAM,OAAKyG,EAAAA,eAAgBzG,SAAS,EAAK5hB,KAAM,EAAKpF,SAChFnU,KAAKzD,SAASyD,KAAKoT,OAAO,WAAM,OAAKwuB,EAAAA,eAAgBxuB,YACrDpT,KAAKzD,SAASyD,KAAKqT,QAAQ,WAAM,OAAKuuB,EAAAA,eAAgBvuB,aACtDrT,KAAKzD,SAASyD,KAAK4hC,eAAeyE,mBAAmB,WAAM,OAAKhE,EAAAA,SAAUC,oBAE1EtiC,KAAKqjC,kBAAoBrjC,KAAKzD,SAASyD,KAAK2gC,sBAAsBC,eAAe,EAAA0F,iBAC/EtmC,KAAK+3B,QACL/3B,KAAK0jC,gBACP1jC,KAAK2gC,sBAAsBwE,WAAW,EAAA9gC,kBAAmBrE,KAAKqjC,mBAC9DrjC,KAAKzD,SAASyD,KAAKqjC,kBAAkBkD,qBAAqB,SAAAxpC,GAAK,OAAKmgC,EAAAA,YAAYngC,EAAEogC,OAAQpgC,EAAEypC,wBAC5FxmC,KAAKzD,SAASyD,KAAKqjC,kBAAkBzI,kBAAkB,WAAM,OAAKwF,EAAAA,mBAAmB9/B,UACrFN,KAAKzD,SAASyD,KAAKqjC,kBAAkBoD,gBAAgB,SAAA1pC,GAAK,OAAK6kC,EAAAA,eAAgBluB,mBAAmB3W,EAAEmK,MAAOnK,EAAEoK,IAAKpK,EAAE4W,qBACpH3T,KAAKzD,SAASyD,KAAKqjC,kBAAkBqD,sBAAsB,SAAAvP,GAIzD,EAAKmE,SAAUt8B,MAAQm4B,EACvB,EAAKmE,SAAUI,QACf,EAAKJ,SAAUqB,YAEjB38B,KAAKzD,SAASyD,KAAKg7B,SAAS,WAC1B,EAAKqH,SAAUC,iBACf,EAAKe,kBAAmBvK,aAE1B94B,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK6kC,iBAAkB,SAAU,WAAM,OAAKxB,EAAAA,kBAAmBvK,aAEtG94B,KAAK2mC,kBAAoB3mC,KAAK2gC,sBAAsBC,eAAe,EAAAgG,iBAAkB5mC,KAAK+3B,QAAS/3B,KAAK0jC,eACxG1jC,KAAKzD,SAASyD,KAAK2mC,mBACnB3mC,KAAKzD,SAASyD,KAAKg7B,SAAS,WAAM,OAAK2L,EAAAA,kBAAmBE,cAC1D7mC,KAAK0gC,UAAUoG,YAAY9mC,KAAK+3B,QAAS/3B,KAAK2mC,mBAC9C3mC,KAAK8gC,WAAWgG,YAAY9mC,KAAK+3B,QAAS/3B,KAAK+lC,cAAe/lC,KAAK4hC,gBAGnE5hC,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK+3B,QAAS,YAAa,SAACh7B,GAAkB,OAAKsmC,EAAAA,kBAAmB0D,YAAYhqC,MAGrHiD,KAAKkhB,kBAAkB8lB,sBACzBhnC,KAAKqjC,kBAAkB4D,UACvBjnC,KAAK+3B,QAAQxlB,UAAUC,IAAI,wBAE3BxS,KAAKqjC,kBAAkB6D,SAGrBlnC,KAAK0G,QAAQsiB,mBAGfhpB,KAAKuiC,sBAAwB,IAAI,EAAAC,qBAAqBxiC,KAAMA,KAAK4hC,iBAInE5hC,KAAKiiC,iBAAiBC,UAGtBliC,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,GAG5BnU,KAAKijC,cAILjjC,KAAKmnC,aAGC,EAAA/E,UAAAA,gBAAR,WACE,OAAQpiC,KAAK0G,QAAQ0gC,cACnB,IAAK,SAAU,OAAOpnC,KAAK2gC,sBAAsBC,eAAe,EAAAyG,SAAUrnC,KAAKwlC,cAAevT,OAAQjyB,KAAK0jC,cAAgB1jC,KAAK0gC,UAAW1gC,KAAK8gC,YAChJ,IAAK,MAAO,OAAO9gC,KAAK2gC,sBAAsBC,eAAe,EAAA0G,YAAatnC,KAAKwlC,cAAevT,OAAQjyB,KAAK+3B,QAAU/3B,KAAK0jC,cAAgB1jC,KAAK6kC,iBAAmB7kC,KAAK0gC,UAAW1gC,KAAK8gC,YACvL,QAAS,MAAM,IAAIxmC,MAAM,8BAA8B0F,KAAK0G,QAAQ0gC,aAAY,OAQ5E,EAAA1E,UAAAA,UAAR,SAAkBtO,OAChBp0B,EAAAA,EAAAA,EAAAA,KAAKulC,OAASnR,EACI,QAAlB,EAAAp0B,KAAKwlC,qBAAa,IAAErR,GAAAA,EAAAA,SAASC,GACV,QAAnB,EAAAp0B,KAAK4hC,sBAAc,IAAEhuB,GAAAA,EAAAA,UAAU5T,KAAKwlC,cAAevT,QACtC,QAAb,EAAAjyB,KAAKqiC,gBAAQ,IAAE8D,GAAAA,EAAAA,cAAcnmC,KAAKwlC,cAAevT,SAkB5C,EAAAkV,UAAAA,UAAP,WACQI,IAAAA,EAAAA,KAAAA,EAAOvnC,KACPqM,EAAKrM,KAAK+3B,QAGhB,SAASyP,EAAU5E,GAEjB,IAKI6E,EACArkB,EANE7a,EAAMg/B,EAAKxB,cAAe2B,iBAAiB9E,EAAI2E,EAAK7D,cAAgB6D,EAAKhuB,KAAMguB,EAAKpzB,MAC1F,IAAK5L,EACH,OAAO,EAKT,OAAcq6B,EAAI+E,cAAgB/E,EAAGzmC,MACnC,IAAK,YACHinB,EAAS,QACU1iB,IAAfkiC,EAAGgF,SAELH,EAAM,OACY/mC,IAAdkiC,EAAGY,SACLiE,EAAM7E,EAAGY,OAAS,EAAIZ,EAAGY,OAAS,IAIpCiE,EAAmB,EAAb7E,EAAGgF,QAAc,EACR,EAAbhF,EAAGgF,QAAc,EACF,EAAbhF,EAAGgF,QAAc,IAGvB,MACF,IAAK,UACHxkB,EAAS,EACTqkB,EAAM7E,EAAGY,OAAS,EAAIZ,EAAGY,OAAS,EAClC,MACF,IAAK,YACHpgB,EAAS,EACTqkB,EAAM7E,EAAGY,OAAS,EAAIZ,EAAGY,OAAS,EAClC,MACF,IAAK,QAE+B,IAA7BZ,EAAkBiF,SACrBzkB,EAAUwf,EAAkBiF,OAAS,EAAI,EAAqB,GAEhEJ,EAAM,EACN,MACF,QAEE,OAAO,EAKX,aAAe/mC,IAAX0iB,QAAgC1iB,IAAR+mC,GAAqBA,EAAM,IAIhDF,EAAKrmB,kBAAkB4mB,kBAAkB,CAC9CC,IAAKx/B,EAAI6M,EAAI,GACbuW,IAAKpjB,EAAI8M,EAAI,GACbmuB,OAAQiE,EACRrkB,OAAM,EACN4kB,KAAMpF,EAAGqF,QACTnJ,IAAK8D,EAAGsF,OACR3Z,MAAOqU,EAAGuF,WAYd,IAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EACK,SAAC7F,GASR,OARA4E,EAAU5E,GACLA,EAAGgF,UAEN,EAAKrD,UAAW19B,oBAAoB,UAAWuhC,EAAgBC,SAC3DD,EAAgBG,WAClB,EAAKhE,UAAW19B,oBAAoB,YAAauhC,EAAgBG,YAG9D,EAAKG,OAAO9F,IAVjB6F,EAYG,SAAC7F,GAGN,OAFA4E,EAAU5E,GACVA,EAAG+F,iBACI,EAAKD,OAAO9F,IAfjB6F,EAiBO,SAAC7F,GAENA,EAAGgF,SACLJ,EAAU5E,IApBV6F,EAuBO,SAAC7F,GAELA,EAAGgF,SACNJ,EAAU5E,IAIhB5iC,KAAKzD,SAASyD,KAAKkhB,kBAAkB0nB,iBAAiB,SAAAC,GAEhDA,GAC2C,UAAzC,EAAKpO,eAAe/zB,QAAQoiC,UAC9B,EAAK9oB,YAAYe,MAAM,2BAA4B,EAAKG,kBAAkB6nB,cAAcF,IAE1F,EAAK9Q,QAASxlB,UAAUC,IAAI,uBAC5B,EAAK6wB,kBAAmB4D,YAExB,EAAKjnB,YAAYe,MAAM,gCACvB,EAAKgX,QAASxlB,UAAUywB,OAAO,uBAC/B,EAAKK,kBAAmB6D,UAKX,EAAT2B,EAGMT,EAAgBI,YAC1Bn8B,EAAG1F,iBAAiB,YAAa8hC,GACjCL,EAAgBI,UAAYC,IAJ5Bp8B,EAAGxF,oBAAoB,YAAauhC,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATK,EAGMT,EAAgBE,QAC1Bj8B,EAAG1F,iBAAiB,QAAS8hC,EAAsB,CAAEO,SAAS,IAC9DZ,EAAgBE,MAAQG,IAJxBp8B,EAAGxF,oBAAoB,QAASuhC,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATO,EAGMT,EAAgBC,UAC1BD,EAAgBC,QAAUI,IAH1B,EAAKlE,UAAW19B,oBAAoB,UAAWuhC,EAAgBC,SAC/DD,EAAgBC,QAAU,MAKb,EAATQ,EAGMT,EAAgBG,YAC1BH,EAAgBG,UAAYE,IAH5B,EAAKlE,UAAW19B,oBAAoB,YAAauhC,EAAgBG,WACjEH,EAAgBG,UAAY,SAMhCvoC,KAAKkhB,kBAAkBqL,eAAiBvsB,KAAKkhB,kBAAkBqL,eAK/DvsB,KAAKzD,SAAS,EAAA4mC,yBAAyB92B,EAAI,YAAa,SAACu2B,GAOvD,GANAA,EAAG+F,iBACH,EAAKjN,QAKA,EAAKxa,kBAAkB8lB,uBAAwB,EAAK3D,kBAAmB4F,qBAAqBrG,GAiBjG,OAbA4E,EAAU5E,GAMNwF,EAAgBC,SAClB,EAAK9D,UAAW59B,iBAAiB,UAAWyhC,EAAgBC,SAE1DD,EAAgBG,WAClB,EAAKhE,UAAW59B,iBAAiB,YAAayhC,EAAgBG,WAGzD,EAAKG,OAAO9F,MAGrB5iC,KAAKzD,SAAS,EAAA4mC,yBAAyB92B,EAAI,QAAS,SAACu2B,GACnD,GAAKwF,EAAgBE,YAGnB,IAAK,EAAK5nB,OAAOwoB,cAAe,CAC9B,IAAM/L,EAAS,EAAKkF,SAAU8G,iBAAiBvG,GAG/C,GAAe,IAAXzF,EACF,OAMF,IAFA,IAAMiM,EAAW,EAAAt8B,GAAG4B,KAAO,EAAKqR,aAAamJ,gBAAgBiD,sBAAwB,IAAM,MAAQyW,EAAGiF,OAAS,EAAI,IAAM,KACrH5gC,EAAO,GACFtJ,EAAI,EAAGA,EAAIyM,KAAKi/B,IAAIlM,GAASx/B,IACpCsJ,GAAQmiC,EAEV,EAAKrpB,aAAaS,iBAAiBvZ,GAAM,KAI5C,CAAE+hC,SAAS,KAIdhpC,KAAKzD,SAAS,EAAA4mC,yBAAyB92B,EAAI,QAAS,SAACu2B,GACnD,IAAIwF,EAAgBE,MACpB,OAAK,EAAKjG,SAAUiH,QAAQ1G,QAA5B,EACS,EAAK8F,OAAO9F,IAEpB,CAAEoG,SAAS,KAEdhpC,KAAKzD,SAAS,EAAA4mC,yBAAyB92B,EAAI,aAAc,SAACu2B,GACxD,IAAI,EAAK1hB,kBAAkB8lB,qBAE3B,OADA,EAAK3E,SAAUkH,aAAa3G,GACrB,EAAK8F,OAAO9F,IAClB,CAAEoG,SAAS,KAEdhpC,KAAKzD,SAAS,EAAA4mC,yBAAyB92B,EAAI,YAAa,SAACu2B,GACvD,IAAI,EAAK1hB,kBAAkB8lB,qBAC3B,OAAK,EAAK3E,SAAUmH,YAAY5G,QAAhC,EACS,EAAK8F,OAAO9F,IAEpB,CAAEoG,SAAS,MAUT,EAAAlQ,UAAAA,QAAP,SAAe5xB,EAAeC,OACT,EAAA,QAAnB,EAAAnH,KAAK4hC,sBAAc,IAAE6H,GAAAA,EAAAA,YAAYviC,EAAOC,IAQlC,EAAAk9B,UAAAA,oBAAR,SAA4Bn9B,EAAeC,OAC3B,EAAA,QAAd,EAAAnH,KAAK0gC,iBAAS,IAAEgJ,GAAAA,EAAAA,YAAYxiC,EAAOC,IAM9B,EAAA07B,UAAAA,kBAAP,SAAyBD,GACnB5iC,KAAKqjC,mBAAqBrjC,KAAKqjC,kBAAkBsG,mBAAmB/G,GACtE5iC,KAAK+3B,QAASxlB,UAAUC,IAAI,iBAE5BxS,KAAK+3B,QAASxlB,UAAUywB,OAAO,kBAO3B,EAAAF,UAAAA,YAAR,WACO9iC,KAAK+f,aAAa8M,sBACrB7sB,KAAK+f,aAAa8M,qBAAsB,EACxC7sB,KAAK84B,QAAQ94B,KAAK0gB,OAAOrL,EAAGrV,KAAK0gB,OAAOrL,KAIrC,EAAA6nB,UAAAA,YAAP,SAAmB0M,EAAcpD,GAC/B,EAAMtJ,UAAAA,YAAW,KAAC0M,KAAAA,EAAMpD,GACxBxmC,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,IAGvB,EAAAypB,UAAAA,MAAP,SAAa32B,GACX,EAAA22B,MAAM32B,EAAMjH,KAAKs7B,SAAWt7B,KAAK+f,eAY5B,EAAAgc,UAAAA,4BAAP,SAAmCC,GACjCh8B,KAAK6hC,uBAAyB7F,GAazB,EAAAC,UAAAA,oBAAP,SAA2BC,EAAez1B,EAA6BC,GACrE,IAAM01B,EAAYp8B,KAAK0gC,UAAUzE,oBAAoBC,EAAOz1B,EAASC,GAErE,OADA1G,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,GACrBioB,GAOF,EAAAD,UAAAA,sBAAP,SAA6BC,GACvBp8B,KAAK0gC,UAAUvE,sBAAsBC,IACvCp8B,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,IAIzB,EAAAkoB,UAAAA,qBAAP,SAA4BC,GAC1B,OAAOt8B,KAAK8gC,WAAWzE,qBAAqBC,IAGvC,EAAAnG,UAAAA,wBAAP,SAA+B1vB,GAC7B,IAAM6vB,EAAWt2B,KAAK4hC,eAAgBzL,wBAAwB1vB,GAE9D,OADAzG,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,GACrBmiB,GAGF,EAAAD,UAAAA,0BAAP,SAAiCC,GAC3Bt2B,KAAK4hC,eAAgBvL,0BAA0BC,IACjDt2B,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,IAIhC,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WACE,OAAOnU,KAAK0gB,OAAO8a,qBAGd,EAAA,cAAA,IAAA,EAAAiB,UAAAA,UAAP,SAAiBD,GAEf,GAAIx8B,KAAK0gB,SAAW1gB,KAAK2sB,QAAQiS,OAIjC,OAAO5+B,KAAK0gB,OAAO+b,UAAUz8B,KAAK0gB,OAAO+I,MAAQzpB,KAAK0gB,OAAOrL,EAAImnB,IAM5D,EAAAE,UAAAA,aAAP,WACE,QAAO18B,KAAKqjC,mBAAoBrjC,KAAKqjC,kBAAkB3G,cASlD,EAAAC,UAAAA,OAAP,SAAcC,EAAgBjR,EAAatwB,GACzC2E,KAAKqjC,kBAAmBwG,aAAajN,EAAQjR,EAAKtwB,IAO7C,EAAAwhC,UAAAA,aAAP,WACE,OAAO78B,KAAKqjC,kBAAoBrjC,KAAKqjC,kBAAkByG,cAAgB,IAGlE,EAAAhN,UAAAA,qBAAP,WACE,GAAK98B,KAAKqjC,mBAAsBrjC,KAAKqjC,kBAAkB3G,aAIvD,MAAO,CACL0C,YAAap/B,KAAKqjC,kBAAkB0G,eAAgB,GACpDv2B,SAAUxT,KAAKqjC,kBAAkB0G,eAAgB,GACjD1K,UAAWr/B,KAAKqjC,kBAAkB2G,aAAc,GAChDv2B,OAAQzT,KAAKqjC,kBAAkB2G,aAAc,KAO1C,EAAAjN,UAAAA,eAAP,eACwB,EAAA,QAAtB,EAAA/8B,KAAKqjC,yBAAiB,IAAEtG,GAAAA,EAAAA,kBAMnB,EAAAC,UAAAA,UAAP,eACwB,EAAA,QAAtB,EAAAh9B,KAAKqjC,yBAAiB,IAAErG,GAAAA,EAAAA,aAGnB,EAAAC,UAAAA,YAAP,SAAmB/1B,EAAeC,OACV,EAAA,QAAtB,EAAAnH,KAAKqjC,yBAAiB,IAAEpG,GAAAA,EAAAA,YAAY/1B,EAAOC,IASnC,EAAA28B,UAAAA,SAAV,SAAmBtb,GAGjB,GAFAxoB,KAAKigC,iBAAkB,EAEnBjgC,KAAK6hC,yBAAiE,IAAvC7hC,KAAK6hC,uBAAuBrZ,GAC7D,OAAO,EAGT,IAAKxoB,KAAKgkC,mBAAoBiG,QAAQzhB,GAIpC,OAHIxoB,KAAK0gB,OAAO+I,QAAUzpB,KAAK0gB,OAAOgL,OACpC1rB,KAAKu9B,kBAEA,EAGT,IAAMn2B,EAAS,EAAA8iC,sBAAsB1hB,EAAOxoB,KAAK+f,aAAamJ,gBAAgBiD,sBAAuBnsB,KAAK+/B,QAAQtzB,MAAOzM,KAAK0G,QAAQyjC,iBAItI,GAFAnqC,KAAK6iC,kBAAkBra,GAEH,IAAhBphB,EAAOjL,MAAyD,IAAhBiL,EAAOjL,KAAqC,CAC9F,IAAMiuC,EAAcpqC,KAAKmU,KAAO,EAEhC,OADAnU,KAAKk9B,YAA4B,IAAhB91B,EAAOjL,MAAuCiuC,EAAcA,GACtEpqC,KAAK0oC,OAAOlgB,GAAO,GAO5B,OAJoB,IAAhBphB,EAAOjL,MACT6D,KAAKg9B,cAGHh9B,KAAKqqC,mBAAmBrqC,KAAK+/B,QAASvX,KAItCphB,EAAOshC,QAET1oC,KAAK0oC,OAAOlgB,GAAO,IAGhBphB,EAAO9H,MAOR8H,EAAO9H,MAAQ,EAAAwN,GAAGI,KAAO9F,EAAO9H,MAAQ,EAAAwN,GAAGc,KAC7C5N,KAAKs7B,SAAUt8B,MAAQ,IAGzBgB,KAAKkgC,OAAO5/B,KAAK,CAAEhB,IAAK8H,EAAO9H,IAAKgrC,SAAU9hB,IAC9CxoB,KAAK8iC,cACL9iC,KAAK+f,aAAaS,iBAAiBpZ,EAAO9H,KAAK,GAM1CU,KAAKy6B,eAAe/zB,QAAQsiB,sBAIjChpB,KAAKigC,iBAAkB,GAHdjgC,KAAK0oC,OAAOlgB,GAAO,MAMtB,EAAA6hB,UAAAA,mBAAR,SAA2BtK,EAAmB6C,GAC5C,IAAM2H,EACHxK,EAAQtzB,QAAUzM,KAAK0G,QAAQyjC,iBAAmBvH,EAAGsF,SAAWtF,EAAGqF,UAAYrF,EAAG4H,SAClFzK,EAAQnzB,WAAag2B,EAAGsF,QAAUtF,EAAGqF,UAAYrF,EAAG4H,QAEvD,MAAgB,aAAZ5H,EAAGzmC,KACEouC,EAIFA,KAAmB3H,EAAG6H,SAAW7H,EAAG6H,QAAU,KAG7C,EAAA5G,UAAAA,OAAV,SAAiBjB,GACX5iC,KAAK6hC,yBAA8D,IAApC7hC,KAAK6hC,uBAAuBe,KAkMnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAG6H,SACO,KAAf7H,EAAG6H,SACY,KAAf7H,EAAG6H,QAHP,CA9LiC7H,IAC3B5iC,KAAK07B,QAGP17B,KAAK6iC,kBAAkBD,KASf,EAAAmB,UAAAA,UAAV,SAAoBnB,GAClB,IAAItjC,EAEJ,GAAIU,KAAKigC,gBACP,OAAO,EAGT,GAAIjgC,KAAK6hC,yBAA8D,IAApC7hC,KAAK6hC,uBAAuBe,GAC7D,OAAO,EAKT,GAFA5iC,KAAK0oC,OAAO9F,GAERA,EAAG8H,SACLprC,EAAMsjC,EAAG8H,cACJ,GAAiB,OAAb9H,EAAG+H,YAA+BjqC,IAAbkiC,EAAG+H,MACjCrrC,EAAMsjC,EAAG6H,YACJ,CAAiB,GAAA,IAAb7H,EAAG+H,OAA+B,IAAhB/H,EAAG8H,SAG9B,OAAO,EAFPprC,EAAMsjC,EAAG+H,MAKX,SAAKrrC,IACFsjC,EAAGsF,QAAUtF,EAAGqF,SAAWrF,EAAG4H,WAAaxqC,KAAKqqC,mBAAmBrqC,KAAK+/B,QAAS6C,KAKpFtjC,EAAMyH,OAAOC,aAAa1H,GAE1BU,KAAKkgC,OAAO5/B,KAAK,CAAEhB,IAAG,EAAEgrC,SAAU1H,IAClC5iC,KAAK8iC,cACL9iC,KAAK+f,aAAaS,iBAAiBlhB,GAAK,GAEjC,KAOF,EAAAqnB,UAAAA,KAAP,WACM3mB,KAAK4qC,cACP5qC,KAAK6lC,cAAegF,iBAkBjB,EAAAv2B,UAAAA,OAAP,SAAcc,EAAWC,GACnBD,IAAMpV,KAAKuZ,MAAQlE,IAAMrV,KAAKmU,KAQlC,EAAMG,UAAAA,OAAM,KAACc,KAAAA,EAAGC,GANVrV,KAAKiiC,mBAAqBjiC,KAAKiiC,iBAAiB6I,cAClD9qC,KAAKiiC,iBAAiBC,WAQpB,EAAAP,UAAAA,aAAR,SAAqBvsB,EAAWC,OACT,EAAA,EAAA,QAArB,EAAArV,KAAKiiC,wBAAgB,IAAEC,GAAAA,EAAAA,UAIV,QAAb,EAAAliC,KAAKqiC,gBAAQ,IAAEC,GAAAA,EAAAA,gBAAe,IAMzB,EAAA/6B,UAAAA,MAAP,WACE,GAA0B,IAAtBvH,KAAK0gB,OAAO+I,OAAiC,IAAlBzpB,KAAK0gB,OAAOrL,EAA3C,CAIArV,KAAK0gB,OAAO8I,MAAMrO,IAAI,EAAGnb,KAAK0gB,OAAO8I,MAAM5qB,IAAIoB,KAAK0gB,OAAO+I,MAAQzpB,KAAK0gB,OAAOrL,IAC/ErV,KAAK0gB,OAAO8I,MAAMnuB,OAAS,EAC3B2E,KAAK0gB,OAAOgL,MAAQ,EACpB1rB,KAAK0gB,OAAO+I,MAAQ,EACpBzpB,KAAK0gB,OAAOrL,EAAI,EAChB,IAAK,IAAI1X,EAAI,EAAGA,EAAIqC,KAAKmU,KAAMxW,IAC7BqC,KAAK0gB,OAAO8I,MAAMrpB,KAAKH,KAAK0gB,OAAOoL,aAAa,EAAAxQ,oBAElDtb,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,GAC5BnU,KAAK0iB,UAAUpiB,KAAKN,KAAK0gB,OAAOgL,SAW3B,EAAAmC,UAAAA,MAAP,eAKE7tB,EAAAA,EAAAA,KAAK0G,QAAQyN,KAAOnU,KAAKmU,KACzBnU,KAAK0G,QAAQ6S,KAAOvZ,KAAKuZ,KACzB,IAAMyiB,EAAwBh8B,KAAK6hC,uBAEnC7hC,KAAKygC,SACL,EAAM5S,UAAAA,MAAK,KACW,MAAA,QAAtB,EAAA7tB,KAAKqjC,yBAAiB,IAAExV,GAAAA,EAAAA,QAGxB7tB,KAAK6hC,uBAAyB7F,EAG9Bh8B,KAAK84B,QAAQ,EAAG94B,KAAKmU,KAAO,GACf,QAAb,EAAAnU,KAAKqiC,gBAAQ,IAAEC,GAAAA,EAAAA,kBAGT,EAAAf,UAAAA,sBAAR,SAA8BplC,GAC5B,GAAK6D,KAAK4hC,eAIV,OAAQzlC,GACN,KAAK,EAAAkiB,yBAAyBgQ,oBAC5B,IAAMpZ,EAAcjV,KAAK4hC,eAAemJ,WAAWj2B,kBAAkBk2B,QAAQ,GACvE91B,EAAelV,KAAK4hC,eAAemJ,WAAW/1B,mBAAmBg2B,QAAQ,GAC/EhrC,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,MAAMwG,EAAY,IAAID,EAAW,KAC7E,MACF,KAAK,EAAAoJ,yBAAyBiQ,qBAC5B,IAAM2c,EAAYjrC,KAAK4hC,eAAemJ,WAAWx2B,gBAAgBy2B,QAAQ,GACnEE,EAAalrC,KAAK4hC,eAAemJ,WAAWv2B,iBAAiBw2B,QAAQ,GAC3EhrC,KAAK+f,aAAaS,iBAAoB,EAAA1T,GAAG4B,IAAG,MAAMw8B,EAAU,IAAID,EAAS,OAMxE,EAAAvC,UAAAA,OAAP,SAAc9F,EAAWuI,GACvB,GAAKnrC,KAAK0G,QAAQ0kC,cAAiBD,EAKnC,OAFAvI,EAAG+F,iBACH/F,EAAGyI,mBACI,GAGD,EAAAC,UAAAA,YAAR,WACE,OAAO,GAKD,EAAAV,UAAAA,WAAR,WACE,MAAkC,UAA3B5qC,KAAK0G,QAAQ6kC,WAIxB,EA7jCE,CA3E4B,EAAAC,cAAjB,EAAAlR,qBCtDb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,uBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAYA,EAAA,GAAA,EAkBE,WAAA,SACmBmR,EAAAA,EACApG,EACgB9zB,EACCC,EACCywB,EACJliB,GALd,KAAA0rB,UACA,EAAA,KAAApG,iBACgB,EAAA,KAAA9zB,eACC,EAAA,KAAAC,gBACC,EAAA,KAAAywB,iBACJ,EAAA,KAAAliB,aAE/B/f,EAAAA,KAAK0rC,cAAe,EACpB1rC,KAAK2rC,uBAAwB,EAC7B3rC,KAAK4rC,qBAAuB,CAAE1kC,MAAO,EAAGC,IAAK,GAuLjD,OAjLS,EAAA88B,UAAAA,iBAAP,WACEjkC,KAAK0rC,cAAe,EACpB1rC,KAAK4rC,qBAAqB1kC,MAAQlH,KAAKyrC,UAAUzsC,MAAM3D,OACvD2E,KAAKqlC,iBAAiBwG,YAAc,GACpC7rC,KAAKqlC,iBAAiB9yB,UAAUC,IAAI,WAO/B,EAAA0xB,UAAAA,kBAAP,SAAyBtB,GAAzB,IACE5iC,EAAAA,KAAAA,KAAKqlC,iBAAiBwG,YAAcjJ,EAAG37B,KACvCjH,KAAKokC,4BACL0H,WAAW,WACT,EAAKF,qBAAqBzkC,IAAM,EAAKskC,UAAUzsC,MAAM3D,QACpD,IAOE,EAAA8oC,UAAAA,eAAP,WACEnkC,KAAK+rC,sBAAqB,IAQrB,EAAA9B,UAAAA,QAAP,SAAerH,GACb,GAAI5iC,KAAK0rC,cAAgB1rC,KAAK2rC,sBAAuB,CACnD,GAAmB,MAAf/I,EAAG6H,QAEL,OAAO,EAET,GAAmB,KAAf7H,EAAG6H,SAAiC,KAAf7H,EAAG6H,SAAiC,KAAf7H,EAAG6H,QAE/C,OAAO,EAITzqC,KAAK+rC,sBAAqB,GAG5B,OAAmB,MAAfnJ,EAAG6H,UAGLzqC,KAAKgsC,6BACE,IAcH,EAAAD,UAAAA,qBAAR,SAA6BE,GAA7B,IAKE,EAAA,KAAA,GAJAjsC,KAAKqlC,iBAAiB9yB,UAAUywB,OAAO,UACvChjC,KAAK0rC,cAAe,EACpB1rC,KAAKksC,yBAEAD,EAKE,CAGL,IAAM,EAA6B,CACjC/kC,MAAOlH,KAAK4rC,qBAAqB1kC,MACjCC,IAAKnH,KAAK4rC,qBAAqBzkC,KAWjCnH,KAAK2rC,uBAAwB,EAC7BG,WAAW,WAET,GAAI,EAAKH,sBAAuB,CAC9B,EAAKA,uBAAwB,EAC7B,IAAIlkC,EAGFA,EAFE,EAAKikC,aAEC,EAAKD,UAAUzsC,MAAMvC,UAAU,EAA2ByK,MAAO,EAA2BC,KAK5F,EAAKskC,UAAUzsC,MAAMvC,UAAU,EAA2ByK,OAEpE,EAAK6Y,aAAaS,iBAAiB/Y,GAAO,KAE3C,OAtCoB,CAEvBzH,KAAK2rC,uBAAwB,EAC7B,IAAMlkC,EAAQzH,KAAKyrC,UAAUzsC,MAAMvC,UAAUuD,KAAK4rC,qBAAqB1kC,MAAOlH,KAAK4rC,qBAAqBzkC,KACxGnH,KAAK+f,aAAaS,iBAAiB/Y,GAAO,KA4CtC,EAAAukC,UAAAA,0BAAR,WACQG,IAAAA,EAAAA,KAAAA,EAAWnsC,KAAKyrC,UAAUzsC,MAChC8sC,WAAW,WAET,IAAK,EAAKJ,aAAc,CACtB,IACMU,EADW,EAAKX,UAAUzsC,MACVnE,QAAQsxC,EAAU,IACpCC,EAAK/wC,OAAS,GAChB,EAAK0kB,aAAaS,iBAAiB4rB,GAAM,KAG5C,IASE,EAAAhI,UAAAA,0BAAP,SAAiCiI,GAAjC,IACE,EAAA,KAAA,GAAKrsC,KAAK0rC,aAAV,CAIA,GAAI1rC,KAAKuR,eAAemP,OAAO4rB,mBAAoB,CACjD,IAAMpB,EAAa9gC,KAAKsB,KAAK1L,KAAKiiC,iBAAiBltB,OAAS/U,KAAKwR,gBAAgB9K,QAAQ6lC,YACnFC,EAAYxsC,KAAKuR,eAAemP,OAAOrL,EAAI61B,EAC3CuB,EAAazsC,KAAKuR,eAAemP,OAAOtL,EAAIpV,KAAKiiC,iBAAiBptB,MAExE7U,KAAKqlC,iBAAiB5yB,MAAMylB,KAAOuU,EAAa,KAChDzsC,KAAKqlC,iBAAiB5yB,MAAM2b,IAAMoe,EAAY,KAC9CxsC,KAAKqlC,iBAAiB5yB,MAAMsC,OAASm2B,EAAa,KAClDlrC,KAAKqlC,iBAAiB5yB,MAAM85B,WAAarB,EAAa,KACtDlrC,KAAKqlC,iBAAiB5yB,MAAMmH,WAAa5Z,KAAKwR,gBAAgB9K,QAAQkT,WACtE5Z,KAAKqlC,iBAAiB5yB,MAAMkH,SAAW3Z,KAAKwR,gBAAgB9K,QAAQiT,SAAW,KAG/E,IAAM+yB,EAAwB1sC,KAAKqlC,iBAAiBrN,wBACpDh4B,KAAKyrC,UAAUh5B,MAAMylB,KAAOuU,EAAa,KACzCzsC,KAAKyrC,UAAUh5B,MAAM2b,IAAMoe,EAAY,KACvCxsC,KAAKyrC,UAAUh5B,MAAMoC,MAAQ63B,EAAsB73B,MAAQ,KAC3D7U,KAAKyrC,UAAUh5B,MAAMsC,OAAS23B,EAAsB33B,OAAS,KAC7D/U,KAAKyrC,UAAUh5B,MAAM85B,WAAaG,EAAsB33B,OAAS,KAG9Ds3B,GACHP,WAAW,WAAM,OAAK1H,EAAAA,2BAA0B,IAAO,KAQnD,EAAA8H,UAAAA,uBAAR,WACElsC,KAAKyrC,UAAUh5B,MAAMylB,KAAO,GAC5Bl4B,KAAKyrC,UAAUh5B,MAAM2b,IAAM,IAjND,EAqBzB,CAAA,EAAAttB,EAAAA,EAAAA,gBACA,EAAAQ,EAAAA,EAAAA,iBACA,EAAA2C,EAAAA,EAAAA,kBACA,EAAAhD,EAAAA,EAAAA,eAxBQqkC,GAkBX,GAlBW,EAAAA,8BCbb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAEA,EAAA,GAAA,EACA,EAAA,GAAA,EAQA,EAAA,GAAA,EAiBE,SAAA,GAAA,SACmBqH,EAAAA,EACA9H,EACA+H,EACgBr7B,EACCC,EACCywB,EACFL,GAPnC,IASE,EAAA,EAAO,KAAA,OAAA,YARU,EAAA+K,aACA,EAAA,EAAA9H,iBACA,EAAA,EAAA+H,YACgB,EAAA,EAAAr7B,eACC,EAAA,EAAAC,gBACC,EAAA,EAAAywB,iBACF,EAAA,EAAAL,eAvB5B,EAAA,EAAAiL,eAAyB,EACxB,EAAAC,kBAA4B,EAC5B,EAAAC,0BAAoC,EACpC,EAAAC,4BAAsC,EACtC,EAAAC,0BAAoC,EACpC,EAAAC,YAAsB,EACtB,EAAAC,eAAyB,EAKzB,EAAAC,oBAA8B,EAE9B,EAAAC,uBAAwC,KACxC,EAAAC,wBAAkC,EAgBxC,EAAKT,eAAkB,EAAKhI,iBAAiB0I,YAAc,EAAKX,YAAYW,aArC9C,GAsC9B,EAAKhxC,SAAS,EAAA4mC,yBAAyB,EAAK0B,iBAAkB,SAAU,EAAKniB,UAAUnjB,KAAK,KAG5FusC,WAAW,WAAM,OAAKxJ,EAAAA,kBAAkB,KAsN5C,OAzP8B,EAsCrB,EAAA,GAAA,EAAA6D,UAAAA,cAAP,SAAqBlU,GACnBjyB,KAAK6kC,iBAAiBpyB,MAAM+6B,gBAAkBvb,EAAOlc,WAAWlM,KAO1D,EAAA4jC,UAAAA,SAAR,SAAiBC,GAAjB,IACE,EAAA,KAAA,GAAIA,EAKF,OAJA1tC,KAAKq5B,qBAC+B,OAAhCr5B,KAAKqtC,wBACPxU,qBAAqB74B,KAAKqtC,yBAIM,OAAhCrtC,KAAKqtC,yBACPrtC,KAAKqtC,uBAAyBjU,sBAAsB,WAAM,OAAKC,EAAAA,oBAI3D,EAAAA,UAAAA,cAAR,WACE,GAAIr5B,KAAKiiC,iBAAiBltB,OAAS,EAAG,CACpC/U,KAAK8sC,kBAAoB9sC,KAAK4hC,eAAemJ,WAAWv2B,iBAAmB5W,OAAO4X,iBAClFxV,KAAKgtC,4BAA8BhtC,KAAK6kC,iBAAiB8I,aACzD,IAAMC,EAAkBxjC,KAAKC,MAAMrK,KAAK8sC,kBAAoB9sC,KAAK+sC,4BAA8B/sC,KAAKgtC,4BAA8BhtC,KAAK4hC,eAAemJ,WAAW71B,cAC7JlV,KAAKitC,4BAA8BW,IACrC5tC,KAAKitC,0BAA4BW,EACjC5tC,KAAK4sC,YAAYn6B,MAAMsC,OAAS/U,KAAKitC,0BAA4B,MAKrE,IAAMtsB,EAAY3gB,KAAKuR,eAAemP,OAAOgL,MAAQ1rB,KAAK8sC,kBACtD9sC,KAAK6kC,iBAAiBlkB,YAAcA,IAGtC3gB,KAAKstC,wBAAyB,EAC9BttC,KAAK6kC,iBAAiBlkB,UAAYA,GAGpC3gB,KAAKqtC,uBAAyB,MAKzB,EAAA/K,UAAAA,eAAP,SAAsBoL,GAEpB,QAFoB,IAAAA,IAAA,GAAA,GAEhB1tC,KAAK+sC,4BAA8B/sC,KAAKuR,eAAemP,OAAO8I,MAAMnuB,OAGtE,OAFA2E,KAAK+sC,0BAA4B/sC,KAAKuR,eAAemP,OAAO8I,MAAMnuB,YAClE2E,KAAKytC,SAASC,GAKhB,GAAI1tC,KAAKgtC,8BAAgChtC,KAAK4hC,eAAemJ,WAAW71B,aAAxE,CAMA,IAAM24B,EAAe7tC,KAAKuR,eAAemP,OAAOgL,MAAQ1rB,KAAK8sC,kBACzD9sC,KAAKmtC,iBAAmBU,GAMxB7tC,KAAKmtC,iBAAmBntC,KAAK6kC,iBAAiBlkB,WAM9C3gB,KAAK4hC,eAAemJ,WAAWv2B,iBAAmB5W,OAAO4X,mBAAqBxV,KAAK8sC,mBAXrF9sC,KAAKytC,SAASC,QAPd1tC,KAAKytC,SAASC,IA6BV,EAAAhrB,UAAAA,UAAR,SAAkBkgB,GAMhB,GAJA5iC,KAAKmtC,eAAiBntC,KAAK6kC,iBAAiBlkB,UAIvC3gB,KAAK6kC,iBAAiBiJ,aAK3B,GAAI9tC,KAAKstC,uBACPttC,KAAKstC,wBAAyB,MADhC,CAKA,IACMlB,EADShiC,KAAKC,MAAMrK,KAAKmtC,eAAiBntC,KAAK8sC,mBAC/B9sC,KAAKuR,eAAemP,OAAOgL,MACjD1rB,KAAK2sC,aAAaP,GAAM,KAQlB,EAAA2B,UAAAA,cAAR,SAAsBnL,EAAWzF,GAC/B,IAAM6Q,EAAmBhuC,KAAK6kC,iBAAiBlkB,UAAY3gB,KAAKgtC,4BAChE,QAAK7P,EAAS,GAAyC,IAApCn9B,KAAK6kC,iBAAiBlkB,WACtCwc,EAAS,GAAK6Q,EAAmBhuC,KAAKitC,6BACnCrK,EAAGqL,YACLrL,EAAG+F,kBAEE,IAWJ,EAAAW,UAAAA,QAAP,SAAe1G,GACb,IAAMzF,EAASn9B,KAAKkuC,mBAAmBtL,GACvC,OAAe,IAAXzF,IAGJn9B,KAAK6kC,iBAAiBlkB,WAAawc,EAC5Bn9B,KAAK+tC,cAAcnL,EAAIzF,KAGxB,EAAA+Q,UAAAA,mBAAR,SAA2BtL,GAEzB,GAAkB,IAAdA,EAAGiF,OACL,OAAO,EAIT,IAAI1K,EAASn9B,KAAKmuC,qBAAqBvL,EAAGiF,OAAQjF,GAMlD,OALIA,EAAGwL,YAAcC,WAAWC,eAC9BnR,GAAUn9B,KAAK8sC,kBACNlK,EAAGwL,YAAcC,WAAWE,iBACrCpR,GAAUn9B,KAAK8sC,kBAAoB9sC,KAAKuR,eAAe4C,MAElDgpB,GAQF,EAAAgM,UAAAA,iBAAP,SAAwBvG,GAEtB,GAAkB,IAAdA,EAAGiF,OACL,OAAO,EAIT,IAAI1K,EAASn9B,KAAKmuC,qBAAqBvL,EAAGiF,OAAQjF,GASlD,OARIA,EAAGwL,YAAcC,WAAWG,iBAC9BrR,GAAUn9B,KAAK8sC,kBAAoB,EACnC9sC,KAAKotC,qBAAuBjQ,EAC5BA,EAAS/yB,KAAKqkC,MAAMrkC,KAAKi/B,IAAIrpC,KAAKotC,uBAAyBptC,KAAKotC,oBAAsB,EAAI,GAAK,GAC/FptC,KAAKotC,qBAAuB,GACnBxK,EAAGwL,YAAcC,WAAWE,iBACrCpR,GAAUn9B,KAAKuR,eAAe4C,MAEzBgpB,GAGD,EAAAgR,UAAAA,qBAAR,SAA6BhR,EAAgByF,GAC3C,IAAM8L,EAAW1uC,KAAKwR,gBAAgB9K,QAAQioC,mBAE9C,MAAkB,QAAbD,GAAsB9L,EAAGsF,QACd,SAAbwG,GAAuB9L,EAAGqF,SACb,UAAbyG,GAAwB9L,EAAGuF,SACrBhL,EAASn9B,KAAKwR,gBAAgB9K,QAAQkoC,sBAAwB5uC,KAAKwR,gBAAgB9K,QAAQmoC,kBAG7F1R,EAASn9B,KAAKwR,gBAAgB9K,QAAQmoC,mBAOxC,EAAAtF,UAAAA,aAAP,SAAoB3G,GAClB5iC,KAAKktC,YAActK,EAAGkM,QAAQ,GAAGC,OAO5B,EAAAvF,UAAAA,YAAP,SAAmB5G,GACjB,IAAMiF,EAAS7nC,KAAKktC,YAActK,EAAGkM,QAAQ,GAAGC,MAEhD,OADA/uC,KAAKktC,YAActK,EAAGkM,QAAQ,GAAGC,MAClB,IAAXlH,IAGJ7nC,KAAK6kC,iBAAiBlkB,WAAaknB,EAC5B7nC,KAAK+tC,cAAcnL,EAAIiF,KAvPb,EAqBhB,CAAA,EAAA/mC,EAAAA,EAAAA,gBACA,EAAAQ,EAAAA,EAAAA,iBACA,EAAA2C,EAAAA,EAAAA,kBACA,EAAAG,EAAAA,EAAAA,iBAxBQ6hC,GAiBX,CAjB4B,EAAAlkC,YAAjB,EAAAkkC,qBCLb,EAAA,EAAA,GAAA,aAAA,SAAgB+I,EAAuB7X,GACrC,OAAOA,EAAKt8B,QAAQ,SAAU,MAOhC,SAAgBo0C,EAAoB9X,EAAcrK,GAChD,OAAIA,EACK,SAAcqK,EAAO,SAEvBA,EA4BT,SAAgByG,EAAMzG,EAAcmE,EAA+B4T,GAEjE/X,EAAO8X,EADP9X,EAAO6X,EAAuB7X,GACG+X,EAAYhmB,gBAAgB4D,oBAC7DoiB,EAAY1uB,iBAAiB2W,GAAM,GACnCmE,EAASt8B,MAAQ,GAQnB,SAAgB4kC,EAA6BhB,EAAgBtH,EAA+BoI,GAG1F,IAAMn7B,EAAMm7B,EAAc1L,wBACpBE,EAAO0K,EAAG3K,QAAU1vB,EAAI2vB,KAAO,GAC/B9J,EAAMwU,EAAGzK,QAAU5vB,EAAI6lB,IAAM,GAGnCkN,EAAS7oB,MAAM08B,SAAW,WAC1B7T,EAAS7oB,MAAMoC,MAAQ,OACvBymB,EAAS7oB,MAAMsC,OAAS,OACxBumB,EAAS7oB,MAAMylB,KAAUA,EAAI,KAC7BoD,EAAS7oB,MAAM2b,IAASA,EAAG,KAC3BkN,EAAS7oB,MAAMtB,OAAS,OAExBmqB,EAASI,QAIToQ,WAAW,WACTxQ,EAAS7oB,MAAM08B,SAAW,GAC1B7T,EAAS7oB,MAAMoC,MAAQ,GACvBymB,EAAS7oB,MAAMsC,OAAS,GACxBumB,EAAS7oB,MAAMylB,KAAO,GACtBoD,EAAS7oB,MAAM2b,IAAM,GACrBkN,EAAS7oB,MAAMtB,OAAS,IACvB,YA9EL,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,4BAAA,EAAA,EAQA,uBAAA,EAAA,EAWA,oBAAA,EAAA,EAA4ByxB,YAAAA,SAAAA,EAAoBwM,GAC1CxM,EAAGyM,eACLzM,EAAGyM,cAAcC,QAAQ,aAAcF,EAAiBtF,eAG1DlH,EAAG+F,kBAQL,EAAiC/F,iBAAAA,SAAAA,EAAoBtH,EAA+B4T,GAClFtM,EAAGyI,kBACCzI,EAAGyM,eAELzR,EADagF,EAAGyM,cAAcE,QAAQ,cAC1BjU,EAAU4T,IAI1B,EAYA,MAAA,EAAA,EAoCA,6BAAA,EAAA,EAAkCtM,kBAAAA,SAAAA,EAAgBtH,EAA+BoI,EAA4B0L,EAAqCI,GAChJ5L,EAA6BhB,EAAItH,EAAUoI,GAEvC8L,IAAqBJ,EAAiBK,mBAAmB7M,IAC3DwM,EAAiBM,mBAAmB9M,GAItCtH,EAASt8B,MAAQowC,EAAiBtF,cAClCxO,EAASqB,oBCtGX,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,IAEA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAgBA,EAAA,IAAA,EAGE,WAAA,SAAYthC,EAAAA,GACV2E,KAAK2vC,MAAQ,IAAI5nC,WAAW1M,GAmChC,OA3BS,EAAAu0C,UAAAA,WAAP,SAAkBxsB,EAAsBysB,GACtC,EAAA7nC,KAAKhI,KAAK2vC,MAAOvsB,GAAU,EAAsCysB,IAU5D,EAAAr9B,UAAAA,IAAP,SAAWhX,EAAc4sB,EAAoBhF,EAAsBysB,GACjE7vC,KAAK2vC,MAAMvnB,GAAS,EAAgC5sB,GAAQ4nB,GAAU,EAAsCysB,GAUvG,EAAAC,UAAAA,QAAP,SAAeC,EAAiB3nB,EAAoBhF,EAAsBysB,GACxE,IAAK,IAAIlyC,EAAI,EAAGA,EAAIoyC,EAAM10C,OAAQsC,IAChCqC,KAAK2vC,MAAMvnB,GAAS,EAAgC2nB,EAAMpyC,IAAMylB,GAAU,EAAsCysB,GAGtH,EApCE,GAHW,EAAAG,gBAkDA,EAAA,EAAAC,uBAAyB,WACpC,IAAMN,EAAyB,IAAIK,EAAgB,MAI7CE,EAAYh1C,MAAMi1C,MAAM,KAAMj1C,MADhB,MACoCa,IAAI,SAACq0C,EAAazyC,GAAc,OAAAA,IAClFkB,EAAI,SAACqI,EAAeC,GAA0B,OAAA+oC,EAAUt0C,MAAMsL,EAAOC,IAGrEkpC,EAAaxxC,EAAE,GAAM,KACrByxC,EAAczxC,EAAE,EAAM,IAC5ByxC,EAAYnwC,KAAK,IACjBmwC,EAAYnwC,KAAKgwC,MAAMG,EAAazxC,EAAE,GAAM,KAE5C,IACIupB,EADEmoB,EAAmB1xC,EAAE,EAAoB,IAQ/C,IAAKupB,KAJLunB,EAAMC,WAAW,EAAD,GAEhBD,EAAMG,QAAQO,EAAY,EAAF,EAEVE,GAAAA,EACZZ,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAO1nB,EAAO,EAAF,GAC7CunB,EAAMG,QAAQjxC,EAAE,IAAM,KAAOupB,EAAO,EAAF,GAClCunB,EAAMG,QAAQjxC,EAAE,IAAM,KAAOupB,EAAO,EAAF,GAClCunB,EAAMn9B,IAAI,IAAM4V,EAAO,EAAF,GACrBunB,EAAMn9B,IAAI,GAAM4V,EAAO,GAAF,GACrBunB,EAAMn9B,IAAI,IAAM4V,EAAO,EAAF,GACrBunB,EAAMG,QAAQ,CAAC,IAAM,IAAM,KAAO1nB,EAAO,EAAF,GACvCunB,EAAMn9B,IAAI,IAAM4V,EAAO,GAAF,GACrBunB,EAAMn9B,IAAI,IAAM4V,EAAO,GAAF,GAuFvB,OApFAunB,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EAEdm9B,GAAAA,EAAMn9B,IAAI,GAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQO,EAAY,EAAF,EACxBV,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,EAC5CH,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAE3B8wC,GAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,EAChCH,GAAAA,EAAMG,QAAQO,EAAY,EAAF,EACxBV,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EAEdm9B,GAAAA,EAAMn9B,IAAI,GAAM,EAAF,GACdm9B,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,EACtCH,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,EACtCH,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAE3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,GAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,GAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,GAC3B8wC,GAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,GAChCH,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,GAE3B8wC,GAAAA,EAAMn9B,IAAI,GAAM,EAAF,GACdm9B,GAAAA,EAAMG,QAAQQ,EAAa,EAAF,EACzBX,GAAAA,EAAMn9B,IAAI,IAAM,EAAF,EACdm9B,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,GAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,EAAF,EAC3B8wC,IAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,EACtCH,IAAAA,EAAMG,QAAQQ,EAAa,GAAF,EACzBX,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQQ,EAAa,GAAF,EACzBX,IAAAA,EAAMn9B,IAAI,IAAM,GAAF,EACdm9B,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,EACtCH,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQQ,EAAa,GAAF,EACzBX,IAAAA,EAAMn9B,IAAI,IAAM,GAAF,EACdm9B,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,IAAO,GAAF,EAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,GAAF,GAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,GAAF,GAC3B8wC,IAAAA,EAAMG,QAAQjxC,EAAE,GAAM,KAAO,EAAF,GAC3B8wC,IAAAA,EAAMG,QAAQQ,EAAa,GAAF,GACzBX,IAAAA,EAAMG,QAAQO,EAAY,GAAF,GACxBV,IAAAA,EAAMn9B,IAAI,IAAM,GAAF,EACdm9B,IAAAA,EAAMG,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,GAEtCH,GAAAA,EAAMn9B,IAxHoB,IAwHK,EAAF,EAC7Bm9B,GAAAA,EAAMn9B,IAzHoB,IAyHK,EAAF,EAC7Bm9B,GAAAA,EAAMn9B,IA1HoB,IA0HK,EAAF,EAC7Bm9B,GAAAA,EAAMn9B,IA3HoB,IA2HK,GAAF,EAC7Bm9B,IAAAA,EAAMn9B,IA5HoB,IA4HK,GAAF,GACtBm9B,IAAAA,EAtH6B,GAwJtC,IAyBE,EAAA,SAAA,GAAA,SACqBa,EAAAA,QAAA,IAAAA,IAAgC,EAAA,EAAAP,wBADrD,IAGE,EAAA,EAAO,KAAA,OAAA,YAFY,EAAAO,aAInB,EAAA,EAAKC,aAAe,EACpB,EAAKC,aAAe,EAAKD,aACzB,EAAK3e,QAAU,IAAI,EAAAlC,OACnB,EAAKkC,QAAQ/B,SAAS,GACtB,EAAK4gB,SAAW,EAChB,EAAK5mB,mBAAqB,EAG1B,EAAK6mB,gBAAkB,SAAC3pC,EAAMC,EAAOC,KACrC,EAAK0pC,kBAAoB,SAACr1C,KAC1B,EAAKs1C,cAAgB,SAACjuB,EAAe3C,KACrC,EAAK6wB,cAAgB,SAACluB,KACtB,EAAKmuB,gBAAkB,SAAC5oB,GAAwC,OAAAA,GAChE,EAAK6oB,cAAgB,EAAKL,gBAC1B,EAAKM,iBAAmBzyC,OAAOY,OAAO,MACtC,EAAK8xC,aAAe1yC,OAAOY,OAAO,MAClC,EAAK+xC,aAAe3yC,OAAOY,OAAO,MAClC,EAAKgyC,WAAa,IAAI,EAAAhgB,UACtB,EAAKigB,WAAa,IAAI,EAAAzf,UACtB,EAAK0f,cAAgB,EAAKP,gBAG1B,EAAKxpB,cAAc,CAAC9D,MAAO,MAAO,gBAmWtC,OAvZ0C,EAuD9B,EAAA,GAAA,EAAA8tB,UAAAA,YAAV,SAAsBp2C,EAAyBq2C,QAAA,IAAAA,IAAA,EAAA,CAAwB,GAAM,MAC3E,IAAIxhB,EAAM,EACV,GAAI70B,EAAGqpB,OAAQ,CACb,GAAIrpB,EAAGqpB,OAAOppB,OAAS,EACrB,MAAM,IAAIf,MAAM,qCAGlB,IADA21B,EAAM70B,EAAGqpB,OAAO7gB,WAAW,KAChB,GAAOqsB,GAAOA,EAAM,GAC7B,MAAM,IAAI31B,MAAM,wCAGpB,GAAIc,EAAGwoB,cAAe,CACpB,GAAIxoB,EAAGwoB,cAAcvoB,OAAS,EAC5B,MAAM,IAAIf,MAAM,iDAElB,IAAK,IAAIqD,EAAI,EAAGA,EAAIvC,EAAGwoB,cAAcvoB,SAAUsC,EAAG,CAChD,IAAM+zC,EAAet2C,EAAGwoB,cAAchgB,WAAWjG,GACjD,GAAI,GAAO+zC,GAAgBA,EAAe,GACxC,MAAM,IAAIp3C,MAAM,8CAElB21B,IAAQ,EACRA,GAAOyhB,GAGX,GAAwB,IAApBt2C,EAAGsoB,MAAMroB,OACX,MAAM,IAAIf,MAAM,+BAElB,IAAMq3C,EAAYv2C,EAAGsoB,MAAM9f,WAAW,GACtC,GAAI6tC,EAAW,GAAKE,GAAaA,EAAYF,EAAW,GACtD,MAAM,IAAIn3C,MAAM,0BAA0Bm3C,EAAW,GAAE,OAAOA,EAAW,IAK3E,OAHAxhB,IAAQ,GACD0hB,GAKF,EAAA5uB,UAAAA,cAAP,SAAqBF,GAEnB,IADA,IAAMoN,EAAgB,GACfpN,GACLoN,EAAI9vB,KAAK4G,OAAOC,aAAqB,IAAR6b,IAC7BA,IAAU,EAEZ,OAAOoN,EAAI2hB,UAAU36B,KAAK,KAGrB,EAAA7W,UAAAA,QAAP,WACEJ,KAAKmxC,aAAe1yC,OAAOY,OAAO,MAClCW,KAAKkxC,iBAAmBzyC,OAAOY,OAAO,MACtCW,KAAKoxC,aAAe3yC,OAAOY,OAAO,MAClCW,KAAKqxC,WAAWjxC,UAChBJ,KAAKsxC,WAAWlxC,WAGX,EAAAmjB,UAAAA,gBAAP,SAAuB9c,GACrBzG,KAAKixC,cAAgBxqC,GAEhB,EAAAorC,UAAAA,kBAAP,WACE7xC,KAAKixC,cAAgBjxC,KAAK4wC,iBAGrB,EAAAxmB,UAAAA,cAAP,SAAqBhvB,EAAyBqL,GAC5C,IAAMoc,EAAQ7iB,KAAKwxC,YAAYp2C,EAAI,CAAC,GAAM,WACTsF,IAA7BV,KAAKoxC,aAAavuB,KACpB7iB,KAAKoxC,aAAavuB,GAAS,IAE7B,IAAM+N,EAAc5wB,KAAKoxC,aAAavuB,GAEtC,OADA+N,EAAYzwB,KAAKsG,GACV,CACLrG,QAAS,WACP,IAAMywB,EAAeD,EAAYhvB,QAAQ6E,IACnB,IAAlBoqB,GACFD,EAAYvwB,OAAOwwB,EAAc,MAKlC,EAAArJ,UAAAA,cAAP,SAAqBpsB,EAAyBqL,GAC5CzG,KAAKoxC,aAAapxC,KAAKwxC,YAAYp2C,EAAI,CAAC,GAAM,OAAU,CAACqL,IAEpD,EAAAqrC,UAAAA,gBAAP,SAAuB12C,GACjB4E,KAAKoxC,aAAapxC,KAAKwxC,YAAYp2C,EAAI,CAAC,GAAM,eAAgB4E,KAAKoxC,aAAapxC,KAAKwxC,YAAYp2C,EAAI,CAAC,GAAM,QAE3G,EAAA6nB,UAAAA,sBAAP,SAA6Bxc,GAC3BzG,KAAK+wC,cAAgBtqC,GAGhB,EAAAigB,UAAAA,kBAAP,SAAyBqB,EAActhB,GACrCzG,KAAKkxC,iBAAiBnpB,EAAKnkB,WAAW,IAAM6C,GAEvC,EAAAsrC,UAAAA,oBAAP,SAA2BhqB,GACrB/nB,KAAKkxC,iBAAiBnpB,EAAKnkB,WAAW,YAAY5D,KAAKkxC,iBAAiBnpB,EAAKnkB,WAAW,KAEvF,EAAAsf,UAAAA,0BAAP,SAAiCzc,GAC/BzG,KAAK6wC,kBAAoBpqC,GAGpB,EAAAujB,UAAAA,cAAP,SAAqB5uB,EAAyBqL,GAC5C,IAAMoc,EAAQ7iB,KAAKwxC,YAAYp2C,QACEsF,IAA7BV,KAAKmxC,aAAatuB,KACpB7iB,KAAKmxC,aAAatuB,GAAS,IAE7B,IAAM+N,EAAc5wB,KAAKmxC,aAAatuB,GAEtC,OADA+N,EAAYzwB,KAAKsG,GACV,CACLrG,QAAS,WACP,IAAMywB,EAAeD,EAAYhvB,QAAQ6E,IACnB,IAAlBoqB,GACFD,EAAYvwB,OAAOwwB,EAAc,MAKlC,EAAApN,UAAAA,cAAP,SAAqBroB,EAAyBqL,GAC5CzG,KAAKmxC,aAAanxC,KAAKwxC,YAAYp2C,IAAO,CAACqL,IAEtC,EAAAurC,UAAAA,gBAAP,SAAuB52C,GACjB4E,KAAKmxC,aAAanxC,KAAKwxC,YAAYp2C,YAAa4E,KAAKmxC,aAAanxC,KAAKwxC,YAAYp2C,KAElF,EAAAwnB,UAAAA,sBAAP,SAA6BqH,GAC3BjqB,KAAK8wC,cAAgB7mB,GAGhB,EAAAC,UAAAA,cAAP,SAAqB9uB,EAAyBqL,GAC5C,OAAOzG,KAAKsxC,WAAW3gB,WAAW3wB,KAAKwxC,YAAYp2C,GAAKqL,IAEnD,EAAA6hB,UAAAA,cAAP,SAAqBltB,EAAyBqL,GAC5CzG,KAAKsxC,WAAWxgB,WAAW9wB,KAAKwxC,YAAYp2C,GAAKqL,IAE5C,EAAAwrC,UAAAA,gBAAP,SAAuB72C,GACrB4E,KAAKsxC,WAAWvgB,aAAa/wB,KAAKwxC,YAAYp2C,KAEzC,EAAAioB,UAAAA,sBAAP,SAA6B5c,GAC3BzG,KAAKsxC,WAAWtgB,mBAAmBvqB,IAG9B,EAAA4jB,UAAAA,cAAP,SAAqBxH,EAAepc,GAClC,OAAOzG,KAAKqxC,WAAW1gB,WAAW9N,EAAOpc,IAEpC,EAAA2gB,UAAAA,cAAP,SAAqBvE,EAAepc,GAClCzG,KAAKqxC,WAAWvgB,WAAWjO,EAAOpc,IAE7B,EAAAyrC,UAAAA,gBAAP,SAAuBrvB,GACrB7iB,KAAKqxC,WAAWtgB,aAAalO,IAExB,EAAAM,UAAAA,sBAAP,SAA6B1c,GAC3BzG,KAAKqxC,WAAWrgB,mBAAmBvqB,IAG9B,EAAA0hB,UAAAA,gBAAP,SAAuB8B,GACrBjqB,KAAKuxC,cAAgBtnB,GAEhB,EAAAkoB,UAAAA,kBAAP,WACEnyC,KAAKuxC,cAAgBvxC,KAAKgxC,iBAGrB,EAAAnjB,UAAAA,MAAP,WACE7tB,KAAK0wC,aAAe1wC,KAAKywC,aACzBzwC,KAAKqxC,WAAWxjB,QAChB7tB,KAAKsxC,WAAWzjB,QAChB7tB,KAAK8xB,QAAQjE,QACb7tB,KAAK8xB,QAAQ/B,SAAS,GACtB/vB,KAAK2wC,SAAW,EAChB3wC,KAAK+pB,mBAAqB,GAmBrB,EAAAtB,UAAAA,MAAP,SAAaxhB,EAAmB5L,GAW9B,IAVA,IAAIG,EAAO,EACP42C,EAAa,EACb1B,EAAe1wC,KAAK0wC,aAClB2B,EAAMryC,KAAKqxC,WACXiB,EAAMtyC,KAAKsxC,WACbiB,EAAUvyC,KAAK2wC,SACbzwB,EAASlgB,KAAK8xB,QACd6d,EAAoB3vC,KAAKwwC,aAAab,MAGnChyC,EAAI,EAAGA,EAAItC,IAAUsC,EAAG,CAK/B,QADAy0C,EAAazC,EAAMe,GAAgB,IAHnCl1C,EAAOyL,EAAKtJ,IAG+D,IAAOnC,EA3Z5D,QA4ZA,GACpB,KAAK,EAGH,IAAK,IAAI,EAAImC,EAAI,KAAO,EAAG,CACzB,GAAI,GAAKtC,IAAWG,EAAOyL,EAAK,IAAM,IAASzL,EAAO,KAAQA,EAja9C,IAia2E,CACzFwE,KAAKixC,cAAchqC,EAAMtJ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKtC,IAAWG,EAAOyL,EAAK,IAAM,IAASzL,EAAO,KAAQA,EAtahD,IAsa6E,CAC3FwE,KAAKixC,cAAchqC,EAAMtJ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKtC,IAAWG,EAAOyL,EAAK,IAAM,IAASzL,EAAO,KAAQA,EA3ahD,IA2a6E,CAC3FwE,KAAKixC,cAAchqC,EAAMtJ,EAAG,GAC5BA,EAAI,EAAI,EACR,MAEF,KAAM,GAAKtC,IAAWG,EAAOyL,EAAK,IAAM,IAASzL,EAAO,KAAQA,EAhbhD,IAgb6E,CAC3FwE,KAAKixC,cAAchqC,EAAMtJ,EAAG,GAC5BA,EAAI,EAAI,EACR,OAGJ,MACF,KAAK,EACCqC,KAAKkxC,iBAAiB11C,GAAOwE,KAAKkxC,iBAAiB11C,KAClDwE,KAAK6wC,kBAAkBr1C,GAC5BwE,KAAK+pB,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8B/pB,KAAKuxC,cACjC,CACEpC,SAAUxxC,EACVnC,KAAI,EACJk1C,aAAY,EACZ6B,QAAO,EACPryB,OAAM,EACNsyB,OAAO,IAEAA,MAAO,OAElB,MACF,KAAK,EAIH,IAFA,IAAMthB,EAAWlxB,KAAKmxC,aAAaoB,GAAW,EAAI/2C,GAC9C+vB,EAAI2F,EAAWA,EAAS71B,OAAS,GAAK,EACnCkwB,GAAK,IAEkB,IAAxB2F,EAAS3F,GAAGrL,GAFHqL,KAMXA,EAAI,GACNvrB,KAAK8wC,cAAcyB,GAAW,EAAI/2C,EAAM0kB,GAE1ClgB,KAAK+pB,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQvuB,GACN,KAAK,GACH0kB,EAAO6P,SAAS,GAChB,MACF,KAAK,GACH7P,EAAO4P,aAAa,GACpB,MACF,QACE5P,EAAOkQ,SAAS50B,EAAO,aAElBmC,EAAItC,IAAWG,EAAOyL,EAAKtJ,IAAM,IAAQnC,EAAO,IAC3DmC,IACA,MACF,KAAK,EACH40C,IAAY,EACZA,GAAW/2C,EACX,MACF,KAAK,GAGH,IAFA,IAAMi3C,EAAczyC,KAAKoxC,aAAamB,GAAW,EAAI/2C,GACjDk3C,EAAKD,EAAcA,EAAYp3C,OAAS,GAAK,EAC1Cq3C,GAAM,IAEe,IAAtBD,EAAYC,KAFFA,KAMZA,EAAK,GACP1yC,KAAK+wC,cAAcwB,GAAW,EAAI/2C,GAEpCwE,KAAK+pB,mBAAqB,EAC1B,MACF,KAAK,GACH7J,EAAO2N,QACP3N,EAAO6P,SAAS,GAChBwiB,EAAU,EACV,MACF,KAAK,GACHD,EAAIryB,KAAKsyB,GAAW,EAAI/2C,EAAM0kB,GAC9B,MACF,KAAK,GAGH,IAAK,IAAI,EAAIviB,EAAI,KAAO,EACtB,GAAI,GAAKtC,GAA+B,MAApBG,EAAOyL,EAAK,KAAyB,KAATzL,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAxgBlF,IAwgB+G,CAC7H82C,EAAInyB,IAAIlZ,EAAMtJ,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,GACH20C,EAAIjyB,OAAgB,KAAT7kB,GAA0B,KAATA,GACf,KAATA,IAAe42C,GAAc,GACjClyB,EAAO2N,QACP3N,EAAO6P,SAAS,GAChBwiB,EAAU,EACVvyC,KAAK+pB,mBAAqB,EAC1B,MACF,KAAK,EACHsoB,EAAInrC,QACJ,MACF,KAAK,EAEH,IAAK,IAAI,EAAIvJ,EAAI,GAAK,IACpB,GAAI,GAAKtC,IAAWG,EAAOyL,EAAK,IAAM,IAASzL,EAAO,KAAQA,GAAQ,IAAO,CAC3E62C,EAAIlyB,IAAIlZ,EAAMtJ,EAAG,GACjBA,EAAI,EAAI,EACR,MAGJ,MACF,KAAK,EACH00C,EAAIlrC,IAAa,KAAT3L,GAA0B,KAATA,GACZ,KAATA,IAAe42C,GAAc,GACjClyB,EAAO2N,QACP3N,EAAO6P,SAAS,GAChBwiB,EAAU,EACVvyC,KAAK+pB,mBAAqB,EAG9B2mB,EAA4B,GAAb0B,EAIjBpyC,KAAK2wC,SAAW4B,EAGhBvyC,KAAK0wC,aAAeA,GAExB,EA9XE,CAzBwC,EAAA3uC,YAA7B,EAAAsf,iCCjOb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EAEIsxB,EAAAA,GAAAA,EAAiB,EAErB,EAYE,SAAA,GAAA,SACUthC,EAAAA,EACSuhC,EACjBlS,EACAI,EACiCvvB,EACE0wB,EACDzwB,EACpB09B,EACOjK,GATvB,IAWE,EAAA,EAAO,KAAA,OAAA,KAVC,EAAA5zB,QACS,EAAA,EAAAuhC,eAGgB,EAAA,EAAArhC,eACE,EAAA,EAAA0wB,iBACD,EAAA,EAAAzwB,gBAlB5B,EAAA,EAAAgf,IAAMmiB,IAQN,EAAAE,iBAAmB,IAAI,EAAAlyC,aAe7B,IAAMqyB,EAAoB,EAAKxhB,gBAAgB9K,QAAQssB,yBACvD,EAAK8f,yBAA2B,IAAI,EAAAzb,wBAAwB,EAAK9lB,gBACjE,EAAKwhC,cAAgB,CACnB,IAAI,EAAAC,gBAAgB,EAAKJ,eAAgB,EAAG,EAAKvhC,QAAS,EAAKyhC,yBAA0B9f,EAAmB,EAAKxC,IAAK,EAAKjf,eAAgBC,GAC3I,IAAI,EAAAyhC,qBAAqB,EAAKL,eAAgB,EAAG,EAAKvhC,QAAS,EAAKmf,IAAK,EAAKjf,eAAgBC,GAC9F,IAAI,EAAA0hC,gBAAgB,EAAKN,eAAgB,EAAG,EAAKvhC,QAAS,EAAKmf,IAAKkQ,EAAWI,EAAY,EAAKvvB,eAAgBC,GAChH,IAAI,EAAA2hC,kBAAkB,EAAKP,eAAgB,EAAG,EAAKvhC,QAAS,EAAKmf,IAAK,EAAKqiB,iBAAkB,EAAKthC,eAAgBC,EAAiB09B,EAAajK,IAElJ,EAAK8F,WAAa,CAChBt2B,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACdqjB,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAK4a,kBAAoBx1C,OAAO4X,iBAChC,EAAK69B,oBACL,EAAKlgC,qBAwJT,OAxM8B,EAU5B,EAAA,GAAA,OAAW,eAAA,EAAe,UAAA,kBAAA,KAA1B,WAA4D,OAAOnT,KAAK6yC,iBAAiBrqB,mBAyClF,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,WACE,IAAgB,IAAAJ,EAAAA,EAAAA,EAAAA,KAAK+yC,cAAL,EAAoB,EAAA,OAAA,IAAxB,EACR3yC,GAAAA,UAEJ,EAAMA,UAAAA,QAAO,KACb,MAAA,EAAAkzC,wBAAwBtzC,KAAKwwB,MAGxB,EAAA+iB,UAAAA,yBAAP,WAGMvzC,KAAKozC,oBAAsBx1C,OAAO4X,mBACpCxV,KAAKozC,kBAAoBx1C,OAAO4X,iBAChCxV,KAAKm7B,SAASn7B,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,QAIzD,EAAAP,UAAAA,UAAP,SAAiBqe,GACfjyB,KAAKqR,QAAU4gB,EAEf,IAAgB,IAAAjyB,EAAAA,EAAAA,EAAAA,KAAK+yC,cAAL,EAAoB,EAAA,OAAA,IAAA,CAA/B,IAAM/0C,EAAC,EACVA,GAAAA,EAAE4V,UAAU5T,KAAKqR,SACjBrT,EAAE6vB,UAIC,EAAAsN,UAAAA,SAAP,SAAgB5hB,EAAcpF,GAE5BnU,KAAKqzC,oBAGL,IAAgB,IAAArzC,EAAAA,EAAAA,EAAAA,KAAK+yC,cAAL,EAAoB,EAAA,OAAA,IAAxB,EACRz+B,GAAAA,OAAOtU,KAAK+qC,YAIhB/qC,KAAK4yC,eAAengC,MAAMoC,MAAW7U,KAAK+qC,WAAW91B,YAAW,KAChEjV,KAAK4yC,eAAengC,MAAMsC,OAAY/U,KAAK+qC,WAAW71B,aAAY,MAG7D,EAAAs+B,UAAAA,kBAAP,WACExzC,KAAKm7B,SAASn7B,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,OAGvD,EAAAf,UAAAA,OAAP,WACEpT,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAEoV,YAGrB,EAAAC,UAAAA,QAAP,WACErT,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAEqV,aAGrB,EAAAK,UAAAA,mBAAP,SAA0BxM,EAAqCC,EAAmCwM,QAAA,IAAAA,IAAA,GAAA,GAChG3T,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAE0V,mBAAmBxM,EAAOC,EAAKwM,MAGpD,EAAAL,UAAAA,aAAP,WACEtT,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAEsV,kBAGrB,EAAAH,UAAAA,iBAAP,WACEnT,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAEmV,sBAGrB,EAAA5L,UAAAA,MAAP,WACEvH,KAAKyzC,cAAc,SAAAz1C,GAAK,OAAAA,EAAE6vB,WAGpB,EAAA4lB,UAAAA,cAAR,SAAsBC,GACpB,IAAgB,IAAA1zC,EAAAA,EAAAA,EAAAA,KAAK+yC,cAAL,EAAoB,EAAA,OAAA,IAClCW,EADU,EASP,KAAA,EAAAC,UAAAA,WAAP,SAAkBzsC,EAAeC,GAC/B,IAAgB,IAAAnH,EAAAA,EAAAA,EAAAA,KAAK+yC,cAAL,EAAoB,EAAA,OAAA,IAAxB,EACRx/B,GAAAA,cAAcrM,EAAOC,IAOnB,EAAAksC,UAAAA,kBAAR,WACOrzC,KAAKiiC,iBAAiB6I,eAQ3B9qC,KAAK+qC,WAAWt2B,gBAAkBrK,KAAKqkC,MAAMzuC,KAAKiiC,iBAAiBptB,MAAQjX,OAAO4X,kBAKlFxV,KAAK+qC,WAAWr2B,iBAAmBtK,KAAKsB,KAAK1L,KAAKiiC,iBAAiBltB,OAASnX,OAAO4X,kBAMnFxV,KAAK+qC,WAAWv2B,iBAAmBpK,KAAKqkC,MAAMzuC,KAAK+qC,WAAWr2B,iBAAmB1U,KAAKwR,gBAAgB9K,QAAQ6lC,YAI9GvsC,KAAK+qC,WAAWn2B,cAA4D,IAA5C5U,KAAKwR,gBAAgB9K,QAAQ6lC,WAAmB,EAAIniC,KAAKC,OAAOrK,KAAK+qC,WAAWv2B,iBAAmBxU,KAAK+qC,WAAWr2B,kBAAoB,GAGvK1U,KAAK+qC,WAAWx2B,gBAAkBvU,KAAK+qC,WAAWt2B,gBAAkBrK,KAAKC,MAAMrK,KAAKwR,gBAAgB9K,QAAQktC,eAI5G5zC,KAAK+qC,WAAWp2B,eAAiBvK,KAAKqkC,MAAMzuC,KAAKwR,gBAAgB9K,QAAQktC,cAAgB,GAIzF5zC,KAAK+qC,WAAW/1B,mBAAqBhV,KAAKuR,eAAe4C,KAAOnU,KAAK+qC,WAAWv2B,iBAChFxU,KAAK+qC,WAAWj2B,kBAAoB9U,KAAKuR,eAAegI,KAAOvZ,KAAK+qC,WAAWx2B,gBAO/EvU,KAAK+qC,WAAW71B,aAAe9K,KAAKC,MAAMrK,KAAK+qC,WAAW/1B,mBAAqBpX,OAAO4X,kBACtFxV,KAAK+qC,WAAW91B,YAAc7K,KAAKC,MAAMrK,KAAK+qC,WAAWj2B,kBAAoBlX,OAAO4X,kBAOpFxV,KAAK+qC,WAAWvS,iBAAmBx4B,KAAK+qC,WAAW71B,aAAelV,KAAKuR,eAAe4C,KACtFnU,KAAK+qC,WAAWxS,gBAAkBv4B,KAAK+qC,WAAW91B,YAAcjV,KAAKuR,eAAegI,OAG/E,EAAA4c,UAAAA,wBAAP,SAA+B1vB,GAC7B,OAAOzG,KAAK8yC,yBAAyB3c,wBAAwB1vB,IAGxD,EAAA4vB,UAAAA,0BAAP,SAAiCC,GAC/B,OAAOt2B,KAAK8yC,yBAAyBzc,0BAA0BC,IAtM9C,EAiBhB,CAAA,EAAAx1B,EAAAA,EAAAA,gBACA,EAAAmD,EAAAA,EAAAA,kBACA,EAAA3C,EAAAA,EAAAA,iBACA,EAAAL,EAAAA,EAAAA,cACA,EAAAiD,EAAAA,EAAAA,sBArBQmjC,GAYX,CAZ4B,EAAAtlC,YAAjB,EAAAslC,qBCbb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,IAAA,EAUA,EAAA,GAAA,EAQE,SAAA,GAAA,SACEwM,EAAAA,EACA1iC,EACA8gB,EACA6hB,EACA7gC,EACA+e,EACA+hB,EACAtZ,GARF,IAUE,EAAA,EAAMoZ,KAAAA,KAAAA,EAAW,OAAQ1iC,EAAQ8B,EAAOgf,EAAQD,EAAY+hB,EAAetZ,IAAe,YAhBpF,EAAAuZ,gBAA0B,EAC1B,EAAAC,eAAyB,GACzB,EAAAC,uBAAqD,GAErD,EAAAzyB,UAAY,IAAI,EAAApe,SAatB,EAAKktB,OAAS,IAAI,EAAA4jB,UAClB,EAAKrB,yBAA2BgB,IA4RpC,OAhTqC,EAuB5B,EAAA,GAAA,EAAAx/B,UAAAA,OAAP,SAAcpC,GACZ,EAAMoC,UAAAA,OAAM,KAACpC,KAAAA,GAGb,IAAMkiC,EAAep0C,KAAKoW,UAAS,GAAO,GACtCpW,KAAKg0C,kBAAoB9hC,EAAIuC,iBAAmBzU,KAAKi0C,iBAAmBG,IAC1Ep0C,KAAKg0C,gBAAkB9hC,EAAIuC,gBAC3BzU,KAAKi0C,eAAiBG,EACtBp0C,KAAKk0C,uBAAyB,IAGhCl0C,KAAKuwB,OAAOhpB,QACZvH,KAAKuwB,OAAOjc,OAAOtU,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,OAG5D,EAAA0Z,UAAAA,MAAP,WACE7tB,KAAKuwB,OAAOhpB,QACZvH,KAAKkT,aAGC,EAAAmhC,UAAAA,aAAR,SACEC,EACAC,EACAC,EACAvqB,GAMA,IAAK,IAAI5U,EAAIi/B,EAAUj/B,GAAKk/B,EAASl/B,IAInC,IAHA,IAAMsW,EAAMtW,EAAIrV,KAAKuR,eAAemP,OAAOgL,MACrCzO,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAI+sB,GAC5CoL,EAAeyd,EAAiBA,EAAeje,oBAAoB5K,GAAO,GACvEvW,EAAI,EAAGA,EAAIpV,KAAKuR,eAAegI,KAAMnE,IAAK,CACjD6H,EAAMZ,SAASjH,EAAGpV,KAAKyhB,WACvB,IAAIvL,EAAOlW,KAAKyhB,UAGZgzB,GAAW,EACXC,EAAYt/B,EAIhB,GAAwB,IAApBc,EAAK1S,WAAT,CAOA,GAAIuzB,EAAa17B,OAAS,GAAK+Z,IAAM2hB,EAAa,GAAG,GAAI,CACvD0d,GAAW,EACX,IAAM5c,EAAQd,EAAaxI,QAK3BrY,EAAO,IAAI,EAAA8f,eACTh2B,KAAKyhB,UACLxE,EAAMW,mBAAkB,EAAMia,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInB6c,EAAY7c,EAAM,GAAK,GAOpB4c,GAAYz0C,KAAK20C,eAAez+B,IAQ/Bw+B,EAAYz3B,EAAM5hB,OAAS,GAAK4hB,EAAMd,aAAau4B,EAAY,KAAO,EAAAjyC,iBAExEyT,EAAKrT,UAAW,SAChBqT,EAAKrT,SAAW,GAAK,IASzBonB,EACE/T,EACAd,EACAC,GAGFD,EAAIs/B,KASF,EAAAE,UAAAA,gBAAR,SAAwBN,EAAkBC,GAA1C,IACQ7gB,EAAAA,KAAAA,EAAM1zB,KAAK8S,KACXyG,EAAOvZ,KAAKuR,eAAegI,KAC7Bs7B,EAAiB,EACjBC,EAAiB,EACjBC,EAA+B,KAEnCrhB,EAAI1c,OAEJhX,KAAKq0C,aAAaC,EAAUC,EAAS,KAAM,SAACr+B,EAAMd,EAAGC,GAGnD,IAAI2/B,EAAgB,KAEhB9+B,EAAKvR,YAELqwC,EADE9+B,EAAK1Q,cACS,EAAK6L,QAAQ8F,WAAWtN,IAC/BqM,EAAK9Q,UACE,OAAO,EAAApB,cAAcO,WAAW2R,EAAKvQ,cAAcsR,KAAK,KAAI,IAE5D,EAAK5F,QAAQ6F,KAAKhB,EAAKvQ,cAAckE,IAE9CqM,EAAK7Q,UACd2vC,EAAgB,OAAO,EAAAhxC,cAAcO,WAAW2R,EAAKtQ,cAAcqR,KAAK,KAAI,IACnEf,EAAK3Q,gBACdyvC,EAAgB,EAAK3jC,QAAQ6F,KAAKhB,EAAKtQ,cAAciE,KAGjC,OAAlBkrC,IAGFF,EAASz/B,EACT0/B,EAASz/B,GAGPA,IAAMy/B,GAERphB,EAAI5d,UAAYi/B,GAAiB,GACjC,EAAK5/B,WAAW0/B,EAAQC,EAAQv7B,EAAOs7B,EAAQ,GAC/CA,EAASz/B,EACT0/B,EAASz/B,GACA0/B,IAAkBC,IAE3BthB,EAAI5d,UAAYi/B,GAAiB,GACjC,EAAK5/B,WAAW0/B,EAAQC,EAAQ1/B,EAAIy/B,EAAQ,GAC5CA,EAASz/B,EACT0/B,EAASz/B,GAGX0/B,EAAgBC,IAII,OAAlBD,IACFrhB,EAAI5d,UAAYi/B,EAChB/0C,KAAKmV,WAAW0/B,EAAQC,EAAQv7B,EAAOs7B,EAAQ,IAGjDnhB,EAAIrc,WAGE,EAAA49B,UAAAA,gBAAR,SAAwBX,EAAkBC,GAA1C,IACEv0C,EAAAA,KAAAA,KAAKq0C,aAAaC,EAAUC,EAASv0C,KAAK8yC,yBAA0B,SAAC58B,EAAMd,EAAGC,GAC5E,IAAIa,EAAKnR,gBAGT,EAAK0R,WAAWP,EAAMd,EAAGC,GACrBa,EAAKrR,eAAe,CAGtB,GAFA,EAAKiO,KAAKkE,OAENd,EAAKvR,YACP,GAAIuR,EAAKzQ,cACP,EAAKqN,KAAKgD,UAAY,EAAKzE,QAAQ0E,WAAWlM,SACzC,GAAIqM,EAAK7Q,UACd,EAAKyN,KAAKgD,UAAY,OAAO,EAAA9R,cAAcO,WAAW2R,EAAKtQ,cAAcqR,KAAK,KAAI,QAC7E,CACL,IAAIlU,EAAKmT,EAAKtQ,aACV,EAAK4L,gBAAgB9K,QAAQmQ,4BAA8BX,EAAKtR,UAAY7B,EAAK,IACnFA,GAAM,GAER,EAAK+P,KAAKgD,UAAY,EAAKzE,QAAQ6F,KAAKnU,GAAI8G,SAG9C,GAAIqM,EAAK1Q,cACP,EAAKsN,KAAKgD,UAAY,EAAKzE,QAAQ8F,WAAWtN,SACzC,GAAIqM,EAAK9Q,UACd,EAAK0N,KAAKgD,UAAY,OAAO,EAAA9R,cAAcO,WAAW2R,EAAKvQ,cAAcsR,KAAK,KAAI,QAC7E,CACL,IAAInU,EAAKoT,EAAKvQ,aACV,EAAK6L,gBAAgB9K,QAAQmQ,4BAA8BX,EAAKtR,UAAY9B,EAAK,IACnFA,GAAM,GAER,EAAKgQ,KAAKgD,UAAY,EAAKzE,QAAQ6F,KAAKpU,GAAI+G,IAIhD,EAAK0L,uBAAuBH,EAAGC,EAAGa,EAAK1S,YACvC,EAAKsP,KAAKuE,cAKT,EAAA9D,UAAAA,cAAP,SAAqB+gC,EAAkBC,GAEJ,IAA7Bv0C,KAAKuwB,OAAO2kB,MAAM75C,SAIlB2E,KAAK6S,YACP7S,KAAK6S,WAAWsiC,aAGlBn1C,KAAKgW,YAAY,EAAGs+B,EAAUt0C,KAAKuR,eAAegI,KAAMg7B,EAAUD,EAAW,GAC7Et0C,KAAK40C,gBAAgBN,EAAUC,GAC/Bv0C,KAAKi1C,gBAAgBX,EAAUC,KAG1B,EAAAphC,UAAAA,iBAAP,WACEnT,KAAK+T,iBAAiB/T,KAAKwR,gBAAgB9K,QAAQssB,oBAM7C,EAAA2hB,UAAAA,eAAR,SAAuBz+B,GAGrB,GAAwB,IAApBA,EAAK1S,WACP,OAAO,EAIT,GAAI0S,EAAKvS,UAAY,IACnB,OAAO,EAGT,IAAMqO,EAAQkE,EAAKzS,WAGnB,GAAIzD,KAAKk0C,uBAAuBv0C,eAAeqS,GAC7C,OAAOhS,KAAKk0C,uBAAuBliC,GAIrChS,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAKqD,KAAOnW,KAAKi0C,eAKtB,IAAMmB,EAAWhrC,KAAKqkC,MAAMzuC,KAAK8S,KAAKuiC,YAAYrjC,GAAO6C,OAAS7U,KAAKg0C,gBAOvE,OAJAh0C,KAAK8S,KAAKuE,UAGVrX,KAAKk0C,uBAAuBliC,GAASojC,EAC9BA,GAiBX,EAxSE,CARmC,EAAAz6B,iBAAxB,EAAAq4B,4BClBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,eAAA,EAAA,IAGE,EAAA,WAAA,SACEhzC,IAAAA,KAAKk1C,MAAQ,GAuBjB,OApBS,EAAA5gC,UAAAA,OAAP,SAAcO,EAAeE,GAC3B,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAOO,IAAK,CAC1BpV,KAAKk1C,MAAM75C,QAAU+Z,GACvBpV,KAAKk1C,MAAM/0C,KAAK,IAElB,IAAK,IAAIkV,EAAIrV,KAAKk1C,MAAM9/B,GAAG/Z,OAAQga,EAAIN,EAAQM,IAC7CrV,KAAKk1C,MAAM9/B,GAAGjV,UAAKO,GAErBV,KAAKk1C,MAAM9/B,GAAG/Z,OAAS0Z,EAEzB/U,KAAKk1C,MAAM75C,OAASwZ,GAGf,EAAAtN,UAAAA,MAAP,WACE,IAAK,IAAI6N,EAAI,EAAGA,EAAIpV,KAAKk1C,MAAM75C,OAAQ+Z,IACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIrV,KAAKk1C,MAAM9/B,GAAG/Z,OAAQga,IACxCrV,KAAKk1C,MAAM9/B,GAAGC,QAAK3U,GAI3B,EAxBE,GAHW,EAAAyzC,sBCAb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,IAEA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EAOMmB,EAAAA,IAAAA,EAAoB,CACxBzrC,IAAK,mBACLZ,KAAM,GAuBR,SAAgBssC,EAAiBC,GAU/B,OAAOA,EAAMh6C,MAAQ,GAAKg6C,EAAMzyC,IAAM,GAAKyyC,EAAM1yC,IAAM,GAAK0yC,EAAMvjC,KAAO,EAAI,IAAMujC,EAAMtjC,IAAM,EAAI,IAAMsjC,EAAMrjC,OAAS,EAAI,GAV9H,EAaA,iBAAA,EAAA,IA2BE,EAAA,SAAA,GAAA,SAAYE,EAAAA,EAA4BojC,GAAxC,IACE,EAAA,EAAO,KAAA,OAAA,KAD+B,EAAAA,QAXhC,EAAA,EAAAC,kBAA4B,EAG5B,EAAAC,uBAA6C,GAG7C,EAAAC,qBAAsC,KAGtC,EAAAC,QAA8B,KAIpC,EAAKC,aAAezjC,EAASC,cAAc,UAC3C,EAAKwjC,aAAajhC,MAvEA,KAwElB,EAAKihC,aAAa/gC,OAvEC,KA2EnB,EAAKghC,UAAY,EAAAhjC,aAAa,EAAK+iC,aAAa9iC,WAAW,KAAM,CAACC,OAAO,KAEzE,IAAM+iC,EAAY3jC,EAASC,cAAc,UACzC0jC,EAAUnhC,MAAQ,EAAK4gC,QAAQhhC,gBAC/BuhC,EAAUjhC,OAAS,EAAK0gC,QAAQ/gC,iBAChC,EAAKuhC,QAAU,EAAAljC,aAAaijC,EAAUhjC,WAAW,KAAM,CAACC,MAAO,EAAKwiC,QAAQziB,qBAE5E,EAAK+C,OAAS3rB,KAAKqkC,MAnFD,KAmFuB,EAAKgH,QAAQhhC,iBACtD,EAAKyhC,QAAU9rC,KAAKqkC,MAnFD,KAmFwB,EAAKgH,QAAQ/gC,kBACxD,IAAMyhC,EAAW,EAAKpgB,OAAS,EAAKmgB,eACpC,EAAKE,UAAY,IAAI,EAAAC,OAAOF,GAC5B,EAAKC,UAAUE,SAASH,KAuO5B,OArRsC,EAoD7B,EAAA,GAAA,EAAA/1C,UAAAA,QAAP,WACoC,OAA9BJ,KAAK41C,uBACPh4C,OAAO24C,aAAav2C,KAAK41C,sBACzB51C,KAAK41C,qBAAuB,OAIzB,EAAAT,UAAAA,WAAP,WACEn1C,KAAK01C,kBAAoB,GAGpB,EAAA5+B,UAAAA,KAAP,SACE4c,EACA8hB,EACApgC,EACAC,GAGA,GAAmB,KAAfmgC,EAAMh6C,KACR,OAAO,EAIT,IAAKwE,KAAKw2C,UAAUhB,GAClB,OAAO,EAGT,IAAMiB,EAAWlB,EAAiBC,GAC5BkB,EAAa12C,KAAKo2C,UAAUx3C,IAAI63C,GACtC,GAAIC,MAEF,EAAA,OADA12C,KAAK22C,eAAejjB,EAAKgjB,EAAYthC,EAAGC,IACjC,EAET,GAAIrV,KAAK01C,kBAhHkB,IAgH0B,CACnD,IAAI/zC,EAEFA,EADE3B,KAAKo2C,UAAUzuC,KAAO3H,KAAKo2C,UAAUD,SAC/Bn2C,KAAKo2C,UAAUzuC,KAGf3H,KAAKo2C,UAAUQ,OAAQj1C,MAEjC,IAAM,EAAa3B,KAAK62C,aAAarB,EAAO7zC,GAG5C,OAFA3B,KAAKo2C,UAAUj7B,IAAIs7B,EAAU,GAC7Bz2C,KAAK22C,eAAejjB,EAAK,EAAYte,EAAGC,IACjC,EAET,OAAO,GAGD,EAAAmhC,UAAAA,UAAR,SAAkBhB,GAQhB,OAAOA,EAAMh6C,KAAO,KAGd,EAAAs7C,UAAAA,eAAR,SAAuBn1C,GACrB,OAAQA,EAAQ3B,KAAK+1B,OAAU/1B,KAAKy1C,QAAQhhC,iBAGtC,EAAAsiC,UAAAA,eAAR,SAAuBp1C,GACrB,OAAOyI,KAAKqkC,MAAM9sC,EAAQ3B,KAAK+1B,QAAU/1B,KAAKy1C,QAAQ/gC,kBAGhD,EAAAiiC,UAAAA,eAAR,SACEjjB,EACAgjB,EACAthC,EACAC,GAGA,IAAIqhC,EAAW3wC,QAAf,CAGA,IAAMixC,EAASh3C,KAAK82C,eAAeJ,EAAW/0C,OACxCs1C,EAASj3C,KAAK+2C,eAAeL,EAAW/0C,OAC9C+xB,EAAIwjB,UACFR,EAAWS,SAAWn3C,KAAK61C,QAAW71C,KAAK81C,aAC3CkB,EACAC,EACAj3C,KAAKy1C,QAAQhhC,gBACbzU,KAAKy1C,QAAQ/gC,iBACbU,EACAC,EACArV,KAAKy1C,QAAQhhC,gBACbzU,KAAKy1C,QAAQ/gC,oBAIT,EAAA0iC,UAAAA,uBAAR,SAA+BlnB,GAC7B,OAAIA,EAAMlwB,KAAKy1C,QAAQxjB,OAAO/a,KAAK7b,OAC1B2E,KAAKy1C,QAAQxjB,OAAO/a,KAAKgZ,GAE3B,EAAAqD,oBAAoBrD,IAGrB,EAAAmnB,UAAAA,oBAAR,SAA4B7B,GAC1B,OAAIx1C,KAAKy1C,QAAQziB,kBAIRsiB,EAELE,EAAMzyC,KAAO,EAAA6F,uBACR5I,KAAKy1C,QAAQxjB,OAAO9a,WAEzBq+B,EAAMzyC,GAAK,IACN/C,KAAKo3C,uBAAuB5B,EAAMzyC,IAEpC/C,KAAKy1C,QAAQxjB,OAAOlc,YAGrB,EAAAuhC,UAAAA,oBAAR,SAA4B9B,GAC1B,OAAIA,EAAM1yC,KAAO,EAAA8F,uBACR,EAAAe,MAAMe,OAAO1K,KAAKy1C,QAAQxjB,OAAOlc,YAEtCy/B,EAAM1yC,GAAK,IAEN9C,KAAKo3C,uBAAuB5B,EAAM1yC,IAEpC9C,KAAKy1C,QAAQxjB,OAAO9a,YAKrB,EAAA0/B,UAAAA,aAAR,SAAqBrB,EAAyB7zC,GAC5C3B,KAAK01C,oBAEL11C,KAAKi2C,QAAQj/B,OAGb,IAAMw2B,EAAkBxtC,KAAKq3C,oBAAoB7B,GAGjDx1C,KAAKi2C,QAAQtiB,yBAA2B,OACxC3zB,KAAKi2C,QAAQngC,UAAY03B,EAAgB3jC,IACzC7J,KAAKi2C,QAAQ3gC,SAAS,EAAG,EAAGtV,KAAKy1C,QAAQhhC,gBAAiBzU,KAAKy1C,QAAQ/gC,kBACvE1U,KAAKi2C,QAAQtiB,yBAA2B,cAGxC,IAAMja,EAAa87B,EAAMvjC,KAAOjS,KAAKy1C,QAAQh8B,eAAiBzZ,KAAKy1C,QAAQ/7B,WACrE69B,EAAY/B,EAAMrjC,OAAS,SAAW,GAC5CnS,KAAKi2C,QAAQ9/B,KACRohC,EAAS,IAAI79B,EAAU,IAAI1Z,KAAKy1C,QAAQ97B,SAAW3Z,KAAKy1C,QAAQjgC,iBAAgB,MAAMxV,KAAKy1C,QAAQ77B,WACxG5Z,KAAKi2C,QAAQ5/B,aAAe,SAE5BrW,KAAKi2C,QAAQngC,UAAY9V,KAAKs3C,oBAAoB9B,GAAO3rC,IAGrD2rC,EAAMtjC,MACRlS,KAAKi2C,QAAQ7+B,YAAc,EAAAvO,aAG7B7I,KAAKi2C,QAAQz/B,SAASg/B,EAAMxjC,MAAO,EAAGhS,KAAKy1C,QAAQ/gC,iBAAmB,GACtE1U,KAAKi2C,QAAQ5+B,UAIb,IAAMmgC,EAAYx3C,KAAKi2C,QAAQxgB,aAC7B,EAAG,EAAGz1B,KAAKy1C,QAAQhhC,gBAAiBzU,KAAKy1C,QAAQ/gC,kBAE/C3O,GAAU,EACT/F,KAAKy1C,QAAQziB,oBAChBjtB,EAiFN,SAAoByxC,EAAsB7tC,GAKxC,IAJA,IAAI5D,GAAU,EACRlH,EAAI8K,EAAMV,OAAS,GACnBO,EAAIG,EAAMV,OAAS,GAAK,IACxBQ,EAAIE,EAAMV,OAAS,EAAI,IACpBwuC,EAAS,EAAGA,EAASD,EAAUvwC,KAAK5L,OAAQo8C,GAAU,EACzDD,EAAUvwC,KAAKwwC,KAAY54C,GAC3B24C,EAAUvwC,KAAKwwC,EAAS,KAAOjuC,GAC/BguC,EAAUvwC,KAAKwwC,EAAS,KAAOhuC,EACjC+tC,EAAUvwC,KAAKwwC,EAAS,GAAK,EAE7B1xC,GAAU,EAGd,OAAOA,EAdT,CAjF2ByxC,EAAWhK,IAIlC,IAAMp4B,EAAIpV,KAAK82C,eAAen1C,GACxB0T,EAAIrV,KAAK+2C,eAAep1C,GAE9B3B,KAAK+1C,UAAU2B,aAAaF,EAAWpiC,EAAGC,GAG1C,IAAMqhC,EAAa,CACjB/0C,MAAK,EACLoE,QAAO,EACPoxC,UAAU,GAIZ,OAFAn3C,KAAK23C,kBAAkBjB,GAEhBA,GAGD,EAAAiB,UAAAA,kBAAR,SAA0BjB,GAA1B,IAKQ,EAAA,OAAA,sBAAuB94C,SAAW,EAAA0O,WAAa,EAAAC,WAKrDvM,KAAK21C,uBAAuBx1C,KAAKu2C,GAGC,OAA9B12C,KAAK41C,uBAIT51C,KAAK41C,qBAAuBh4C,OAAOkuC,WAAW,WAAM,OAAK8L,EAAAA,mBArR3B,QAwRxB,EAAAA,UAAAA,gBAAR,WACQC,IAAAA,EAAAA,KAAAA,EAAuB73C,KAAK21C,uBAClC31C,KAAK21C,uBAAyB,GAC9B/3C,OAAOk6C,kBAAkB93C,KAAK81C,cAAcj6C,KAAK,SAAAk8C,GAE/C,EAAKlC,QAAUkC,EAIf,IAAK,IAAIp6C,EAAI,EAAGA,EAAIk6C,EAAqBx8C,OAAQsC,IACjCk6C,EAAqBl6C,GAG7Bw5C,UAAW,IAGrBn3C,KAAK41C,qBAAuB,MAEhC,EA1PE,CA3BoC,EAAAoC,eAAzB,EAAArlB,iBAyRb,EAAA,IACE,EAAA,SAAA,GAAA,SAAYtgB,EAAAA,EAAoBmgB,UAC9B,EAAO,KAAA,OAAA,KAWX,OAbmC,EAK1B,EAAA,GAAA,EAAA1b,UAAAA,KAAP,SACE4c,EACA8hB,EACApgC,EACAC,GAEA,OAAO,GAEX,EAZE,CADiC,EAAA2iC,eAAtB,EAAAC,0BC3Ub,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,mBAAA,EAAA,IACU,EAAA,WAAA,SAAA,IAAA,KAAAC,YAAsB,EA8ChC,OA5CS,EAAA93C,UAAAA,QAAP,aAMO,EAAAiU,UAAAA,OAAP,WACOrU,KAAKk4C,aACRl4C,KAAKm4C,YACLn4C,KAAKk4C,YAAa,IAQZ,EAAAC,UAAAA,UAAV,aASO,EAAAhD,UAAAA,WAAP,aAkBF,EA9CU,GADY,EAAA6C,0BCDtB,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,wBAAA,EAAA,IACU,EAAA,WAAA,SAAA,IAAA,KAAAI,OAAoF,GACpF,KAAAC,MAAmF,GA4B7F,OA1BS,EAAA9wC,UAAAA,MAAP,WACEvH,KAAKo4C,OAAS,GACdp4C,KAAKq4C,MAAQ,IAGR,EAAAC,UAAAA,OAAP,SAAcv1C,EAAYD,EAAY9D,GAC/BgB,KAAKq4C,MAAMt1C,KACd/C,KAAKq4C,MAAMt1C,GAAM,IAEnB/C,KAAKq4C,MAAMt1C,GAAKD,GAAM9D,GAGjB,EAAAu5C,UAAAA,OAAP,SAAcx1C,EAAYD,GACxB,OAAO9C,KAAKq4C,MAAMt1C,GAAM/C,KAAKq4C,MAAMt1C,GAAKD,QAAMpC,GAGzC,EAAA+Z,UAAAA,SAAP,SAAgB1X,EAAYD,EAAY9D,GACjCgB,KAAKo4C,OAAOr1C,KACf/C,KAAKo4C,OAAOr1C,GAAM,IAEpB/C,KAAKo4C,OAAOr1C,GAAKD,GAAM9D,GAGlB,EAAAgb,UAAAA,SAAP,SAAgBjX,EAAYD,GAC1B,OAAO9C,KAAKo4C,OAAOr1C,GAAM/C,KAAKo4C,OAAOr1C,GAAKD,QAAMpC,GAEpD,EA7BU,GADG,EAAAqzB,+BCKb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,YAAA,EAAA,IAOE,EAAA,WAAA,SAAmBoiB,EAAAA,GAAA,KAAAA,SANX,EAAA,KAAAqC,KAA8C,GAC9C,KAAAC,MAAmC,KACnC,KAAAC,MAAmC,KACnC,KAAAC,UAAkC,GACnC,KAAAhxC,KAAe,EAsHxB,OAlHU,EAAAixC,UAAAA,YAAR,SAAoBpyC,GAClB,IAAMqyC,EAAOryC,EAAKqyC,KACZhJ,EAAOrpC,EAAKqpC,KACdrpC,IAASxG,KAAKy4C,QAChBz4C,KAAKy4C,MAAQ5I,GAEXrpC,IAASxG,KAAK04C,QAChB14C,KAAK04C,MAAQG,GAEF,OAATA,IACFA,EAAKhJ,KAAOA,GAED,OAATA,IACFA,EAAKgJ,KAAOA,IAIR,EAAAC,UAAAA,YAAR,SAAoBtyC,GAClB,IAAMuyC,EAAO/4C,KAAK04C,MACL,OAATK,IACFA,EAAKlJ,KAAOrpC,GAEdA,EAAKqyC,KAAOE,EACZvyC,EAAKqpC,KAAO,KACZ7vC,KAAK04C,MAAQlyC,EACM,OAAfxG,KAAKy4C,QACPz4C,KAAKy4C,MAAQjyC,IAWV,EAAA8vC,UAAAA,SAAP,SAAgB0C,GAEd,IADA,IAAMC,EAAWj5C,KAAK24C,UACbh7C,EAAI,EAAGA,EAAIq7C,EAAOr7C,IACzBs7C,EAAS94C,KAAK,CACZ04C,KAAM,KACNhJ,KAAM,KACNvwC,IAAK,KACLN,MAAO,QAKN,EAAAJ,UAAAA,IAAP,SAAWU,GAGT,IAAMkH,EAAOxG,KAAKw4C,KAAKl5C,GACvB,YAAaoB,IAAT8F,GACFxG,KAAK44C,YAAYpyC,GACjBxG,KAAK84C,YAAYtyC,GACVA,EAAKxH,OAEP,MAMF,EAAAk6C,UAAAA,UAAP,SAAiB55C,GACf,IAAMkH,EAAOxG,KAAKw4C,KAAKl5C,GACvB,YAAaoB,IAAT8F,EACKA,EAAKxH,MAEP,MAGF,EAAA43C,UAAAA,KAAP,WACE,IAAMuC,EAAOn5C,KAAKy4C,MAClB,OAAgB,OAATU,EAAgB,KAAOA,EAAKn6C,OAG9B,EAAAmc,UAAAA,IAAP,SAAW7b,EAAaN,GAEtB,IAAIwH,EAAOxG,KAAKw4C,KAAKl5C,GACrB,QAAaoB,IAAT8F,EAEFA,EAAOxG,KAAKw4C,KAAKl5C,GACjBU,KAAK44C,YAAYpyC,GACjBA,EAAKxH,MAAQA,OACR,GAAIgB,KAAK2H,MAAQ3H,KAAKm2C,SAE3B3vC,EAAOxG,KAAKy4C,MACZz4C,KAAK44C,YAAYpyC,UACVxG,KAAKw4C,KAAKhyC,EAAKlH,KACtBkH,EAAKlH,IAAMA,EACXkH,EAAKxH,MAAQA,EACbgB,KAAKw4C,KAAKl5C,GAAOkH,MACZ,CAEL,IAAMyyC,EAAWj5C,KAAK24C,UAClBM,EAAS59C,OAAS,IAEpBmL,EAAOyyC,EAASzqB,OACXlvB,IAAMA,EACXkH,EAAKxH,MAAQA,GAEbwH,EAAO,CACLqyC,KAAM,KACNhJ,KAAM,KACNvwC,IAAG,EACHN,MAAK,GAGTgB,KAAKw4C,KAAKl5C,GAAOkH,EACjBxG,KAAK2H,OAEP3H,KAAK84C,YAAYtyC,IAErB,EApHE,GAPW,EAAA6vC,mBCNb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,0BAAA,EAAA,IAWA,EAGE,SAAA,GAAA,SACExC,EAAAA,EACA1iC,EACA8gB,EACAD,EACA+hB,EACAtZ,GANF,IAQE,EAAA,EAAMoZ,KAAAA,KAAAA,EAAW,YAAa1iC,GAAQ,EAAM8gB,EAAQD,EAAY+hB,EAAetZ,IAAe,YAC9F,EAAK2e,gBAiGT,OA7G0C,EAehC,EAAA,GAAA,EAAAA,UAAAA,YAAR,WACEp5C,KAAKuwB,OAAS,CACZrpB,WAAOxG,EACPyG,SAAKzG,EACLiT,sBAAkBjT,EAClBgrB,WAAOhrB,IAIJ,EAAA4T,UAAAA,OAAP,SAAcpC,GACZ,EAAMoC,UAAAA,OAAM,KAACpC,KAAAA,GAEblS,KAAKo5C,eAGA,EAAAvrB,UAAAA,MAAP,WACM7tB,KAAKuwB,OAAOrpB,OAASlH,KAAKuwB,OAAOppB,MACnCnH,KAAKo5C,cACLp5C,KAAKkT,cAIF,EAAAQ,UAAAA,mBAAP,SAA0BxM,EAAqCC,EAAmCwM,GAEhG,GAAK3T,KAAKq5C,gBAAgBnyC,EAAOC,EAAKwM,EAAkB3T,KAAKuR,eAAemP,OAAOgL,OAQnF,GAHA1rB,KAAKkT,YAGAhM,GAAUC,EAAf,CAMA,IAAMmyC,EAAmBpyC,EAAM,GAAKlH,KAAKuR,eAAemP,OAAOgL,MACzD6tB,EAAiBpyC,EAAI,GAAKnH,KAAKuR,eAAemP,OAAOgL,MACrD8tB,EAAyBpvC,KAAKqB,IAAI6tC,EAAkB,GACpDG,EAAuBrvC,KAAKwB,IAAI2tC,EAAgBv5C,KAAKuR,eAAe4C,KAAO,GAGjF,KAAIqlC,GAA0Bx5C,KAAKuR,eAAe4C,MAAQslC,EAAuB,GAAjF,CAMA,GAFAz5C,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQ2iB,qBAAqBnqB,IAEpD8J,EAAkB,CACpB,IAAMmK,EAAW5W,EAAM,GACjB2N,EAAQ1N,EAAI,GAAK2W,EACjB/I,EAAS0kC,EAAuBD,EAAyB,EAC/Dx5C,KAAKmV,WAAW2I,EAAU07B,EAAwB3kC,EAAOE,OACpD,CAEC+I,EAAWw7B,IAAqBE,EAAyBtyC,EAAM,GAAK,EAA1E,IACMwyC,EAAiBF,IAA2BC,EAAuBtyC,EAAI,GAAKnH,KAAKuR,eAAegI,KACtGvZ,KAAKmV,WAAW2I,EAAU07B,EAAwBE,EAAiB57B,EAAU,GAG7E,IAAM67B,EAAkBvvC,KAAKqB,IAAIguC,EAAuBD,EAAyB,EAAG,GAIpF,GAHAx5C,KAAKmV,WAAW,EAAGqkC,EAAyB,EAAGx5C,KAAKuR,eAAegI,KAAMogC,GAGrEH,IAA2BC,EAAsB,CAEnD,IAAM17B,EAASw7B,IAAmBE,EAAuBtyC,EAAI,GAAKnH,KAAKuR,eAAegI,KACtFvZ,KAAKmV,WAAW,EAAGskC,EAAsB17B,EAAQ,IAKrD/d,KAAKuwB,OAAOrpB,MAAQ,CAACA,EAAM,GAAIA,EAAM,IACrClH,KAAKuwB,OAAOppB,IAAM,CAACA,EAAI,GAAIA,EAAI,IAC/BnH,KAAKuwB,OAAO5c,iBAAmBA,EAC/B3T,KAAKuwB,OAAO7E,MAAQ1rB,KAAKuR,eAAemP,OAAOgL,YA5C7C1rB,KAAKo5C,eA+CD,EAAAC,UAAAA,gBAAR,SAAwBnyC,EAAqCC,EAAmCwM,EAA2B+X,GACzH,OAAQ1rB,KAAK45C,qBAAqB1yC,EAAOlH,KAAKuwB,OAAOrpB,SAClDlH,KAAK45C,qBAAqBzyC,EAAKnH,KAAKuwB,OAAOppB,MAC5CwM,IAAqB3T,KAAKuwB,OAAO5c,kBACjC+X,IAAU1rB,KAAKuwB,OAAO7E,OAGlB,EAAAkuB,UAAAA,qBAAR,SAA6BC,EAAsCC,GACjE,SAAKD,IAAWC,IAITD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,IAE3D,EA1GE,CAdF,EAW0Cn/B,IAAAA,iBAA7B,EAAAs4B,iCCXb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,uBAAA,EAAA,IAEA,EAAA,EAAA,IAAA,EAmBA,EAAA,GAAA,EAME,SAAA,GAAA,SACEY,EAAAA,EACA1iC,EACA8gB,EACAD,EACQ6gB,EACRkB,EACAtZ,EACiB1a,EACAg6B,GATnB,IAWE,EAAA,EAAMlG,KAAAA,KAAAA,EAAW,SAAU1iC,GAAQ,EAAM8gB,EAAQD,EAAY+hB,EAAetZ,IAAe,YANnF,EAAAoY,iBAGS,EAAA,EAAA9yB,aACA,EAAA,EAAAg6B,oBAXX,EAAA,EAAAC,MAAmB,IAAI,EAAA32C,SAc7B,EAAKktB,OAAS,CACZnb,EAAG,EACHC,EAAG,EACH4kC,WAAW,EACXxnC,MAAO,GACPoC,MAAO,GAET,EAAKqlC,iBAAmB,CACtB,IAAO,EAAKC,iBAAiB56C,KAAK,GAClC,MAAS,EAAK66C,mBAAmB76C,KAAK,GACtC,UAAa,EAAK86C,uBAAuB96C,KAAK,MAwLpD,OApNuC,EAiC9B,EAAA,GAAA,EAAA+U,UAAAA,OAAP,SAAcpC,GACZ,EAAMoC,UAAAA,OAAM,KAACpC,KAAAA,GAEblS,KAAKuwB,OAAS,CACZnb,EAAG,EACHC,EAAG,EACH4kC,WAAW,EACXxnC,MAAO,GACPoC,MAAO,IAIJ,EAAAgZ,UAAAA,MAAP,WACE7tB,KAAKs6C,eACDt6C,KAAKu6C,2BACPv6C,KAAKu6C,yBAAyBn6C,UAC9BJ,KAAKu6C,8BAA2B75C,EAChCV,KAAKmT,qBAIF,EAAAC,UAAAA,OAAP,WACMpT,KAAKu6C,0BACPv6C,KAAKu6C,yBAAyBC,QAEhCx6C,KAAK6yC,iBAAiBvyC,KAAK,CAAE4G,MAAOlH,KAAKuR,eAAemP,OAAOrL,EAAGlO,IAAKnH,KAAKuR,eAAemP,OAAOrL,KAG7F,EAAAhC,UAAAA,QAAP,WACMrT,KAAKu6C,yBACPv6C,KAAKu6C,yBAAyBE,SAE9Bz6C,KAAK6yC,iBAAiBvyC,KAAK,CAAE4G,MAAOlH,KAAKuR,eAAemP,OAAOrL,EAAGlO,IAAKnH,KAAKuR,eAAemP,OAAOrL,KAI/F,EAAAlC,UAAAA,iBAAP,iBAAA,EACMnT,KAAAA,KAAKwR,gBAAgB9K,QAAQoa,YAC1B9gB,KAAKu6C,2BACRv6C,KAAKu6C,yBAA2B,IAAIG,EAAwB16C,KAAK+5C,oBAAoBE,UAAW,WAC9F,EAAKU,SAAQ,OAIY,QAA7B,EAAA36C,KAAKu6C,gCAAwB,IAAEn6C,GAAAA,EAAAA,UAC/BJ,KAAKu6C,8BAA2B75C,GAIlCV,KAAK6yC,iBAAiBvyC,KAAK,CAAE4G,MAAOlH,KAAKuR,eAAemP,OAAOrL,EAAGlO,IAAKnH,KAAKuR,eAAemP,OAAOrL,KAG7F,EAAA/B,UAAAA,aAAP,WACMtT,KAAKu6C,0BACPv6C,KAAKu6C,yBAAyBK,yBAI3B,EAAArnC,UAAAA,cAAP,SAAqBC,EAAkBC,IAChCzT,KAAKu6C,0BAA4Bv6C,KAAKu6C,yBAAyBM,SAClE76C,KAAK26C,SAAQ,GAEb36C,KAAKu6C,yBAAyBK,yBAI1B,EAAAD,UAAAA,QAAR,SAAgBG,GAEd,GAAK96C,KAAK+f,aAAa8M,sBAAuB7sB,KAAK+f,aAAa2M,eAAhE,CAKA,IAAMquB,EAAU/6C,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,EACxE2lC,EAA0BD,EAAU/6C,KAAKuR,eAAemP,OAAOgL,MAGrE,GAAIsvB,EAA0B,GAAKA,GAA2Bh7C,KAAKuR,eAAe4C,KAChFnU,KAAKs6C,mBADP,CAMA,IAAMW,EAAU7wC,KAAKwB,IAAI5L,KAAKuR,eAAemP,OAAOtL,EAAGpV,KAAKuR,eAAegI,KAAO,GAElF,GADAvZ,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIm8C,GAAU1+B,SAAS4+B,EAASj7C,KAAKg6C,YAC3Ct5C,IAAvBV,KAAKg6C,MAAMn3C,QAAf,CAIA,IAAK7C,KAAK+5C,oBAAoBE,UAAW,CACvCj6C,KAAKs6C,eACLt6C,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQwhB,OAAOhpB,IAC1C,IAAMgX,EAAc7gB,KAAKwR,gBAAgB9K,QAAQma,YAYjD,OAXIA,GAA+B,UAAhBA,EACjB7gB,KAAKk6C,iBAAiBr5B,GAAao6B,EAASD,EAAyBh7C,KAAKg6C,OAE1Eh6C,KAAKk7C,kBAAkBD,EAASD,EAAyBh7C,KAAKg6C,OAEhEh6C,KAAK8S,KAAKuE,UACVrX,KAAKuwB,OAAOnb,EAAI6lC,EAChBj7C,KAAKuwB,OAAOlb,EAAI2lC,EAChBh7C,KAAKuwB,OAAO0pB,WAAY,EACxBj6C,KAAKuwB,OAAO9d,MAAQoO,OACpB7gB,KAAKuwB,OAAO1b,MAAQ7U,KAAKg6C,MAAMx2C,YAKjC,IAAIxD,KAAKu6C,0BAA6Bv6C,KAAKu6C,yBAAyBY,gBAApE,CAKA,GAAIn7C,KAAKuwB,OAAQ,CAEf,GAAIvwB,KAAKuwB,OAAOnb,IAAM6lC,GAClBj7C,KAAKuwB,OAAOlb,IAAM2lC,GAClBh7C,KAAKuwB,OAAO0pB,YAAcj6C,KAAK+5C,oBAAoBE,WACnDj6C,KAAKuwB,OAAO9d,QAAUzS,KAAKwR,gBAAgB9K,QAAQma,aACnD7gB,KAAKuwB,OAAO1b,QAAU7U,KAAKg6C,MAAMx2C,WACnC,OAEFxD,KAAKs6C,eAGPt6C,KAAK8S,KAAKkE,OACVhX,KAAKk6C,iBAAiBl6C,KAAKwR,gBAAgB9K,QAAQma,aAAe,SAASo6B,EAASD,EAAyBh7C,KAAKg6C,OAClHh6C,KAAK8S,KAAKuE,UAEVrX,KAAKuwB,OAAOnb,EAAI6lC,EAChBj7C,KAAKuwB,OAAOlb,EAAI2lC,EAChBh7C,KAAKuwB,OAAO0pB,WAAY,EACxBj6C,KAAKuwB,OAAO9d,MAAQzS,KAAKwR,gBAAgB9K,QAAQma,YACjD7gB,KAAKuwB,OAAO1b,MAAQ7U,KAAKg6C,MAAMx2C,gBAxB7BxD,KAAKs6C,sBAzCLt6C,KAAKs6C,gBAoED,EAAAA,UAAAA,aAAR,WACMt6C,KAAKuwB,SACPvwB,KAAKgW,YAAYhW,KAAKuwB,OAAOnb,EAAGpV,KAAKuwB,OAAOlb,EAAGrV,KAAKuwB,OAAO1b,MAAO,GAClE7U,KAAKuwB,OAAS,CACZnb,EAAG,EACHC,EAAG,EACH4kC,WAAW,EACXxnC,MAAO,GACPoC,MAAO,KAKL,EAAAslC,UAAAA,iBAAR,SAAyB/kC,EAAWC,EAAWa,GAC7ClW,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQwhB,OAAOhpB,IAC1C7J,KAAKyV,oBAAoBL,EAAGC,EAAGrV,KAAKwR,gBAAgB9K,QAAQ00C,aAC5Dp7C,KAAK8S,KAAKuE,WAGJ,EAAA+iC,UAAAA,mBAAR,SAA2BhlC,EAAWC,EAAWa,GAC/ClW,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQwhB,OAAOhpB,IAC1C7J,KAAKmV,WAAWC,EAAGC,EAAGa,EAAK1S,WAAY,GACvCxD,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQyhB,aAAajpB,IAChD7J,KAAKiW,mBAAmBC,EAAMd,EAAGC,GACjCrV,KAAK8S,KAAKuE,WAGJ,EAAAgjC,UAAAA,uBAAR,SAA+BjlC,EAAWC,EAAWa,GACnDlW,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQwhB,OAAOhpB,IAC1C7J,KAAKuV,uBAAuBH,EAAGC,GAC/BrV,KAAK8S,KAAKuE,WAGJ,EAAA6jC,UAAAA,kBAAR,SAA0B9lC,EAAWC,EAAWa,GAC9ClW,KAAK8S,KAAKkE,OACVhX,KAAK8S,KAAK2E,YAAczX,KAAKqR,QAAQwhB,OAAOhpB,IAC5C7J,KAAK0V,kBAAkBN,EAAGC,EAAGa,EAAK1S,WAAY,GAC9CxD,KAAK8S,KAAKuE,WAEd,EA9ME,CANqC,EAAAsD,iBAA1B,EAAAw4B,kBAsNb,EAAA,IAcE,EAAA,WAAA,SACE8G,EAAAA,EACQthB,GAAA,KAAAA,gBAER34B,EAAAA,KAAKm7C,iBAAkB,EACnBlB,GACFj6C,KAAKq7C,mBAgHX,OA5GE,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAiC,QAASr7C,KAAKs7C,oBAAsBt7C,KAAKu7C,6BAEnE,EAAA,cAAA,IAAA,EAAAn7C,UAAAA,QAAP,WACMJ,KAAKu7C,iBACP39C,OAAO49C,cAAcx7C,KAAKu7C,gBAC1Bv7C,KAAKu7C,oBAAiB76C,GAEpBV,KAAKs7C,qBACP19C,OAAO24C,aAAav2C,KAAKs7C,oBACzBt7C,KAAKs7C,wBAAqB56C,GAExBV,KAAK44B,kBACPh7B,OAAOi7B,qBAAqB74B,KAAK44B,iBACjC54B,KAAK44B,qBAAkBl4B,IAIpB,EAAAk6C,UAAAA,sBAAP,WACM56C,IAAAA,EAAAA,KAAAA,KAAK66C,WAIT76C,KAAKy7C,wBAA0BC,KAAKC,MAEpC37C,KAAKm7C,iBAAkB,EAClBn7C,KAAK44B,kBACR54B,KAAK44B,gBAAkBh7B,OAAOw7B,sBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkBl4B,OAKrB,EAAA26C,UAAAA,iBAAR,SAAyBO,GAAzB,IAAyB,EAAA,UAAA,IAAAA,IAjRJ,EAAA,KAmRf57C,KAAKu7C,gBACP39C,OAAO49C,cAAcx7C,KAAKu7C,gBAO5Bv7C,KAAKs7C,mBAAqB19C,OAAOkuC,WAAW,WAG1C,GAAI,EAAK2P,wBAAyB,CAChC,IAAMI,EA/RS,KA+RgBH,KAAKC,MAAQ,EAAKF,yBAEjD,GADA,EAAKA,6BAA0B/6C,EAC3Bm7C,EAAO,EAET,YADA,EAAKR,iBAAiBQ,GAM1B,EAAKV,iBAAkB,EACvB,EAAKviB,gBAAkBh7B,OAAOw7B,sBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkBl4B,IAIzB,EAAK66C,eAAiB39C,OAAOk+C,YAAY,WAEvC,GAAI,EAAKL,wBAAyB,CAGhC,IAAMI,EApTO,KAoTkBH,KAAKC,MAAQ,EAAKF,yBAGjD,OAFA,EAAKA,6BAA0B/6C,OAC/B,EAAK26C,iBAAiBQ,GAKxB,EAAKV,iBAAmB,EAAKA,gBAC7B,EAAKviB,gBAAkBh7B,OAAOw7B,sBAAsB,WAClD,EAAKT,kBACL,EAAKC,qBAAkBl4B,KA9TV,MAiUhBk7C,IAGE,EAAApB,UAAAA,MAAP,WACEx6C,KAAKm7C,iBAAkB,EACnBn7C,KAAKu7C,iBACP39C,OAAO49C,cAAcx7C,KAAKu7C,gBAC1Bv7C,KAAKu7C,oBAAiB76C,GAEpBV,KAAKs7C,qBACP19C,OAAO24C,aAAav2C,KAAKs7C,oBACzBt7C,KAAKs7C,wBAAqB56C,GAExBV,KAAK44B,kBACPh7B,OAAOi7B,qBAAqB74B,KAAK44B,iBACjC54B,KAAK44B,qBAAkBl4B,IAIpB,EAAA+5C,UAAAA,OAAP,WAEEz6C,KAAKw6C,QAELx6C,KAAKy7C,6BAA0B/6C,EAC/BV,KAAKq7C,mBACLr7C,KAAK46C,yBAET,EAtHE,aCzPF,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAIA,EAAA,IAAA,EAGE,SAAA,GAAA,SACE/G,EAAAA,EACA1iC,EACA8gB,EACAD,EACA0O,EACAI,EACAiT,EACAtZ,GARF,IAUE,EAAA,EAAMoZ,KAAAA,KAAAA,EAAW,OAAQ1iC,GAAQ,EAAM8gB,EAAQD,EAAY+hB,EAAetZ,IAAe,YACzFiG,EAAUqb,oBAAoB,SAAAh/C,GAAK,OAAKi/C,EAAAA,qBAAqBj/C,KAC7D2jC,EAAUub,oBAAoB,SAAAl/C,GAAK,OAAKm/C,EAAAA,qBAAqBn/C,KAE7D+jC,EAAWib,oBAAoB,SAAAh/C,GAAK,OAAKi/C,EAAAA,qBAAqBj/C,KAC9D+jC,EAAWmb,oBAAoB,SAAAl/C,GAAK,OAAKm/C,EAAAA,qBAAqBn/C,OAoDlE,OAtEqC,EAqB5B,EAAA,GAAA,EAAAuX,UAAAA,OAAP,SAAcpC,GACZ,EAAMoC,UAAAA,OAAM,KAACpC,KAAAA,GAEblS,KAAKuwB,YAAS7vB,GAGT,EAAAmtB,UAAAA,MAAP,WACE7tB,KAAKm8C,qBAGC,EAAAA,UAAAA,kBAAR,WACE,GAAIn8C,KAAKuwB,OAAQ,CACfvwB,KAAKgW,YAAYhW,KAAKuwB,OAAO9X,GAAIzY,KAAKuwB,OAAO5X,GAAI3Y,KAAKuwB,OAAOhX,KAAOvZ,KAAKuwB,OAAO9X,GAAI,GACpF,IAAM2jC,EAAiBp8C,KAAKuwB,OAAO3X,GAAK5Y,KAAKuwB,OAAO5X,GAAK,EACrDyjC,EAAiB,GACnBp8C,KAAKgW,YAAY,EAAGhW,KAAKuwB,OAAO5X,GAAK,EAAG3Y,KAAKuwB,OAAOhX,KAAM6iC,GAE5Dp8C,KAAKgW,YAAY,EAAGhW,KAAKuwB,OAAO3X,GAAI5Y,KAAKuwB,OAAO7X,GAAI,GACpD1Y,KAAKuwB,YAAS7vB,IAIV,EAAAs7C,UAAAA,qBAAR,SAA6Bj/C,GAU3B,GATIA,EAAE+F,KAAO,EAAA8F,uBACX5I,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQ0E,WAAWlM,IACrC9M,EAAE+F,IAAM,EAAAu5C,WAAWt/C,EAAE+F,IAE9B9C,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQ6F,KAAKna,EAAE+F,IAAI+G,IAE9C7J,KAAK8S,KAAKgD,UAAY9V,KAAKqR,QAAQ8F,WAAWtN,IAG5C9M,EAAE4b,KAAO5b,EAAE6b,GAEb5Y,KAAKuV,uBAAuBxY,EAAE0b,GAAI1b,EAAE4b,GAAI5b,EAAE2b,GAAK3b,EAAE0b,QAC5C,CAELzY,KAAKuV,uBAAuBxY,EAAE0b,GAAI1b,EAAE4b,GAAI5b,EAAEwc,KAAOxc,EAAE0b,IACnD,IAAK,IAAIpD,EAAItY,EAAE4b,GAAK,EAAGtD,EAAItY,EAAE6b,GAAIvD,IAC/BrV,KAAKuV,uBAAuB,EAAGF,EAAGtY,EAAEwc,MAEtCvZ,KAAKuV,uBAAuB,EAAGxY,EAAE6b,GAAI7b,EAAE2b,IAEzC1Y,KAAKuwB,OAASxzB,GAGR,EAAAm/C,UAAAA,qBAAR,SAA6Bn/C,GAC3BiD,KAAKm8C,qBAET,EAnEE,CAHmC,EAAAxhC,iBAAxB,EAAAu4B,4BCLb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,UAAA,EAAA,eAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAYA,EAAA,GAAA,EAwBE,WAAA,SACqC3hC,EAAAA,EACLyO,EACImB,GAFC,KAAA5P,eACL,EAAA,KAAAyO,YACI,EAAA,KAAAmB,gBAnB1B,EAAA,KAAAm7B,cAA0C,GAM5C,KAAAC,mBAAqB,EAGrB,KAAAP,qBAAuB,IAAI,EAAAr7C,aAE3B,KAAAu7C,qBAAuB,IAAI,EAAAv7C,aAE3B,KAAA67C,eAAiB,IAAI,EAAA77C,aAQ3BX,KAAKy8C,eAAiB,CACpBv1C,WAAOxG,EACPyG,SAAKzG,GA+RX,OA5SE,OAAW,eAAA,EAAmB,UAAA,sBAAA,KAA9B,WAA4D,OAAOV,KAAKg8C,qBAAqBxzB,mBAE7F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAmB,UAAA,sBAAA,KAA9B,WAA4D,OAAOxoB,KAAKk8C,qBAAqB1zB,mBAE7F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WAAsD,OAAOxoB,KAAKw8C,eAAeh0B,mBAiB1E,EAAA,cAAA,IAAA,EAAAse,UAAAA,YAAP,SAAmB/O,EAAsB2kB,GACvC18C,KAAK28C,SAAW5kB,EAChB/3B,KAAK2mC,kBAAoB+V,GAQpB,EAAAhT,UAAAA,YAAP,SAAmBxiC,EAAeC,GAAlC,IAEOnH,EAAAA,KAAAA,KAAK2mC,yBAKwBjmC,IAA9BV,KAAKy8C,eAAev1C,YAAmDxG,IAA5BV,KAAKy8C,eAAet1C,KACjEnH,KAAKy8C,eAAev1C,MAAQA,EAC5BlH,KAAKy8C,eAAet1C,IAAMA,IAE1BnH,KAAKy8C,eAAev1C,MAAQkD,KAAKwB,IAAI5L,KAAKy8C,eAAev1C,MAAOA,GAChElH,KAAKy8C,eAAet1C,IAAMiD,KAAKqB,IAAIzL,KAAKy8C,eAAet1C,IAAKA,IAI9DnH,KAAK2mC,kBAAkBE,SAAS3/B,EAAOC,GAGnCnH,KAAK48C,gBACPrG,aAAav2C,KAAK48C,gBAEpB58C,KAAK48C,eAA8B9Q,WAAW,WAAM,OAAK+Q,EAAAA,gBAAgBhc,EAAUic,sBAM7E,EAAAD,UAAAA,aAAR,WACE78C,KAAK48C,oBAAiBl8C,EACtB,IAAMggB,EAAS1gB,KAAKuR,eAAemP,OAEnC,QAAkChgB,IAA9BV,KAAKy8C,eAAev1C,YAAmDxG,IAA5BV,KAAKy8C,eAAet1C,IAAnE,CAMA,IAAM41C,EAAwBr8B,EAAOgL,MAAQ1rB,KAAKy8C,eAAev1C,MACjE,KAAI61C,GAAyBr8B,EAAO8I,MAAMnuB,QAA1C,CAoBA,IAfA,IAAM2hD,EAAsBt8B,EAAOgL,MAAQthB,KAAKwB,IAAI5L,KAAKy8C,eAAet1C,IAAKnH,KAAKuR,eAAe4C,MAAQ,EAYnG8oC,EAAoB7yC,KAAKsB,KA9GP,IA8GkC1L,KAAKuR,eAAegI,MACxE2jC,EAAWl9C,KAAKuR,eAAemP,OAAOw8B,UAC1C,EAAOH,EAAuBC,EAAqBC,EAAmBA,GACjEC,EAASC,WAEd,IADA,IAAMjmB,EAAwCgmB,EAASrN,OAC9ClyC,EAAI,EAAGA,EAAIqC,KAAKs8C,cAAcjhD,OAAQsC,IAC7CqC,KAAKo9C,cAAclmB,EAASW,MAAMwlB,MAAOnmB,EAASr0B,QAAS7C,KAAKs8C,cAAc3+C,IAIlFqC,KAAKy8C,eAAev1C,WAAQxG,EAC5BV,KAAKy8C,eAAet1C,SAAMzG,QAlCxBV,KAAKggB,YAAYe,MAAM,2DA+CpB,EAAAkb,UAAAA,oBAAP,SAA2BC,EAAez1B,EAA6BC,GACrE,QADqE,IAAAA,IAAA,EAAA,KAChED,EACH,MAAM,IAAInM,MAAM,2BAElB,IAAMgjD,EAAkC,CACtCliD,GAAI4E,KAAKu8C,qBACTrgB,MAAK,EACLz1B,QAAO,EACP82C,WAAY72C,EAAQ62C,WACpBC,mBAAoB92C,EAAQ82C,mBAC5BC,qBAAsB/2C,EAAQg3C,gBAC9BC,mBAAoBj3C,EAAQk3C,cAC5BC,iBAAkBn3C,EAAQm3C,iBAC1BC,SAAUp3C,EAAQo3C,UAAY,GAGhC,OADA99C,KAAK+9C,sBAAsBT,GACpBA,EAAQliD,IAST,EAAA2iD,UAAAA,sBAAR,SAA8BT,GAC5B,GAAkC,IAA9Bt9C,KAAKs8C,cAAcjhD,OAAvB,CAKA,IAAK,IAAIsC,EAAIqC,KAAKs8C,cAAcjhD,OAAS,EAAGsC,GAAK,EAAGA,IAClD,GAAI2/C,EAAQQ,UAAY99C,KAAKs8C,cAAc3+C,GAAGmgD,SAE5C,YADA99C,KAAKs8C,cAAcj8C,OAAO1C,EAAI,EAAG,EAAG2/C,GAKxCt9C,KAAKs8C,cAAcj8C,OAAO,EAAG,EAAGi9C,QAX9Bt9C,KAAKs8C,cAAcn8C,KAAKm9C,IAmBrB,EAAAnhB,UAAAA,sBAAP,SAA6BC,GAC3B,IAAK,IAAIz+B,EAAI,EAAGA,EAAIqC,KAAKs8C,cAAcjhD,OAAQsC,IAC7C,GAAIqC,KAAKs8C,cAAc3+C,GAAGvC,KAAOghC,EAE/B,OADAp8B,KAAKs8C,cAAcj8C,OAAO1C,EAAG,IACtB,EAGX,OAAO,GASD,EAAAy/C,UAAAA,cAAR,SAAsBY,EAAkB7mB,EAAcmmB,GAKpD,IALF,IAGM5iD,EAHN,EAEQujD,KAAAA,EAAM,IAAIC,OAAOZ,EAAQphB,MAAMiiB,QAASb,EAAQphB,MAAMkiB,OAAS,IAAM,KAEvEC,GAAe,IAEjB,WAAA,IAAMC,EAAM5jD,EAAoC,iBAAvB4iD,EAAQC,WAA0B,EAAID,EAAQC,YACvE,IAAKe,SAGH,EAAKt+B,YAAYe,MAAM,+CAAgDrmB,EAAO4iD,WAUhF,GAFAe,EAAclnB,EAAKv1B,QAAQ08C,EAAKD,EAAc,GAC9CJ,EAAIM,UAAYF,EAAcC,EAAIjjD,OAC9BgjD,EAAc,QAMlB,QAAA,IAAMG,EAAc,EAAKjtC,eAAemP,OAAO+9B,yBAAyBT,EAAUK,GAClF,GAAIG,EAAY,GAAK,QAKrB,QAAA,IAAMvhC,EAAO,EAAK1L,eAAemP,OAAO8I,MAAM5qB,IAAI4/C,EAAY,IAC9D,IAAKvhC,QAIL,QAAA,IAAMoQ,EAAOpQ,EAAKjB,MAAMwiC,EAAY,IAC9B17C,EAAKuqB,EAAQA,GAAQ,EAAK,SAAQ3sB,EAEpC48C,EAAQE,mBACVF,EAAQE,mBAAmBc,EAAK,SAAAI,GAE1B,EAAK9B,gBAGL8B,GACF,EAAKC,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKjtC,eAAemP,OAAOgL,MAAO4yB,EAAKhB,EAASx6C,KAInG,EAAK67C,SAASH,EAAY,GAAIA,EAAY,GAAK,EAAKjtC,eAAemP,OAAOgL,MAAO4yB,EAAKhB,EAASx6C,MA9C/D,KAAA,QAA5BpI,EAAQujD,EAAIW,KAAKznB,KA2DnB,UAAA,QAAA,EAAAwnB,UAAAA,SAAR,SAAiBvpC,EAAWC,EAAWipC,EAAahB,EAAuBx6C,GAA3E,IACE,EAAA,KAAA,GAAK9C,KAAK2mC,mBAAsB3mC,KAAK28C,SAArC,CAIA,IAAM9nC,EAAQ7U,KAAKmhB,gBAAgB09B,mBAAmBP,GAChD7lC,EAAKrD,EAAIpV,KAAKuR,eAAegI,KAC7BZ,EAAKtD,EAAIjL,KAAKqkC,MAAMr5B,EAAIpV,KAAKuR,eAAegI,MAC9Cb,GAAMD,EAAK5D,GAAS7U,KAAKuR,eAAegI,KACxCX,EAAKD,EAAKvO,KAAKqkC,OAAOh2B,EAAK5D,GAAS7U,KAAKuR,eAAegI,MACjD,IAAPb,IACFA,EAAK1Y,KAAKuR,eAAegI,KACzBX,KAGF5Y,KAAK2mC,kBAAkBn0B,IAAI,IAAIssC,EAC7BrmC,EAAK,EACLE,EAAK,EACLD,EAAK,EACLE,EAAK,EACL,SAAA7b,GACE,GAAIugD,EAAQ72C,QACV,OAAO62C,EAAQ72C,QAAQ1J,EAAGuhD,GAE5B,IAAMS,EAAYnhD,OAAOi+B,OACrBkjB,GACFA,EAAUC,OAAS,KACnBD,EAAUE,SAASC,KAAOZ,GAE1B/oB,QAAQC,KAAK,wDAGjB,WACE,EAAKwmB,qBAAqB17C,KAAK,EAAK6+C,sBAAsB1mC,EAAIE,EAAID,EAAIE,EAAI9V,IAC1E,EAAK65C,SAAUpqC,UAAUC,IAAI,yBAE/B,SAAAzV,GACE,EAAKy/C,eAAel8C,KAAK,EAAK6+C,sBAAsB1mC,EAAIE,EAAID,EAAIE,EAAI9V,IAChEw6C,EAAQG,sBAGVH,EAAQG,qBAAqB1gD,EAAGuhD,EAAK,CAAEp3C,MAAO,CAAEkO,EAAGqD,EAAIpD,EAAGsD,GAAMxR,IAAK,CAAEiO,EAAGsD,EAAIrD,EAAGuD,MAGrF,WACE,EAAKsjC,qBAAqB57C,KAAK,EAAK6+C,sBAAsB1mC,EAAIE,EAAID,EAAIE,EAAI9V,IAC1E,EAAK65C,SAAUpqC,UAAUywB,OAAO,wBAC5Bsa,EAAQK,oBACVL,EAAQK,sBAGZ,SAAA5gD,GACE,OAAIugD,EAAQO,kBACHP,EAAQO,iBAAiB9gD,EAAGuhD,QAOnC,EAAAa,UAAAA,sBAAR,SAA8B1mC,EAAYE,EAAYD,EAAYE,EAAY9V,GAC5E,MAAO,CAAE2V,GAAE,EAAEE,GAAE,EAAED,GAAE,EAAEE,GAAE,EAAEW,KAAMvZ,KAAKuR,eAAegI,KAAMzW,GAAE,IAtT5C,EAAAg6C,mBAAqB,IAN3Bjc,EAAS,EAyBjB,CAAA,EAAA//B,EAAAA,EAAAA,gBACA,EAAAO,EAAAA,EAAAA,aACA,EAAAE,EAAAA,EAAAA,kBA3BQs/B,GAwBX,GAxBW,EAAAA,UAgUb,EAAA,IACE,EAAA,SACSpoB,EACAE,EACAD,EACAE,EACAwmC,EACAC,EACA3B,EACAE,EACAC,GARA,KAAAplC,GACA,EAAA,KAAAE,GACA,EAAA,KAAAD,GACA,EAAA,KAAAE,GACA,EAAA,KAAAwmC,cACA,EAAA,KAAAC,cACA,EAAA,KAAA3B,gBACA,EAAA,KAAAE,cACA,EAAA,KAAAC,iBAVE,GAAA,EAAAiB,sBC5Ub,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,sBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAwBMQ,EAAAA,GAAAA,EAA0Bv4C,OAAOC,aAAa,KAC9Cu4C,EAA+B,IAAIrB,OAAOoB,EAAyB,KA4BzE,EAgDE,SAAA,GAAA,SACmB3C,EAAAA,EACA/J,EACgBrhC,EACFwO,EACCgmB,EACEv0B,EACDowB,GAPnC,IASE,EAAA,EAAO,KAAA,OAAA,YARU,EAAA+a,SACA,EAAA,EAAA/J,eACgB,EAAA,EAAArhC,eACF,EAAA,EAAAwO,aACC,EAAA,EAAAgmB,cACE,EAAA,EAAAv0B,gBACD,EAAA,EAAAowB,eA9C3B,EAAA,EAAA4d,kBAA4B,EAqB5B,EAAAC,UAAW,EAKX,EAAAh+B,UAAsB,IAAI,EAAApe,SAE1B,EAAAq8C,oBAA8B,EAE9B,EAAAC,uBAAyB,EAAKpjD,SAAS,IAAI,EAAAoE,cAE3C,EAAAi/C,iBAAmB,EAAKrjD,SAAS,IAAI,EAAAoE,cAErC,EAAAy/B,mBAAqB,EAAK7jC,SAAS,IAAI,EAAAoE,cAEvC,EAAAk/C,sBAAwB,EAAKtjD,SAAS,IAAI,EAAAoE,cAehD,EAAKm/C,mBAAqB,SAAAt3B,GAAS,OAAKu3B,EAAAA,aAAyBv3B,IACjE,EAAKw3B,iBAAmB,SAAAx3B,GAAS,OAAKy3B,EAAAA,WAAuBz3B,IAC7D,EAAKzI,aAAamgC,YAAY,WACxB,EAAKxjB,cACP,EAAKK,mBAGT,EAAKojB,cAAgB,EAAK5uC,eAAemP,OAAO8I,MAAM42B,OAAO,SAAAjjB,GAAU,OAAKkjB,EAAAA,QAAQljB,KACpF,EAAK5gC,SAAS,EAAKgV,eAAeob,QAAQoS,iBAAiB,SAAAhiC,GAAK,OAAKujD,EAAAA,kBAAkBvjD,MAEvF,EAAKmqC,SAEL,EAAKqZ,OAAS,IAAI,EAAAC,eAAe,EAAKjvC,gBACtC,EAAKkvC,qBAAuB,IA2yBhC,OAp3BsC,EAwCpC,EAAA,GAAA,OAAW,eAAA,EAAqB,UAAA,wBAAA,KAAhC,WAAqD,OAAOzgD,KAAK2/C,uBAAuBn3B,mBAExF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAe,UAAA,kBAAA,KAA1B,WAAqE,OAAOxoB,KAAK4/C,iBAAiBp3B,mBAElG,EAAA,cAAA,IAAA,OAAW,eAAA,EAAiB,UAAA,oBAAA,KAA5B,WAA+C,OAAOxoB,KAAKogC,mBAAmB5X,mBAE9E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAoB,UAAA,uBAAA,KAA/B,WAA+E,OAAOxoB,KAAK6/C,sBAAsBr3B,mBA8B1G,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,WACEJ,KAAK0gD,6BAGA,EAAA7yB,UAAAA,MAAP,WACE7tB,KAAK+8B,kBAOA,EAAAkK,UAAAA,QAAP,WACEjnC,KAAK+8B,iBACL/8B,KAAKy/C,UAAW,GAMX,EAAAvY,UAAAA,OAAP,WACElnC,KAAKy/C,UAAW,GAGlB,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WAA4D,OAAOz/C,KAAKugD,OAAOI,iCAC/E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WAA0D,OAAO3gD,KAAKugD,OAAOK,+BAK7E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WACE,IAAM15C,EAAQlH,KAAKugD,OAAOI,oBACpBx5C,EAAMnH,KAAKugD,OAAOK,kBACxB,SAAK15C,IAAUC,GAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,iBAMjD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WACE,IAAMD,EAAQlH,KAAKugD,OAAOI,oBACpBx5C,EAAMnH,KAAKugD,OAAOK,kBACxB,IAAK15C,IAAUC,EACb,MAAO,GAGT,IAAMuZ,EAAS1gB,KAAKuR,eAAemP,OAC7BtZ,EAAmB,GAEzB,GAAkC,IAA9BpH,KAAKygD,qBAA+C,CAEtD,GAAIv5C,EAAM,KAAOC,EAAI,GACnB,MAAO,GAGT,IAAK,IAAIxJ,EAAIuJ,EAAM,GAAIvJ,GAAKwJ,EAAI,GAAIxJ,IAAK,CACvC,IAAMkjD,EAAWngC,EAAOogC,4BAA4BnjD,GAAG,EAAMuJ,EAAM,GAAIC,EAAI,IAC3EC,EAAOjH,KAAK0gD,QAET,CAEL,IAAMnH,EAAiBxyC,EAAM,KAAOC,EAAI,GAAKA,EAAI,QAAKzG,EAItD,IAHA0G,EAAOjH,KAAKugB,EAAOogC,4BAA4B55C,EAAM,IAAI,EAAMA,EAAM,GAAIwyC,IAGhE/7C,EAAIuJ,EAAM,GAAK,EAAGvJ,GAAKwJ,EAAI,GAAK,EAAGxJ,IAAK,CAC/C,IAAMojD,EAAargC,EAAO8I,MAAM5qB,IAAIjB,GAC9BkjD,EAAWngC,EAAOogC,4BAA4BnjD,GAAG,GACnDojD,GAAcA,EAAWtlC,UAC3BrU,EAAOA,EAAO/L,OAAS,IAAMwlD,EAE7Bz5C,EAAOjH,KAAK0gD,GAKZ35C,EAAM,KAAOC,EAAI,KACb45C,EAAargC,EAAO8I,MAAM5qB,IAAIuI,EAAI,IAClC05C,EAAWngC,EAAOogC,4BAA4B35C,EAAI,IAAI,EAAM,EAAGA,EAAI,IACrE45C,GAAcA,EAAYtlC,UAC5BrU,EAAOA,EAAO/L,OAAS,IAAMwlD,EAE7Bz5C,EAAOjH,KAAK0gD,IAWlB,OAJwBz5C,EAAOrL,IAAI,SAAAkhB,GACjC,OAAOA,EAAKpiB,QAAQ0kD,EAA8B,OACjDtoC,KAAK+oB,EAAQpzB,UAAY,OAAS,mBAQhC,EAAA,cAAA,IAAA,EAAAmwB,UAAAA,eAAP,WACE/8B,KAAKugD,OAAOxjB,iBACZ/8B,KAAK0gD,4BACL1gD,KAAK84B,UACL94B,KAAKogC,mBAAmB9/B,QAQnB,EAAAw4B,UAAAA,QAAP,SAAekoB,GAAf,IAEOhhD,EAAAA,KAAAA,KAAKqtC,yBACRrtC,KAAKqtC,uBAAyBzvC,OAAOw7B,sBAAsB,WAAM,OAAKqU,EAAAA,cAKpEzN,EAAQnzB,SAAWm0C,GACChhD,KAAK8pC,cACTzuC,QAChB2E,KAAK2/C,uBAAuBr/C,KAAKN,KAAK8pC,gBASpC,EAAA2D,UAAAA,SAAR,WACEztC,KAAKqtC,4BAAyB3sC,EAC9BV,KAAK4/C,iBAAiBt/C,KAAK,CACzB4G,MAAOlH,KAAKugD,OAAOI,oBACnBx5C,IAAKnH,KAAKugD,OAAOK,kBACjBjtC,iBAAgD,IAA9B3T,KAAKygD,wBAQpB,EAAAhR,UAAAA,mBAAP,SAA0BjnB,GACxB,IAAMkQ,EAAS14B,KAAKihD,sBAAsBz4B,GACpCthB,EAAQlH,KAAKugD,OAAOI,oBACpBx5C,EAAMnH,KAAKugD,OAAOK,kBAExB,SAAK15C,GAAUC,GAAQuxB,IAIhB14B,KAAKkhD,sBAAsBxoB,EAAQxxB,EAAOC,IAGzC,EAAA+5C,UAAAA,sBAAV,SAAgCxoB,EAA0BxxB,EAAyBC,GACjF,OAAQuxB,EAAO,GAAKxxB,EAAM,IAAMwxB,EAAO,GAAKvxB,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAMuxB,EAAO,KAAOxxB,EAAM,IAAMwxB,EAAO,IAAMxxB,EAAM,IAAMwxB,EAAO,GAAKvxB,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAMuxB,EAAO,KAAOvxB,EAAI,IAAMuxB,EAAO,GAAKvxB,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAMuxB,EAAO,KAAOxxB,EAAM,IAAMwxB,EAAO,IAAMxxB,EAAM,IAOlE,EAAAwoC,UAAAA,mBAAP,SAA0BlnB,GACxB,IAAMkQ,EAAS14B,KAAKihD,sBAAsBz4B,GACtCkQ,IACF14B,KAAKmhD,cAAczoB,GAAQ,GAC3B14B,KAAKugD,OAAOvW,kBAAetpC,EAC3BV,KAAK84B,SAAQ,KAOV,EAAAkE,UAAAA,UAAP,WACEh9B,KAAKugD,OAAOa,mBAAoB,EAChCphD,KAAK84B,UACL94B,KAAKogC,mBAAmB9/B,QAGnB,EAAA28B,UAAAA,YAAP,SAAmB/1B,EAAeC,GAChCnH,KAAKugD,OAAOxjB,iBACZ71B,EAAQkD,KAAKqB,IAAIvE,EAAO,GACxBC,EAAMiD,KAAKwB,IAAIzE,EAAKnH,KAAKuR,eAAemP,OAAO8I,MAAMnuB,OAAS,GAC9D2E,KAAKugD,OAAOxW,eAAiB,CAAC,EAAG7iC,GACjClH,KAAKugD,OAAOvW,aAAe,CAAChqC,KAAKuR,eAAegI,KAAMpS,GACtDnH,KAAK84B,UACL94B,KAAKogC,mBAAmB9/B,QAOlB,EAAA+/C,UAAAA,QAAR,SAAgBljB,GACOn9B,KAAKugD,OAAOH,OAAOjjB,IAEtCn9B,KAAK84B,WAQD,EAAAmoB,UAAAA,sBAAR,SAA8Bz4B,GAC5B,IAAMkQ,EAAS14B,KAAK+lC,cAAcsb,UAAU74B,EAAOxoB,KAAK4yC,eAAgB5yC,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,MAAM,GAC5H,GAAKukB,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAM14B,KAAKuR,eAAemP,OAAOgL,MACjCgN,GAQD,EAAA4oB,UAAAA,2BAAR,SAAmC94B,GACjC,IAAIivB,EAAS,EAAA3f,2BAA2BtP,EAAOxoB,KAAK4yC,gBAAgB,GAC9D2O,EAAiBvhD,KAAK4hC,eAAemJ,WAAW71B,aACtD,OAAIuiC,GAAU,GAAKA,GAAU8J,EACpB,GAEL9J,EAAS8J,IACX9J,GAAU8J,GAGZ9J,EAASrtC,KAAKwB,IAAIxB,KAAKqB,IAAIgsC,GA9WG,IA+W9BA,KAAAA,GA/W8B,IAgXbrtC,KAAKi/B,IAAIoO,GAAWrtC,KAAKC,MAAe,GAATotC,KAQ3C,EAAAxO,UAAAA,qBAAP,SAA4BzgB,GAC1B,OAAIwX,EAAQvzB,MACH+b,EAAM0f,QAAUloC,KAAKwR,gBAAgB9K,QAAQ86C,8BAG/Ch5B,EAAM2f,UAOR,EAAApB,UAAAA,YAAP,SAAmBve,GAIjB,GAHAxoB,KAAK0/C,oBAAsBl3B,EAAMi5B,WAGZ,IAAjBj5B,EAAMgb,SAAgBxjC,KAAK08B,eAKV,IAAjBlU,EAAMgb,OAAV,CAKA,IAAKxjC,KAAKy/C,SAAU,CAClB,IAAKz/C,KAAKipC,qBAAqBzgB,GAC7B,OAIFA,EAAM6iB,kBAIR7iB,EAAMmgB,iBAGN3oC,KAAKw/C,kBAAoB,EAErBx/C,KAAKy/C,UAAYj3B,EAAM2f,SACzBnoC,KAAK0hD,oBAAoBl5B,GAEJ,IAAjBA,EAAMm5B,OACR3hD,KAAK4hD,eAAep5B,GACM,IAAjBA,EAAMm5B,OACf3hD,KAAK6hD,eAAer5B,GACM,IAAjBA,EAAMm5B,QACf3hD,KAAK8hD,eAAet5B,GAIxBxoB,KAAK+hD,yBACL/hD,KAAK84B,SAAQ,KAMP,EAAAipB,UAAAA,uBAAR,WAEM/hD,IAAAA,EAAAA,KAAAA,KAAK4yC,eAAepO,gBACtBxkC,KAAK4yC,eAAepO,cAAc79B,iBAAiB,YAAa3G,KAAK8/C,oBACrE9/C,KAAK4yC,eAAepO,cAAc79B,iBAAiB,UAAW3G,KAAKggD,mBAErEhgD,KAAKgiD,yBAA2BpkD,OAAOk+C,YAAY,WAAM,OAAKmG,EAAAA,eAhbrC,KAsbnB,EAAAvB,UAAAA,0BAAR,WACM1gD,KAAK4yC,eAAepO,gBACtBxkC,KAAK4yC,eAAepO,cAAc39B,oBAAoB,YAAa7G,KAAK8/C,oBACxE9/C,KAAK4yC,eAAepO,cAAc39B,oBAAoB,UAAW7G,KAAKggD,mBAExExE,cAAcx7C,KAAKgiD,0BACnBhiD,KAAKgiD,8BAA2BthD,GAQ1B,EAAAghD,UAAAA,oBAAR,SAA4Bl5B,GACtBxoB,KAAKugD,OAAOxW,iBACd/pC,KAAKugD,OAAOvW,aAAehqC,KAAKihD,sBAAsBz4B,KASlD,EAAAo5B,UAAAA,eAAR,SAAuBp5B,GAOrB,GANAxoB,KAAKugD,OAAO2B,qBAAuB,EACnCliD,KAAKugD,OAAOa,mBAAoB,EAChCphD,KAAKygD,qBAAuBzgD,KAAK2pC,mBAAmBnhB,GAAS,EAAuB,EAGpFxoB,KAAKugD,OAAOxW,eAAiB/pC,KAAKihD,sBAAsBz4B,GACnDxoB,KAAKugD,OAAOxW,eAAjB,CAGA/pC,KAAKugD,OAAOvW,kBAAetpC,EAG3B,IAAMuc,EAAOjd,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAIoB,KAAKugD,OAAOxW,eAAe,IACxE9sB,GAKDA,EAAK5hB,SAAW2E,KAAKugD,OAAOxW,eAAe,IAMM,IAAjD9sB,EAAKlB,SAAS/b,KAAKugD,OAAOxW,eAAe,KAC3C/pC,KAAKugD,OAAOxW,eAAe,OAQvB,EAAA8X,UAAAA,eAAR,SAAuBr5B,GACrB,IAAMkQ,EAAS14B,KAAKihD,sBAAsBz4B,GACtCkQ,IACF14B,KAAKygD,qBAAuB,EAC5BzgD,KAAKmhD,cAAczoB,GAAQ,KASvB,EAAAopB,UAAAA,eAAR,SAAuBt5B,GACrB,IAAMkQ,EAAS14B,KAAKihD,sBAAsBz4B,GACtCkQ,IACF14B,KAAKygD,qBAAuB,EAC5BzgD,KAAKmiD,cAAczpB,EAAO,MAQvB,EAAAiR,UAAAA,mBAAP,SAA0BnhB,GACxB,OAAOA,EAAM0f,UAAYlI,EAAQvzB,OAASzM,KAAKwR,gBAAgB9K,QAAQ86C,gCAQjE,EAAAzB,UAAAA,aAAR,SAAqBv3B,GAQnB,GAJAA,EAAM45B,2BAIDpiD,KAAKugD,OAAOxW,eAAjB,CAMA,IAAMsY,EAAuBriD,KAAKugD,OAAOvW,aAAe,CAAChqC,KAAKugD,OAAOvW,aAAa,GAAIhqC,KAAKugD,OAAOvW,aAAa,IAAM,KAIrH,GADAhqC,KAAKugD,OAAOvW,aAAehqC,KAAKihD,sBAAsBz4B,GACjDxoB,KAAKugD,OAAOvW,aAAjB,CAMkC,IAA9BhqC,KAAKygD,qBACHzgD,KAAKugD,OAAOvW,aAAa,GAAKhqC,KAAKugD,OAAOxW,eAAe,GAC3D/pC,KAAKugD,OAAOvW,aAAa,GAAK,EAE9BhqC,KAAKugD,OAAOvW,aAAa,GAAKhqC,KAAKuR,eAAegI,KAEb,IAA9BvZ,KAAKygD,sBACdzgD,KAAKsiD,gBAAgBtiD,KAAKugD,OAAOvW,cAInChqC,KAAKw/C,kBAAoBx/C,KAAKshD,2BAA2B94B,GAKvB,IAA9BxoB,KAAKygD,uBACHzgD,KAAKw/C,kBAAoB,EAC3Bx/C,KAAKugD,OAAOvW,aAAa,GAAKhqC,KAAKuR,eAAegI,KACzCvZ,KAAKw/C,kBAAoB,IAClCx/C,KAAKugD,OAAOvW,aAAa,GAAK,IAOlC,IAAMtpB,EAAS1gB,KAAKuR,eAAemP,OACnC,GAAI1gB,KAAKugD,OAAOvW,aAAa,GAAKtpB,EAAO8I,MAAMnuB,OAAQ,CACrD,IAAM4hB,EAAOyD,EAAO8I,MAAM5qB,IAAIoB,KAAKugD,OAAOvW,aAAa,IACnD/sB,GAAuD,IAA/CA,EAAKlB,SAAS/b,KAAKugD,OAAOvW,aAAa,KACjDhqC,KAAKugD,OAAOvW,aAAa,KAKxBqY,GACHA,EAAqB,KAAOriD,KAAKugD,OAAOvW,aAAa,IACrDqY,EAAqB,KAAOriD,KAAKugD,OAAOvW,aAAa,IACrDhqC,KAAK84B,SAAQ,QA5Cb94B,KAAK84B,SAAQ,KAoDT,EAAAmpB,UAAAA,YAAR,WACE,GAAKjiD,KAAKugD,OAAOvW,cAAiBhqC,KAAKugD,OAAOxW,gBAG1C/pC,KAAKw/C,kBAAmB,CAC1Bx/C,KAAK6/C,sBAAsBv/C,KAAK,CAAE68B,OAAQn9B,KAAKw/C,kBAAmBhZ,qBAAqB,IAKvF,IAAM9lB,EAAS1gB,KAAKuR,eAAemP,OAC/B1gB,KAAKw/C,kBAAoB,GACO,IAA9Bx/C,KAAKygD,uBACPzgD,KAAKugD,OAAOvW,aAAa,GAAKhqC,KAAKuR,eAAegI,MAEpDvZ,KAAKugD,OAAOvW,aAAa,GAAK5/B,KAAKwB,IAAI8U,EAAOgL,MAAQ1rB,KAAKuR,eAAe4C,KAAMuM,EAAO8I,MAAMnuB,OAAS,KAEpE,IAA9B2E,KAAKygD,uBACPzgD,KAAKugD,OAAOvW,aAAa,GAAK,GAEhChqC,KAAKugD,OAAOvW,aAAa,GAAKtpB,EAAOgL,OAEvC1rB,KAAK84B,YAQD,EAAAmnB,UAAAA,WAAR,SAAmBz3B,GACjB,IAAM+5B,EAAc/5B,EAAMi5B,UAAYzhD,KAAK0/C,oBAI3C,GAFA1/C,KAAK0gD,4BAED1gD,KAAK8pC,cAAczuC,QAAU,GAAKknD,EAvnBP,KAunBmD/5B,EAAM0f,QACtF,GAAIloC,KAAKuR,eAAemP,OAAO+I,QAAUzpB,KAAKuR,eAAemP,OAAOgL,MAAO,CACzE,IAAM82B,EAAcxiD,KAAK+lC,cAAcsb,UACrC74B,EACAxoB,KAAK28C,SACL38C,KAAKuR,eAAegI,KACpBvZ,KAAKuR,eAAe4C,MACpB,GAEF,GAAIquC,QAAkC9hD,IAAnB8hD,EAAY,SAAuC9hD,IAAnB8hD,EAAY,GAAkB,CAC/E,IAAMpZ,EAAW,EAAAqZ,mBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGxiD,KAAKuR,eAAgBvR,KAAK+f,aAAamJ,gBAAgBiD,uBACnInsB,KAAK+f,aAAaS,iBAAiB4oB,GAAU,UAGxCppC,KAAK08B,cACd18B,KAAKogC,mBAAmB9/B,QAIpB,EAAAggD,UAAAA,kBAAR,SAA0BvjD,GAA1B,IACEiD,EAAAA,KAAAA,KAAK+8B,iBAKL/8B,KAAKmgD,cAAc//C,UACnBJ,KAAKmgD,cAAgBpjD,EAAE2lD,aAAal5B,MAAM42B,OAAO,SAAAjjB,GAAU,OAAKkjB,EAAAA,QAAQljB,MAQlE,EAAAwlB,UAAAA,oCAAR,SAA4C5B,EAAyBroB,GAEnE,IADA,IAAIkqB,EAAYlqB,EAAO,GACd/6B,EAAI,EAAG+6B,EAAO,IAAM/6B,EAAGA,IAAK,CACnC,IAAM,EAASojD,EAAW1kC,SAAS1e,EAAGqC,KAAKyhB,WAAWhe,WAAWpI,OAC/B,IAA9B2E,KAAKyhB,UAAUje,WAGjBo/C,IACS,EAAS,GAAKlqB,EAAO,KAAO/6B,IAIrCilD,GAAa,EAAS,GAG1B,OAAOA,GAGF,EAAA/Y,UAAAA,aAAP,SAAoB9B,EAAapc,EAAatwB,GAC5C2E,KAAKugD,OAAOxjB,iBACZ/8B,KAAK0gD,4BACL1gD,KAAKugD,OAAOxW,eAAiB,CAAChC,EAAKpc,GACnC3rB,KAAKugD,OAAO2B,qBAAuB7mD,EACnC2E,KAAK84B,WAOC,EAAA+pB,UAAAA,WAAR,SAAmBnqB,EAA0BoqB,EAAuCC,EAAyCC,GAE3H,QAFkF,IAAAD,IAAA,GAAA,QAAyC,IAAAC,IAAA,GAAA,KAEvHtqB,EAAO,IAAM14B,KAAKuR,eAAegI,MAArC,CAIA,IAAMmH,EAAS1gB,KAAKuR,eAAemP,OAC7BqgC,EAAargC,EAAO8I,MAAM5qB,IAAI85B,EAAO,IAC3C,GAAKqoB,EAAL,CAIA,IAAM9jC,EAAOyD,EAAOogC,4BAA4BpoB,EAAO,IAAI,GAGvDpc,EAAatc,KAAK2iD,oCAAoC5B,EAAYroB,GAClEzB,EAAW3a,EAGT2mC,EAAavqB,EAAO,GAAKpc,EAC3B4mC,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5BpmC,EAAKqmC,OAAOhnC,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCW,EAAKqmC,OAAOhnC,EAAa,IAChDA,IAEF,KAAO2a,EAAWha,EAAK5hB,QAAwC,MAA9B4hB,EAAKqmC,OAAOrsB,EAAW,IACtDA,QAEG,CAKL,IAAInZ,EAAW4a,EAAO,GAClB3a,EAAS2a,EAAO,GAIkB,IAAlCqoB,EAAWv9C,SAASsa,KACtBolC,IACAplC,KAEkC,IAAhCijC,EAAWv9C,SAASua,KACtBolC,IACAplC,KAIF,IAAM,EAASgjC,EAAW3kC,UAAU2B,GAAQ1iB,OAO5C,IANI,EAAS,IACXgoD,GAAuB,EAAS,EAChCpsB,GAAY,EAAS,GAIhBnZ,EAAW,GAAKxB,EAAa,IAAMtc,KAAKujD,qBAAqBxC,EAAW1kC,SAASyB,EAAW,EAAG9d,KAAKyhB,aAAa,CACtHs/B,EAAW1kC,SAASyB,EAAW,EAAG9d,KAAKyhB,WACvC,IAAM,EAASzhB,KAAKyhB,UAAUhe,WAAWpI,OACP,IAA9B2E,KAAKyhB,UAAUje,YAEjB0/C,IACAplC,KACS,EAAS,IAGlBslC,GAAsB,EAAS,EAC/B9mC,GAAc,EAAS,GAEzBA,IACAwB,IAEF,KAAOC,EAASgjC,EAAW1lD,QAAU47B,EAAW,EAAIha,EAAK5hB,SAAW2E,KAAKujD,qBAAqBxC,EAAW1kC,SAAS0B,EAAS,EAAG/d,KAAKyhB,aAAa,CAC9Is/B,EAAW1kC,SAAS0B,EAAS,EAAG/d,KAAKyhB,WACrC,IAAM,EAASzhB,KAAKyhB,UAAUhe,WAAWpI,OACP,IAA9B2E,KAAKyhB,UAAUje,YAEjB2/C,IACAplC,KACS,EAAS,IAGlBslC,GAAuB,EAAS,EAChCpsB,GAAY,EAAS,GAEvBA,IACAlZ,KAKJkZ,IAIA,IAAI/vB,EACAoV,EACE2mC,EACAC,EACAE,EAIF/nD,EAAS+O,KAAKwB,IAAI5L,KAAKuR,eAAegI,KACxC0d,EACE3a,EACA4mC,EACAC,EACAC,EACAC,GAEJ,GAAKP,GAA4E,KAA5C7lC,EAAKrhB,MAAM0gB,EAAY2a,GAAUusB,OAAtE,CAKA,GAAIT,GACY,IAAV77C,GAA8C,KAA/B65C,EAAW5kC,aAAa,GAAqB,CAC9D,IAAMsnC,EAAqB/iC,EAAO8I,MAAM5qB,IAAI85B,EAAO,GAAK,GACxD,GAAI+qB,GAAsB1C,EAAWtlC,WAA+E,KAAlEgoC,EAAmBtnC,aAAanc,KAAKuR,eAAegI,KAAO,GAAqB,CAChI,IAAMmqC,EAA2B1jD,KAAK6iD,WAAW,CAAC7iD,KAAKuR,eAAegI,KAAO,EAAGmf,EAAO,GAAK,IAAI,GAAO,GAAM,GAC7G,GAAIgrB,EAA0B,CAC5B,IAAMjM,EAASz3C,KAAKuR,eAAegI,KAAOmqC,EAAyBx8C,MACnEA,GAASuwC,EACTp8C,GAAUo8C,IAOlB,GAAIuL,GACE97C,EAAQ7L,IAAW2E,KAAKuR,eAAegI,MAAkE,KAA1DwnC,EAAW5kC,aAAanc,KAAKuR,eAAegI,KAAO,GAAqB,CACzH,IAAMoqC,EAAiBjjC,EAAO8I,MAAM5qB,IAAI85B,EAAO,GAAK,GACpD,GAAIirB,GAAkBA,EAAeloC,WAAgD,KAAnCkoC,EAAexnC,aAAa,GAAqB,CACjG,IAAMynC,EAAuB5jD,KAAK6iD,WAAW,CAAC,EAAGnqB,EAAO,GAAK,IAAI,GAAO,GAAO,GAC3EkrB,IACFvoD,GAAUuoD,EAAqBvoD,SAMvC,MAAO,CAAE6L,MAAK,EAAE7L,OAAM,OAQd,EAAA8lD,UAAAA,cAAV,SAAwBzoB,EAA0BoqB,GAChD,IAAMe,EAAe7jD,KAAK6iD,WAAWnqB,EAAQoqB,GAC7C,GAAIe,EAAc,CAEhB,KAAOA,EAAa38C,MAAQ,GAC1B28C,EAAa38C,OAASlH,KAAKuR,eAAegI,KAC1Cmf,EAAO,KAET14B,KAAKugD,OAAOxW,eAAiB,CAAC8Z,EAAa38C,MAAOwxB,EAAO,IACzD14B,KAAKugD,OAAO2B,qBAAuB2B,EAAaxoD,SAQ5C,EAAAinD,UAAAA,gBAAR,SAAwB5pB,GACtB,IAAMmrB,EAAe7jD,KAAK6iD,WAAWnqB,GAAQ,GAC7C,GAAImrB,EAAc,CAIhB,IAHA,IAAIpwC,EAASilB,EAAO,GAGbmrB,EAAa38C,MAAQ,GAC1B28C,EAAa38C,OAASlH,KAAKuR,eAAegI,KAC1C9F,IAKF,IAAKzT,KAAKugD,OAAOuD,6BACf,KAAOD,EAAa38C,MAAQ28C,EAAaxoD,OAAS2E,KAAKuR,eAAegI,MACpEsqC,EAAaxoD,QAAU2E,KAAKuR,eAAegI,KAC3C9F,IAIJzT,KAAKugD,OAAOvW,aAAe,CAAChqC,KAAKugD,OAAOuD,6BAA+BD,EAAa38C,MAAQ28C,EAAa38C,MAAQ28C,EAAaxoD,OAAQoY,KASlI,EAAA8vC,UAAAA,qBAAR,SAA6BrtC,GAG3B,OAAwB,IAApBA,EAAK1S,YAGFxD,KAAKwR,gBAAgB9K,QAAQq9C,cAAcniD,QAAQsU,EAAKzS,aAAe,GAOtE,EAAA0+C,UAAAA,cAAV,SAAwBllC,GACtB,IAAM+mC,EAAehkD,KAAKuR,eAAemP,OAAOujC,uBAAuBhnC,GACvEjd,KAAKugD,OAAOxW,eAAiB,CAAC,EAAGia,EAAa3G,OAC9Cr9C,KAAKugD,OAAOvW,aAAe,CAAChqC,KAAKuR,eAAegI,KAAMyqC,EAAaE,MACnElkD,KAAKugD,OAAO2B,qBAAuB,GAl3BV,EAmDxB,CAAA,EAAAphD,EAAAA,EAAAA,gBACA,EAAAG,EAAAA,EAAAA,cACA,EAAAkD,EAAAA,EAAAA,eACA,EAAA7C,EAAAA,EAAAA,iBACA,EAAA8C,EAAAA,EAAAA,iBAvDQkiC,GAgDX,CAhDoC,EAAAvkC,YAAzB,EAAAukC,6BC1Db,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,oBAAA,EAAA,IAuBE,EAAA,WAAA,SACU/0B,EAAAA,GAAA,KAAAA,eApBH,EAAA,KAAA6vC,mBAA6B,EAO7B,KAAAc,qBAA+B,EAgHxC,OA5FS,EAAAnlB,UAAAA,eAAP,WACE/8B,KAAK+pC,oBAAiBrpC,EACtBV,KAAKgqC,kBAAetpC,EACpBV,KAAKohD,mBAAoB,EACzBphD,KAAKkiD,qBAAuB,GAM9B,OAAW,eAAA,EAAmB,UAAA,sBAAA,KAA9B,WACE,OAAIliD,KAAKohD,kBACA,CAAC,EAAG,GAGRphD,KAAKgqC,cAAiBhqC,KAAK+pC,gBAIzB/pC,KAAK8jD,6BAA+B9jD,KAAKgqC,aAHvChqC,KAAK+pC,4BAUhB,EAAA,cAAA,IAAA,OAAW,eAAA,EAAiB,UAAA,oBAAA,KAA5B,WACE,GAAI/pC,KAAKohD,kBACP,MAAO,CAACphD,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAe4C,KAAO,GAGlG,GAAKnU,KAAK+pC,eAAV,CAKA,IAAK/pC,KAAKgqC,cAAgBhqC,KAAK8jD,6BAA8B,CAC3D,IAAMK,EAAkBnkD,KAAK+pC,eAAe,GAAK/pC,KAAKkiD,qBACtD,OAAIiC,EAAkBnkD,KAAKuR,eAAegI,KACjC,CAAC4qC,EAAkBnkD,KAAKuR,eAAegI,KAAMvZ,KAAK+pC,eAAe,GAAK3/B,KAAKqkC,MAAM0V,EAAkBnkD,KAAKuR,eAAegI,OAEzH,CAAC4qC,EAAiBnkD,KAAK+pC,eAAe,IAI/C,OAAI/pC,KAAKkiD,sBAEHliD,KAAKgqC,aAAa,KAAOhqC,KAAK+pC,eAAe,GACxC,CAAC3/B,KAAKqB,IAAIzL,KAAK+pC,eAAe,GAAK/pC,KAAKkiD,qBAAsBliD,KAAKgqC,aAAa,IAAKhqC,KAAKgqC,aAAa,IAG3GhqC,KAAKgqC,2BAMP,EAAA,cAAA,IAAA,EAAA8Z,UAAAA,2BAAP,WACE,IAAM58C,EAAQlH,KAAK+pC,eACb5iC,EAAMnH,KAAKgqC,aACjB,SAAK9iC,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,KAQ9D,EAAAi5C,UAAAA,OAAP,SAAcjjB,GAUZ,OARIn9B,KAAK+pC,iBACP/pC,KAAK+pC,eAAe,IAAM5M,GAExBn9B,KAAKgqC,eACPhqC,KAAKgqC,aAAa,IAAM7M,GAItBn9B,KAAKgqC,cAAgBhqC,KAAKgqC,aAAa,GAAK,GAC9ChqC,KAAK+8B,kBACE,IAIL/8B,KAAK+pC,gBAAkB/pC,KAAK+pC,eAAe,GAAK,IAClD/pC,KAAK+pC,eAAe,GAAK,IAEpB,IAEX,EApGE,GAvBW,EAAAyW,2BCNb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,wBAAA,EAAA,IAyEA,EAAA,EAAA,IAAA,SAAS4D,EAAmBtP,EAAgBuP,EAAiBtQ,EAA+BuQ,GAC1F,IAAM9wC,EAAWshC,EAASyP,EAAkBxQ,EAAee,GACrDrhC,EAAS4wC,EAAUE,EAAkBxQ,EAAesQ,GAI1D,OAAOG,EAFYp6C,KAAKi/B,IAAI71B,EAAWC,GAiCzC,SAA0BqhC,EAAgBuP,EAAiBtQ,GAKzD,IAJA,IAAI0Q,EAAc,EACZjxC,EAAWshC,EAASyP,EAAkBxQ,EAAee,GACrDrhC,EAAS4wC,EAAUE,EAAkBxQ,EAAesQ,GAEjD1mD,EAAI,EAAGA,EAAIyM,KAAKi/B,IAAI71B,EAAWC,GAAS9V,IAAK,CACpD,IAAM+mD,EAAmD,MAAvCC,EAAkB7P,EAAQuP,IAA6B,EAAI,EACvEpnC,EAAO82B,EAAcrzB,OAAO8I,MAAM5qB,IAAI4U,EAAYkxC,EAAY/mD,GAChEsf,GAAQA,EAAKxB,WACfgpC,IAIJ,OAAOA,EAbT,CAjCoE3P,EAAQuP,EAAStQ,GAEzD3K,EAASub,EAAkB7P,EAAQuP,GAAUC,IAmDzE,SAASC,EAAkBxQ,EAA+B6Q,GAKxD,IAJA,IAAIvsB,EAAW,EACXpb,EAAO82B,EAAcrzB,OAAO8I,MAAM5qB,IAAIgmD,GACtCC,EAAY5nC,GAAQA,EAAKxB,UAEtBopC,GAAaD,GAAc,GAAKA,EAAa7Q,EAAc5/B,MAChEkkB,IAEAwsB,GADA5nC,EAAO82B,EAAcrzB,OAAO8I,MAAM5qB,MAAMgmD,KACpB3nC,EAAKxB,UAG3B,OAAO4c,EA8BT,SAASssB,EAAkB7P,EAAgBuP,GACzC,OAAOvP,EAASuP,EAAU,IAAe,IAY3C,SAAStD,EACPjjC,EACAtK,EACAuK,EACAtK,EACAqxC,EACA/Q,GAMA,IAJA,IAAIgR,EAAajnC,EACb8mC,EAAapxC,EACbwxC,EAAY,GAETD,IAAehnC,GAAU6mC,IAAenxC,GAC7CsxC,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAahR,EAAcx6B,KAAO,GAC/CyrC,GAAajR,EAAcrzB,OAAOogC,4BAChC8D,GAAY,EAAO9mC,EAAUinC,GAE/BA,EAAa,EACbjnC,EAAW,EACX8mC,MACUE,GAAWC,EAAa,IAClCC,GAAajR,EAAcrzB,OAAOogC,4BAChC8D,GAAY,EAAO,EAAG9mC,EAAW,GAGnCA,EADAinC,EAAahR,EAAcx6B,KAAO,EAElCqrC,KAIJ,OAAOI,EAAYjR,EAAcrzB,OAAOogC,4BACtC8D,GAAY,EAAO9mC,EAAUinC,GAQjC,SAAS3b,EAASsb,EAAsBJ,GACtC,IAAMW,EAAOX,EAAoB,IAAM,IACvC,OAAO,EAAAx3C,GAAG4B,IAAMu2C,EAAMP,EASxB,SAASF,EAAOxL,EAAekM,GAC7BlM,EAAQ5uC,KAAKqkC,MAAMuK,GAEnB,IADA,IAAImM,EAAM,GACDxnD,EAAI,EAAGA,EAAIq7C,EAAOr7C,IACzBwnD,GAAOD,EAET,OAAOC,EAnOT,EAAmCC,mBAAAA,SAAAA,EAAiBf,EAAiBtQ,EAA+BuQ,GAClG,IAWII,EAXE7P,EAASd,EAAcrzB,OAAOtL,EAC9B0/B,EAASf,EAAcrzB,OAAOrL,EAGpC,IAAK0+B,EAAcrzB,OAAOwoB,cACxB,OAsCJ,SAA0B2L,EAAgBC,EAAgBsQ,EAAiBf,EAAiBtQ,EAA+BuQ,GACzH,OAAqF,IAAjFF,EAAmBtP,EAAQuP,EAAStQ,EAAeuQ,GAAmBjpD,OACjE,GAEFmpD,EAAOzD,EACZlM,EAAQC,EAAQD,EAChBC,EAASyP,EAAkBxQ,EAAee,IAAS,EAAOf,GAC1D14C,OAAQ+tC,EAAS,IAAgBkb,IAPrC,CAtC4BzP,EAAQC,EAAQsQ,EAASf,EAAStQ,EAAeuQ,GACvEF,EAAmBtP,EAAQuP,EAAStQ,EAAeuQ,GA+DzD,SAA4BzP,EAAgBC,EAAgBsQ,EAAiBf,EAAiBtQ,EAA+BuQ,GAC3H,IAAI9wC,EAEFA,EADE4wC,EAAmBtP,EAAQuP,EAAStQ,EAAeuQ,GAAmBjpD,OAAS,EACtEgpD,EAAUE,EAAkBxQ,EAAesQ,GAE3CvP,EAGb,IAAMrhC,EAAS4wC,EACTK,EAyDR,SAA6B7P,EAAgBC,EAAgBsQ,EAAiBf,EAAiBtQ,EAA+BuQ,GAC5H,IAAI9wC,EAOJ,OALEA,EADE4wC,EAAmBgB,EAASf,EAAStQ,EA3D8CuQ,GA2DZjpD,OAAS,EACvEgpD,EAAUE,EAAkBxQ,EAAesQ,GAE3CvP,EAGRD,EAASuQ,GACZ5xC,GAAY6wC,GACXxP,GAAUuQ,GACX5xC,EAAW6wC,EACJ,IAEF,IAdT,CAzDwCxP,EAAQC,EAAQsQ,EAASf,EAAStQ,GAExE,OAAOyQ,EAAOzD,EACZlM,EAAQrhC,EAAU4xC,EAAS3xC,EACb,MAAdixC,EAA+B3Q,GAC/B14C,OAAQ+tC,EAASsb,EAAWJ,IAdhC,CA9DyBzP,EAAQC,EAAQsQ,EAASf,EAAStQ,EAAeuQ,GAKxE,GAAIxP,IAAWuP,EAEb,OADAK,EAAY7P,EAASuQ,EAAU,IAAiB,IACzCZ,EAAOp6C,KAAKi/B,IAAIwL,EAASuQ,GAAUhc,EAASsb,EAAWJ,IAEhEI,EAAY5P,EAASuP,EAAU,IAAiB,IAChD,IAAMgB,EAAgBj7C,KAAKi/B,IAAIyL,EAASuP,GAIxC,OAAOG,EAaT,SAAwBc,EAAevR,GACrC,OAjBwEA,EAiBnDx6B,KAAO+rC,EAD9B,CAhBqCxQ,EAASuP,EAAUe,EAAUvQ,IAC7DwQ,EAAgB,GAAKtR,EAAcx6B,KAAO,IACtBu7B,EAASuP,EAAUxP,EAASuQ,GAQpC,GAPYhc,EAASsb,EAAWJ,eCrCjD,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,IAGA,EAAA,EAAA,GAAA,EAiBE,WAAA,SAC2B9yC,EAAAA,GAAA,KAAAA,gBAoC7B,EAAA,OAjDE,OAAkB,eAAA,EAAY,eAAA,KAA9B,WACE,IAAKs0B,EAAayf,cAAe,CAC/B,IAAMC,EAA8C5nD,OAAQ6nD,cAAsB7nD,OAAQ8nD,mBAC1F,IAAKF,EAEH,OADAjwB,QAAQC,KAAK,4FACN,KAETsQ,EAAayf,cAAgB,IAAIC,EAEnC,OAAO1f,EAAayf,2BAQf,EAAA,cAAA,IAAA,EAAA1a,UAAAA,cAAP,WACE,IAAMnX,EAAMoS,EAAa6f,aACzB,GAAKjyB,EAAL,CAGA,IAAMkyB,EAAkBlyB,EAAImyB,qBAC5BnyB,EAAIoyB,gBAAgB9lD,KAAK+lD,qBAAqB/lD,KAAKgmD,gBAAgBhmD,KAAKwR,gBAAgB9K,QAAQu/C,YAAa,SAACvlC,GAC5GklC,EAAgBllC,OAASA,EACzBklC,EAAgBM,QAAQxyB,EAAIyyB,aAC5BP,EAAgB1+C,MAAM,OAIlB,EAAA6+C,UAAAA,qBAAR,SAA6BK,GAK3B,IAJA,IAAMC,EAAezoD,OAAO0oD,KAAKF,GAC3Bv9B,EAAMw9B,EAAahrD,OACnBkrD,EAAQ,IAAIx+C,WAAW8gB,GAEpBlrB,EAAI,EAAGA,EAAIkrB,EAAKlrB,IACvB4oD,EAAM5oD,GAAK0oD,EAAaziD,WAAWjG,GAGrC,OAAO4oD,EAAM7lC,QAGP,EAAAslC,UAAAA,gBAAR,SAAwBQ,GAKtB,OAHiBA,EAAQ9wB,MAAM,KAGf,IApDPoQ,EAAY,EAkBpB,CAAA,EAAAxkC,EAAAA,EAAAA,kBAlBQwkC,GAiBX,GAjBW,EAAAA,yBCHb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,sBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,EAUA,EAAA,GAAA,EAaE,SAAA,GAAA,SACmB6W,EAAAA,EACA/J,EACgBrhC,EACDw0B,EACI1C,EACF7xB,GANpC,IAQE,EAAA,EAAO,KAAA,OAAA,YAPU,EAAAmrC,SACA,EAAA,EAAA/J,eACgB,EAAA,EAAArhC,eACD,EAAA,EAAAw0B,cACI,EAAA,EAAA1C,kBACF,EAAA,EAAA7xB,gBAlB5B,EAAA,EAAAi1C,OAAuB,GAEvB,EAAAC,iBAA2B,EAO3B,EAAAC,iBAA6D,MAACjmD,OAAWA,GACzE,EAAAkmD,wBAAkC,EAYxC,EAAKrqD,SAAS,EAAA4mC,yBAAyB,EAAKwZ,SAAU,YAAa,SAAA5/C,GAAK,OAAK8pD,EAAAA,aAAa9pD,MAG1F,EAAK+iD,mBAAqB,SAAA/iD,GAAK,OAAKgjD,EAAAA,aAAahjD,IACjD,EAAK+pD,oBAAsB,SAAA/pD,GAAK,OAAKgqD,EAAAA,cAAchqD,IACnD,EAAKiqD,eAAiB,SAAAjqD,GAAK,OAAKkqD,EAAAA,SAASlqD,MA8L7C,OA1NsC,EA+B7B,EAAA,GAAA,EAAAqD,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KACbJ,MAAAA,KAAKknD,eAGA,EAAA10C,UAAAA,IAAP,SAAW20C,GACTnnD,KAAKymD,OAAOtmD,KAAKgnD,GACU,IAAvBnnD,KAAKymD,OAAOprD,QACd2E,KAAKonD,aAIF,EAAAvgB,UAAAA,SAAP,SAAgB3/B,EAAgBC,GAE9B,GAA2B,IAAvBnH,KAAKymD,OAAOprD,OAAhB,CAKK6L,GAAUC,IACbD,EAAQ,EACRC,EAAMnH,KAAKuR,eAAe4C,KAAO,GAInC,IAAK,IAAIxW,EAAI,EAAGA,EAAIqC,KAAKymD,OAAOprD,OAAQsC,IAAK,CAC3C,IAAMwpD,EAAOnnD,KAAKymD,OAAO9oD,IACpBwpD,EAAKxuC,GAAKzR,GAASigD,EAAKxuC,IAAMxR,EAAM,GACpCggD,EAAKvuC,GAAK1R,GAASigD,EAAKvuC,IAAMzR,EAAM,GACpCggD,EAAKxuC,GAAKzR,GAASigD,EAAKvuC,GAAKzR,EAAM,KAClCnH,KAAKqnD,cAAgBrnD,KAAKqnD,eAAiBF,IAC7CnnD,KAAKqnD,aAAazJ,gBAClB59C,KAAKqnD,kBAAe3mD,GAEtBV,KAAKymD,OAAOpmD,OAAO1C,IAAK,IAKD,IAAvBqC,KAAKymD,OAAOprD,QACd2E,KAAKknD,gBAID,EAAAE,UAAAA,UAAR,WACOpnD,KAAK0mD,kBACR1mD,KAAK0mD,iBAAkB,EACvB1mD,KAAK28C,SAASh2C,iBAAiB,YAAa3G,KAAK8/C,oBACjD9/C,KAAK28C,SAASh2C,iBAAiB,aAAc3G,KAAK8mD,qBAClD9mD,KAAK28C,SAASh2C,iBAAiB,QAAS3G,KAAKgnD,kBAIzC,EAAAE,UAAAA,YAAR,WACMlnD,KAAK0mD,kBACP1mD,KAAK0mD,iBAAkB,EACvB1mD,KAAK28C,SAAS91C,oBAAoB,YAAa7G,KAAK8/C,oBACpD9/C,KAAK28C,SAAS91C,oBAAoB,aAAc7G,KAAK8mD,qBACrD9mD,KAAK28C,SAAS91C,oBAAoB,QAAS7G,KAAKgnD,kBAI5C,EAAAjH,UAAAA,aAAR,SAAqBhjD,GAGfiD,KAAK2mD,iBAAiB,KAAO5pD,EAAEuqD,OAAStnD,KAAK2mD,iBAAiB,KAAO5pD,EAAEgyC,QACzE/uC,KAAKunD,SAASxqD,GAEdiD,KAAK2mD,iBAAmB,CAAC5pD,EAAEuqD,MAAOvqD,EAAEgyC,SAIhC,EAAAwY,UAAAA,SAAR,SAAiBxqD,GAAjB,IACQoqD,EAAAA,KAAAA,EAAOnnD,KAAKwnD,iBAAiBzqD,GAG/BoqD,IAASnnD,KAAKqnD,eAMdrnD,KAAKqnD,eACPrnD,KAAKqnD,aAAazJ,gBAClB59C,KAAKqnD,kBAAe3mD,EAChBV,KAAKynD,iBACPlR,aAAav2C,KAAKynD,kBAKjBN,IAGLnnD,KAAKqnD,aAAeF,EAGhBA,EAAK9H,eACP8H,EAAK9H,cAActiD,GAIrBiD,KAAKynD,gBAAkB7pD,OAAOkuC,WAAW,WAAM,OAAK4b,EAAAA,WAAW3qD,IAAIiD,KAAKwR,gBAAgB9K,QAAQihD,6BAG1F,EAAAD,UAAAA,WAAR,SAAmB3qD,GACjBiD,KAAKynD,qBAAkB/mD,EACvB,IAAMymD,EAAOnnD,KAAKwnD,iBAAiBzqD,GAC/BoqD,GAAQA,EAAKzJ,iBACfyJ,EAAKzJ,gBAAgB3gD,IAIjB,EAAA8pD,UAAAA,aAAR,SAAqB9pD,GAMnB,GAHAiD,KAAK4mD,wBAA0B5mD,KAAK4nD,sBAG/B5nD,KAAK0mD,gBAAV,CAMA,IAAMS,EAAOnnD,KAAKwnD,iBAAiBzqD,IAC/BoqD,MAAI,OAAA,EAAJA,EAAMtJ,iBAAiB9gD,MACzBA,EAAE4rC,iBACF5rC,EAAEqlD,8BAIE,EAAA2E,UAAAA,cAAR,SAAsBhqD,GAGhBiD,KAAKqnD,eACPrnD,KAAKqnD,aAAazJ,gBAClB59C,KAAKqnD,kBAAe3mD,EAChBV,KAAKynD,iBACPlR,aAAav2C,KAAKynD,mBAKhB,EAAAR,UAAAA,SAAR,SAAiBlqD,GAGf,IAAMoqD,EAAOnnD,KAAKwnD,iBAAiBzqD,GAC7B8qD,EAAyB7nD,KAAK4nD,sBAEhCT,GAAQU,IAA2B7nD,KAAK4mD,0BAC1CO,EAAK/H,cAAcriD,GACnBA,EAAE4rC,iBACF5rC,EAAEqlD,6BAIE,EAAAwF,UAAAA,oBAAR,WACE,IAAM9d,EAAgB9pC,KAAKqjC,kBAAkByG,cAC7C,OAAOA,EAAgBA,EAAczuC,OAAS,GAGxC,EAAAmsD,UAAAA,iBAAR,SAAyBzqD,GACvB,IAAM27B,EAAS14B,KAAK+lC,cAAcsb,UAAUtkD,EAAGiD,KAAK4yC,eAAgB5yC,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,MAClH,GAAKukB,EAKL,IAFA,IAAMtjB,EAAIsjB,EAAO,GACXrjB,EAAIqjB,EAAO,GACR/6B,EAAI,EAAGA,EAAIqC,KAAKymD,OAAOprD,OAAQsC,IAAK,CAC3C,IAAMwpD,EAAOnnD,KAAKymD,OAAO9oD,GACzB,GAAIwpD,EAAKxuC,KAAOwuC,EAAKvuC,IAEnB,GAAIvD,IAAM8xC,EAAKxuC,IAAMvD,GAAK+xC,EAAK1uC,IAAMrD,EAAI+xC,EAAKzuC,GAC5C,OAAOyuC,OAIT,GAAK9xC,IAAM8xC,EAAKxuC,IAAMvD,GAAK+xC,EAAK1uC,IAC3BpD,IAAM8xC,EAAKvuC,IAAMxD,EAAI+xC,EAAKzuC,IAC1BrD,EAAI8xC,EAAKxuC,IAAMtD,EAAI8xC,EAAKvuC,GAC3B,OAAOuuC,IApNY,EAgBxB,CAAA,EAAArmD,EAAAA,EAAAA,gBACA,EAAAqD,EAAAA,EAAAA,eACA,EAAAE,EAAAA,EAAAA,mBACA,EAAA/C,EAAAA,EAAAA,kBAnBQslC,GAaX,CAboC,EAAA7kC,YAAzB,EAAA6kC,6BCdb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,0BAAA,EAAA,IAGA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,IAAA,EASA,EAAA,IAAA,EA0BE,SAAA,GAAA,SACmBkhB,EAAAA,EACAlmB,GAFnB,IAIE,EAAA,EAAO,KAAA,OAAA,KAHU,EAAAkmB,UACA,EAAA,EAAAlmB,eAvBX,EAAA,EAAAmmB,qBAA+B,EAiB/B,EAAAC,gBAA4B,GAE5B,EAAAC,iBAA2B,GAOjC,EAAKC,uBAAyB71C,SAASC,cAAc,OACrD,EAAK41C,uBAAuB31C,UAAUC,IAAI,uBAE1C,EAAK21C,cAAgB91C,SAASC,cAAc,OAC5C,EAAK61C,cAAc51C,UAAUC,IAAI,4BACjC,EAAK21C,cAAczjB,aAAa,OAAQ,QACxC,EAAK0jB,aAAe,GACpB,IAAK,IAAIzqD,EAAI,EAAGA,EAAI,EAAKmqD,UAAU3zC,KAAMxW,IACvC,EAAKyqD,aAAazqD,GAAK,EAAK0qD,+BAC5B,EAAKF,cAAcx1C,YAAY,EAAKy1C,aAAazqD,IAmBnD,GAhBA,EAAK2qD,0BAA4B,SAAAvrD,GAAK,OAAKwrD,EAAAA,iBAAiBxrD,EAAG,IAC/D,EAAKyrD,6BAA+B,SAAAzrD,GAAK,OAAKwrD,EAAAA,iBAAiBxrD,EAAG,IAClE,EAAKqrD,aAAa,GAAGzhD,iBAAiB,QAAS,EAAK2hD,2BACpD,EAAKF,aAAa,EAAKA,aAAa/sD,OAAS,GAAGsL,iBAAiB,QAAS,EAAK6hD,8BAE/E,EAAKC,yBACL,EAAKP,uBAAuBv1C,YAAY,EAAKw1C,eAE7C,EAAKO,qBAAuB,IAAI,EAAApvB,gBAAgB,EAAKqvB,YAAYppD,KAAK,IACtE,EAAKqpD,eAEL,EAAKC,YAAcx2C,SAASC,cAAc,OAC1C,EAAKu2C,YAAYt2C,UAAUC,IAAI,eAC/B,EAAKq2C,YAAYnkB,aAAa,YAAa,aAC3C,EAAKwjB,uBAAuBv1C,YAAY,EAAKk2C,cAExC,EAAKf,UAAU/vB,QAClB,MAAM,IAAIz9B,MAAM,2DAElB,EAAKwtD,UAAU/vB,QAAQ+wB,sBAAsB,aAAc,EAAKZ,wBAEhE,EAAK3rD,SAAS,EAAKmsD,sBACnB,EAAKnsD,SAAS,EAAKurD,UAAU3sB,SAAS,SAAAp+B,GAAK,OAAKgsD,EAAAA,UAAUhsD,EAAEoX,SAC5D,EAAK5X,SAAS,EAAKurD,UAAU5sB,SAAS,SAAAn+B,GAAK,OAAK6rD,EAAAA,aAAa7rD,EAAEmK,MAAOnK,EAAEoK,QACxE,EAAK5K,SAAS,EAAKurD,UAAU9sB,SAAS,WAAM,OAAK4tB,EAAAA,kBAEjD,EAAKrsD,SAAS,EAAKurD,UAAUrmB,WAAW,SAAAnqB,GAAQ,OAAK0xC,EAAAA,QAAQ1xC,MAC7D,EAAK/a,SAAS,EAAKurD,UAAUntB,WAAW,WAAM,OAAKquB,EAAAA,QAAQ,SAC3D,EAAKzsD,SAAS,EAAKurD,UAAUpmB,UAAU,SAAAunB,GAAc,OAAKC,EAAAA,OAAOD,MACjE,EAAK1sD,SAAS,EAAKurD,UAAU7sB,MAAM,SAAAl+B,GAAK,OAAKmjC,EAAAA,OAAOnjC,EAAEuC,QACtD,EAAK/C,SAAS,EAAKurD,UAAU10C,OAAO,WAAM,OAAK+1C,EAAAA,sBAC/C,EAAK5sD,SAAS,EAAKqlC,eAAeyE,mBAAmB,WAAM,OAAKoiB,EAAAA,4BAEhE,EAAKW,kBAAoB,IAAI,EAAAnvB,iBAC7B,EAAK19B,SAAS,EAAK6sD,mBACnB,EAAKA,kBAAkB5vB,YAAY,WAAM,OAAKivB,EAAAA,2BAG9C,EAAKlsD,SAAS,EAAA4mC,yBAAyBvlC,OAAQ,SAAU,WAAM,OAAK6qD,EAAAA,8BAmMxE,OApR0C,EAoFjC,EAAA,GAAA,EAAAroD,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KACb,MAAA,EAAAwS,wBAAwB5S,KAAKkoD,wBAC7BloD,KAAKooD,aAAa/sD,OAAS,GAGrB,EAAAktD,UAAAA,iBAAR,SAAyBxrD,EAAeoyC,GACtC,IAAMka,EAA+BtsD,EAAE2K,OACjC4hD,EAAwBtpD,KAAKooD,aAA0B,IAAbjZ,EAAoC,EAAInvC,KAAKooD,aAAa/sD,OAAS,GAKnH,GAFiBguD,EAAgBE,aAAa,oBACd,IAAbpa,EAAoC,IAAM,GAAGnvC,KAAK8nD,UAAUpnC,OAAO8I,MAAMnuB,SAOxF0B,EAAEysD,gBAAkBF,EAAxB,CAKA,IAAIG,EACAC,EAgBJ,GAfiB,IAAbva,GACFsa,EAAqBJ,EACrBK,EAAwB1pD,KAAKooD,aAAa55B,MAC1CxuB,KAAKmoD,cAAcjqC,YAAYwrC,KAE/BD,EAAqBzpD,KAAKooD,aAAa75B,QACvCm7B,EAAwBL,EACxBrpD,KAAKmoD,cAAcjqC,YAAYurC,IAIjCA,EAAmB5iD,oBAAoB,QAAS7G,KAAKsoD,2BACrDoB,EAAsB7iD,oBAAoB,QAAS7G,KAAKwoD,8BAGvC,IAAbrZ,EAAmC,CACrC,IAAMwa,EAAa3pD,KAAKqoD,+BACxBroD,KAAKooD,aAAawB,QAAQD,GAC1B3pD,KAAKmoD,cAAcW,sBAAsB,aAAca,QAEjDA,EAAa3pD,KAAKqoD,+BACxBroD,KAAKooD,aAAajoD,KAAKwpD,GACvB3pD,KAAKmoD,cAAcx1C,YAAYg3C,GAIjC3pD,KAAKooD,aAAa,GAAGzhD,iBAAiB,QAAS3G,KAAKsoD,2BACpDtoD,KAAKooD,aAAapoD,KAAKooD,aAAa/sD,OAAS,GAAGsL,iBAAiB,QAAS3G,KAAKwoD,8BAG/ExoD,KAAK8nD,UAAU5qB,YAAyB,IAAbiS,GAAqC,EAAI,GAGpEnvC,KAAKooD,aAA0B,IAAbjZ,EAAoC,EAAInvC,KAAKooD,aAAa/sD,OAAS,GAAGqgC,QAGxF3+B,EAAE4rC,iBACF5rC,EAAEqlD,6BAGI,EAAA2G,UAAAA,UAAR,SAAkB50C,GAEhBnU,KAAKooD,aAAapoD,KAAKooD,aAAa/sD,OAAS,GAAGwL,oBAAoB,QAAS7G,KAAKwoD,8BAGlF,IAAK,IAAI7qD,EAAIqC,KAAKmoD,cAAc0B,SAASxuD,OAAQsC,EAAIqC,KAAK8nD,UAAU3zC,KAAMxW,IACxEqC,KAAKooD,aAAazqD,GAAKqC,KAAKqoD,+BAC5BroD,KAAKmoD,cAAcx1C,YAAY3S,KAAKooD,aAAazqD,IAGnD,KAAOqC,KAAKooD,aAAa/sD,OAAS8Y,GAChCnU,KAAKmoD,cAAcjqC,YAAYle,KAAKooD,aAAa55B,OAInDxuB,KAAKooD,aAAapoD,KAAKooD,aAAa/sD,OAAS,GAAGsL,iBAAiB,QAAS3G,KAAKwoD,8BAE/ExoD,KAAKyoD,0BAGC,EAAAJ,UAAAA,6BAAR,WACE,IAAMtwB,EAAU1lB,SAASC,cAAc,OAIvC,OAHAylB,EAAQ2M,aAAa,OAAQ,YAC7B3M,EAAQiN,UAAY,EACpBhlC,KAAK8pD,sBAAsB/xB,GACpBA,GAGD,EAAAmxB,UAAAA,OAAR,SAAeD,GACb,IAAK,IAAItrD,EAAI,EAAGA,EAAIsrD,EAAYtrD,IAC9BqC,KAAKgpD,QAAQ,MAIT,EAAAA,UAAAA,QAAR,SAAgB1xC,GAAhB,IACE,EAAA,KAAItX,KAAK+nD,qBAAuBgC,KAC1B/pD,KAAKgoD,gBAAgB3sD,OAAS,EAEZ2E,KAAKgoD,gBAAgBz5B,UACrBjX,IAClBtX,KAAKioD,kBAAoB3wC,GAG3BtX,KAAKioD,kBAAoB3wC,EAGd,OAATA,IACFtX,KAAK+nD,uBAC6BgC,KAA9B/pD,KAAK+nD,uBACP/nD,KAAK6oD,YAAYhd,aAAe5N,EAAQ7f,gBAKxC,EAAA3R,OACEzM,KAAK6oD,YAAYhd,aAAe7rC,KAAK6oD,YAAYhd,YAAYxwC,OAAS,IAAM2E,KAAK6oD,YAAY/mB,YAC/FgK,WAAW,WACT,EAAKoc,uBAAuBv1C,YAAY,EAAKk2C,cAC5C,KAMH,EAAAM,UAAAA,iBAAR,WACEnpD,KAAK6oD,YAAYhd,YAAc,GAC/B7rC,KAAK+nD,qBAAuB,EAGxB,EAAAt7C,OACF,EAAAmG,wBAAwB5S,KAAK6oD,cAIzB,EAAA3oB,UAAAA,OAAR,SAAe8pB,GACbhqD,KAAKmpD,mBACLnpD,KAAKgoD,gBAAgB7nD,KAAK6pD,IAGpB,EAAApB,UAAAA,aAAR,SAAqB1hD,EAAgBC,GACnCnH,KAAK0oD,qBAAqB5vB,QAAQ5xB,EAAOC,EAAKnH,KAAK8nD,UAAU3zC,OAGvD,EAAAw0C,UAAAA,YAAR,SAAoBzhD,EAAeC,GAGjC,IAFA,IAAMuZ,EAAkB1gB,KAAK8nD,UAAUpnC,OACjCupC,EAAUvpC,EAAO8I,MAAMnuB,OAAO8N,WAC3BxL,EAAIuJ,EAAOvJ,GAAKwJ,EAAKxJ,IAAK,CACjC,IAAMu5B,EAAWxW,EAAOogC,4BAA4BpgC,EAAOgL,MAAQ/tB,GAAG,GAChEusD,GAAYxpC,EAAOgL,MAAQ/tB,EAAI,GAAGwL,WAClC4uB,EAAU/3B,KAAKooD,aAAazqD,GAC9Bo6B,IACsB,IAApBb,EAAS77B,OACX08B,EAAQoyB,UAAY,SAEpBpyB,EAAQ8T,YAAc3U,EAExBa,EAAQ2M,aAAa,gBAAiBwlB,GACtCnyB,EAAQ2M,aAAa,eAAgBulB,IAGzCjqD,KAAKoqD,uBAGC,EAAA3B,UAAAA,uBAAR,WACE,GAAKzoD,KAAK4hC,eAAemJ,WAAWvS,iBAApC,CAGIx4B,KAAKooD,aAAa/sD,SAAW2E,KAAK8nD,UAAU3zC,MAC9CnU,KAAK+oD,UAAU/oD,KAAK8nD,UAAU3zC,MAEhC,IAAK,IAAIxW,EAAI,EAAGA,EAAIqC,KAAK8nD,UAAU3zC,KAAMxW,IACvCqC,KAAK8pD,sBAAsB9pD,KAAKooD,aAAazqD,MAIzC,EAAAmsD,UAAAA,sBAAR,SAA8B/xB,GAC5BA,EAAQtlB,MAAMsC,OAAY/U,KAAK4hC,eAAemJ,WAAWvS,iBAAgB,MAGnE,EAAA4xB,UAAAA,oBAAR,WACuC,IAAjCpqD,KAAKioD,iBAAiB5sD,SAG1B2E,KAAK6oD,YAAYhd,aAAe7rC,KAAKioD,iBACrCjoD,KAAKioD,iBAAmB,KAE5B,EA1PE,CA1BwC,EAAAlmD,YAA7B,EAAAygC,iCCjBb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,iBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EASI6nB,EAAAA,IAAAA,EAAiB,EAOrB,EAcE,SAAA,GAAA,SACUh5C,EAAAA,EACSsrC,EACA/J,EACA/N,EACAylB,EACAC,EACkBtoB,EACDzwB,EACDD,GATnC,IAWE,EAAA,EAAO,KAAA,OAAA,YAVC,EAAAF,QACS,EAAA,EAAAsrC,SACA,EAAA,EAAA/J,eACA,EAAA,EAAA/N,iBACA,EAAA,EAAAylB,WACA,EAAA,EAAAC,YACkB,EAAA,EAAAtoB,iBACD,EAAA,EAAAzwB,gBACD,EAAA,EAAAD,eArB3B,EAAA,EAAAi5C,eAAyBH,IAKzB,EAAAjC,aAA8B,GAmBpC,EAAKD,cAAgB91C,SAASC,cAAc,OAC5C,EAAK61C,cAAc51C,UAAUC,IAxCL,cAyCxB,EAAK21C,cAAc11C,MAAM85B,WAAa,SACtC,EAAK4b,cAAczjB,aAAa,cAAe,QAC/C,EAAK+lB,oBAAoB,EAAKl5C,eAAegI,KAAM,EAAKhI,eAAe4C,MACvE,EAAKu2C,oBAAsBr4C,SAASC,cAAc,OAClD,EAAKo4C,oBAAoBn4C,UAAUC,IAzCf,mBA0CpB,EAAKk4C,oBAAoBhmB,aAAa,cAAe,QAErD,EAAKqG,WAAa,CAChBt2B,gBAAiB,EACjBC,iBAAkB,EAClBH,gBAAiB,EACjBC,iBAAkB,EAClBG,eAAgB,EAChBC,cAAe,EACfE,kBAAmB,EACnBE,mBAAoB,EACpBC,YAAa,EACbC,aAAc,EACdqjB,gBAAiB,EACjBC,iBAAkB,GAEpB,EAAK6a,oBACL,EAAKsX,aAEL,EAAKC,YAAc,IAAI,EAAAC,sBAAsBx4C,SAAU,EAAKb,gBAAiB,EAAKH,SAElF,EAAKsrC,SAASpqC,UAAUC,IApEE,4BAoE0B,EAAKg4C,gBACzD,EAAK5X,eAAejgC,YAAY,EAAKw1C,eACrC,EAAKvV,eAAejgC,YAAY,EAAK+3C,qBAErC,EAAKJ,WAAWvO,oBAAoB,SAAAh/C,GAAK,OAAK+tD,EAAAA,aAAa/tD,KAC3D,EAAKutD,WAAWrO,oBAAoB,SAAAl/C,GAAK,OAAKguD,EAAAA,aAAahuD,KAE3D,EAAKwtD,YAAYxO,oBAAoB,SAAAh/C,GAAK,OAAK+tD,EAAAA,aAAa/tD,KAC5D,EAAKwtD,YAAYtO,oBAAoB,SAAAl/C,GAAK,OAAKguD,EAAAA,aAAahuD,OAqThE,OAnXiC,EAY/B,EAAA,GAAA,OAAW,eAAA,EAAe,UAAA,kBAAA,KAA1B,WAA4D,OAAO,IAAI,EAAA4D,cAAoC6nB,mBAqDpG,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,WACEJ,KAAK28C,SAASpqC,UAAUywB,OAhFE,4BAgF6BhjC,KAAKwqD,gBAI5D,EAAA53C,wBAAwB5S,KAAKmoD,cAAenoD,KAAK0qD,oBAAqB1qD,KAAKgrD,mBAAoBhrD,KAAKirD,yBAEpG,EAAM7qD,UAAAA,QAAO,KAGP,OAAA,EAAAizC,UAAAA,kBAAR,WACErzC,KAAK+qC,WAAWt2B,gBAAkBzU,KAAKiiC,iBAAiBptB,MAAQjX,OAAO4X,iBACvExV,KAAK+qC,WAAWr2B,iBAAmBtK,KAAKsB,KAAK1L,KAAKiiC,iBAAiBltB,OAASnX,OAAO4X,kBACnFxV,KAAK+qC,WAAWx2B,gBAAkBvU,KAAK+qC,WAAWt2B,gBAAkBrK,KAAKC,MAAMrK,KAAKwR,gBAAgB9K,QAAQktC,eAC5G5zC,KAAK+qC,WAAWv2B,iBAAmBpK,KAAKqkC,MAAMzuC,KAAK+qC,WAAWr2B,iBAAmB1U,KAAKwR,gBAAgB9K,QAAQ6lC,YAC9GvsC,KAAK+qC,WAAWp2B,eAAiB,EACjC3U,KAAK+qC,WAAWn2B,cAAgB,EAChC5U,KAAK+qC,WAAWj2B,kBAAoB9U,KAAK+qC,WAAWx2B,gBAAkBvU,KAAKuR,eAAegI,KAC1FvZ,KAAK+qC,WAAW/1B,mBAAqBhV,KAAK+qC,WAAWv2B,iBAAmBxU,KAAKuR,eAAe4C,KAC5FnU,KAAK+qC,WAAW91B,YAAc7K,KAAKC,MAAMrK,KAAK+qC,WAAWj2B,kBAAoBlX,OAAO4X,kBACpFxV,KAAK+qC,WAAW71B,aAAe9K,KAAKC,MAAMrK,KAAK+qC,WAAW/1B,mBAAqBpX,OAAO4X,kBACtFxV,KAAK+qC,WAAWxS,gBAAkBv4B,KAAK+qC,WAAW91B,YAAcjV,KAAKuR,eAAegI,KACpFvZ,KAAK+qC,WAAWvS,iBAAmBx4B,KAAK+qC,WAAW71B,aAAelV,KAAKuR,eAAe4C,KAEtF,IAAsB,IAAAnU,EAAAA,EAAAA,EAAAA,KAAKooD,aAAL,EAAmB,EAAA,OAAA,IAAA,CAApC,IAAMrwB,EAAO,EAChBA,GAAAA,EAAQtlB,MAAMoC,MAAW7U,KAAK+qC,WAAW91B,YAAW,KACpD8iB,EAAQtlB,MAAMsC,OAAY/U,KAAK+qC,WAAWvS,iBAAgB,KAC1DT,EAAQtlB,MAAM85B,WAAgBvsC,KAAK+qC,WAAWvS,iBAAgB,KAE9DT,EAAQtlB,MAAMy4C,SAAW,SAGtBlrD,KAAKirD,0BACRjrD,KAAKirD,wBAA0B54C,SAASC,cAAc,SACtDtS,KAAK4yC,eAAejgC,YAAY3S,KAAKirD,0BAGvC,IAAME,EACDnrD,KAAKorD,kBAAiB,wFAIdprD,KAAK+qC,WAAWxS,gBAAe,MAG5Cv4B,KAAKirD,wBAAwBd,UAAYgB,EAEzCnrD,KAAK0qD,oBAAoBj4C,MAAMsC,OAAS/U,KAAK6kC,iBAAiBpyB,MAAMsC,OACpE/U,KAAK4yC,eAAengC,MAAMoC,MAAW7U,KAAK+qC,WAAW91B,YAAW,KAChEjV,KAAK4yC,eAAengC,MAAMsC,OAAY/U,KAAK+qC,WAAW71B,aAAY,MAG7D,EAAAtB,UAAAA,UAAP,SAAiBqe,GACfjyB,KAAKqR,QAAU4gB,EACfjyB,KAAK2qD,cAGC,EAAAA,UAAAA,WAAR,WACO3qD,IAAAA,EAAAA,KAAAA,KAAKgrD,qBACRhrD,KAAKgrD,mBAAqB34C,SAASC,cAAc,SACjDtS,KAAK4yC,eAAejgC,YAAY3S,KAAKgrD,qBAIvC,IAAIG,EACCnrD,KAAKorD,kBAAiB,yBACdprD,KAAKqR,QAAQ8F,WAAWtN,IAAG,kBACrB7J,KAAKwR,gBAAgB9K,QAAQkT,WAAU,gBACzC5Z,KAAKwR,gBAAgB9K,QAAQiT,SAAQ,OAGtDwxC,GACKnrD,KAAKorD,kBAAiB,cAAc,EAAAC,WAAU,oBAChCrrD,KAAKwR,gBAAgB9K,QAAQgT,WAAU,KAErD1Z,KAAKorD,kBAAiB,SAAS,EAAAC,WAAU,mBAC3BrrD,KAAKwR,gBAAgB9K,QAAQ+S,eAAc,KAEzDzZ,KAAKorD,kBAAiB,SAAS,EAAAE,aAAY,0BAIhDH,GACE,+BAAsCnrD,KAAKwqD,eAAiB,iCAK9DW,GACE,0BAAiCnrD,KAAKwqD,eAAiB,8BAEhCxqD,KAAKqR,QAAQwhB,OAAOhpB,IAAG,aAClC7J,KAAKqR,QAAQyhB,aAAajpB,IAAG,gCAGlB7J,KAAKqR,QAAQyhB,aAAajpB,IAAG,aACxC7J,KAAKqR,QAAQwhB,OAAOhpB,IAAG,OAIrCshD,GACKnrD,KAAKorD,kBAAiB,mCAAkD,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,yBAC5FxrD,KAAKqR,QAAQwhB,OAAOhpB,IAAG,2BAG3C7J,KAAKorD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,SAAS,EAAAD,yBAAwB,mCACjGxrD,KAAKwqD,eAAiB,0BAE1DxqD,KAAKorD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAE,mBAAkB,IAAI,EAAAD,yBAAwB,6BACjGxrD,KAAKwqD,eAAiB,0BAErDxqD,KAAKorD,kBAAiB,6BAA4C,EAAAG,aAAY,IAAI,EAAAC,yBAAwB,wBACvFxrD,KAAKqR,QAAQwhB,OAAOhpB,IAAG,YAClC7J,KAAKqR,QAAQyhB,aAAajpB,IAAG,KAErC7J,KAAKorD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAG,uBAAsB,kBAC5E1rD,KAAKwR,gBAAgB9K,QAAQ00C,YAAW,UAAUp7C,KAAKqR,QAAQwhB,OAAOhpB,IAAG,WAEtF7J,KAAKorD,kBAAiB,iBAA6B,EAAAG,aAAY,IAAI,EAAAI,6BAA4B,2BACzE3rD,KAAKqR,QAAQwhB,OAAOhpB,IAAG,WAGlDshD,GACKnrD,KAAKorD,kBAAiB,8FAOtBprD,KAAKorD,kBAAiB,iEAEHprD,KAAKqR,QAAQ2iB,qBAAqBnqB,IAAG,KAG7D7J,KAAKqR,QAAQ6F,KAAK00C,QAAQ,SAACxtD,EAAGT,GAC5BwtD,GACK,EAAKC,kBAAiB,cAAuBztD,EAAC,aAAaS,EAAEyL,IAAG,MAChE,EAAKuhD,kBAAiB,cAAuBztD,EAAC,wBAAwBS,EAAEyL,IAAG,QAElFshD,GACKnrD,KAAKorD,kBAAiB,cAAuB,EAAAxiD,uBAAsB,aAAa,EAAAe,MAAMe,OAAO1K,KAAKqR,QAAQ0E,YAAYlM,IAAG,MACzH7J,KAAKorD,kBAAiB,cAAuB,EAAAxiD,uBAAsB,wBAAwB5I,KAAKqR,QAAQ8F,WAAWtN,IAAG,MAE3H7J,KAAKgrD,mBAAmBb,UAAYgB,GAG/B,EAAA5X,UAAAA,yBAAP,WACEvzC,KAAKqzC,qBAGC,EAAAoX,UAAAA,oBAAR,SAA4BlxC,EAAcpF,GAExC,IAAK,IAAIxW,EAAIqC,KAAKooD,aAAa/sD,OAAQsC,GAAKwW,EAAMxW,IAAK,CACrD,IAAMguB,EAAMtZ,SAASC,cAAc,OACnCtS,KAAKmoD,cAAcx1C,YAAYgZ,GAC/B3rB,KAAKooD,aAAajoD,KAAKwrB,GAGzB,KAAO3rB,KAAKooD,aAAa/sD,OAAS8Y,GAChCnU,KAAKmoD,cAAcjqC,YAAYle,KAAKooD,aAAa55B,QAI9C,EAAA2M,UAAAA,SAAP,SAAgB5hB,EAAcpF,GAC5BnU,KAAKyqD,oBAAoBlxC,EAAMpF,GAC/BnU,KAAKqzC,qBAGA,EAAAG,UAAAA,kBAAP,WACExzC,KAAKqzC,qBAGA,EAAAjgC,UAAAA,OAAP,WACEpT,KAAKmoD,cAAc51C,UAAUywB,OAzPb,gBA4PX,EAAA3vB,UAAAA,QAAP,WACErT,KAAKmoD,cAAc51C,UAAUC,IA7Pb,gBAgQX,EAAAkB,UAAAA,mBAAP,SAA0BxM,EAAqCC,EAAmCwM,GAEhG,KAAO3T,KAAK0qD,oBAAoBb,SAASxuD,QACvC2E,KAAK0qD,oBAAoBxsC,YAAYle,KAAK0qD,oBAAoBb,SAAS,IAIzE,GAAK3iD,GAAUC,EAAf,CAKA,IAAMmyC,EAAmBpyC,EAAM,GAAKlH,KAAKuR,eAAemP,OAAOgL,MACzD6tB,EAAiBpyC,EAAI,GAAKnH,KAAKuR,eAAemP,OAAOgL,MACrD8tB,EAAyBpvC,KAAKqB,IAAI6tC,EAAkB,GACpDG,EAAuBrvC,KAAKwB,IAAI2tC,EAAgBv5C,KAAKuR,eAAe4C,KAAO,GAGjF,KAAIqlC,GAA0Bx5C,KAAKuR,eAAe4C,MAAQslC,EAAuB,GAAjF,CAKA,IAAMoS,EAAmBx5C,SAASuyB,yBAElC,GAAIjxB,EACFk4C,EAAiBl5C,YACf3S,KAAK8rD,wBAAwBtS,EAAwBtyC,EAAM,GAAIC,EAAI,GAAIsyC,EAAuBD,EAAyB,QAEpH,CAEL,IAAM17B,EAAWw7B,IAAqBE,EAAyBtyC,EAAM,GAAK,EACpE6W,EAASy7B,IAA2BC,EAAuBtyC,EAAI,GAAKnH,KAAKuR,eAAegI,KAC9FsyC,EAAiBl5C,YAAY3S,KAAK8rD,wBAAwBtS,EAAwB17B,EAAUC,IAE5F,IAAM47B,EAAkBF,EAAuBD,EAAyB,EAGxE,GAFAqS,EAAiBl5C,YAAY3S,KAAK8rD,wBAAwBtS,EAAyB,EAAG,EAAGx5C,KAAKuR,eAAegI,KAAMogC,IAE/GH,IAA2BC,EAAsB,CAEnD,IAAM,EAASF,IAAmBE,EAAuBtyC,EAAI,GAAKnH,KAAKuR,eAAegI,KACtFsyC,EAAiBl5C,YAAY3S,KAAK8rD,wBAAwBrS,EAAsB,EAAG,KAGvFz5C,KAAK0qD,oBAAoB/3C,YAAYk5C,MAS/B,EAAAC,UAAAA,wBAAR,SAAgCngC,EAAaogC,EAAkBC,EAAgB3zB,QAAA,IAAAA,IAAA,EAAA,GAC7E,IAAMN,EAAU1lB,SAASC,cAAc,OAKvC,OAJAylB,EAAQtlB,MAAMsC,OAAYsjB,EAAWr4B,KAAK+qC,WAAWvS,iBAAgB,KACrET,EAAQtlB,MAAM2b,IAASzC,EAAM3rB,KAAK+qC,WAAWvS,iBAAgB,KAC7DT,EAAQtlB,MAAMylB,KAAU6zB,EAAW/rD,KAAK+qC,WAAWxS,gBAAe,KAClER,EAAQtlB,MAAMoC,MAAW7U,KAAK+qC,WAAWxS,iBAAmByzB,EAASD,GAAS,KACvEh0B,GAGF,EAAAzkB,UAAAA,aAAP,aAIO,EAAAH,UAAAA,iBAAP,WAEEnT,KAAKqzC,oBACLrzC,KAAK2qD,cAGA,EAAApjD,UAAAA,MAAP,WACE,IAAgB,IAAAvH,EAAAA,EAAAA,EAAAA,KAAKooD,aAAL,EAAmB,EAAA,OAAA,IAAvB,EACR+B,GAAAA,UAAY,IAIX,EAAAxW,UAAAA,WAAP,SAAkBzsC,EAAeC,GAK/B,IAJA,IAAM8kD,EAAkBjsD,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOrL,EAChF4lC,EAAU7wC,KAAKwB,IAAI5L,KAAKuR,eAAemP,OAAOtL,EAAGpV,KAAKuR,eAAegI,KAAO,GAC5EuH,EAAc9gB,KAAKwR,gBAAgB9K,QAAQoa,YAExCzL,EAAInO,EAAOmO,GAAKlO,EAAKkO,IAAK,CACjC,IAAM62C,EAAalsD,KAAKooD,aAAa/yC,GACrC62C,EAAW/B,UAAY,GAEvB,IAAMx+B,EAAMtW,EAAIrV,KAAKuR,eAAemP,OAAOgL,MACrCwL,EAAWl3B,KAAKuR,eAAemP,OAAO8I,MAAM5qB,IAAI+sB,GAChD9K,EAAc7gB,KAAKwR,gBAAgB9K,QAAQma,YACjDqrC,EAAWv5C,YAAY3S,KAAK4qD,YAAYuB,UAAUj1B,EAAWvL,IAAQsgC,EAAiBprC,EAAao6B,EAASn6B,EAAa9gB,KAAK+qC,WAAWxS,gBAAiBv4B,KAAKuR,eAAegI,SAIlL,OAAY,eAAA,EAAiB,UAAA,oBAAA,KAA7B,WACE,MAAO,6BAA4BvZ,KAAKwqD,4BAGnC,EAAA,cAAA,IAAA,EAAAr0B,UAAAA,wBAAP,SAA+B1vB,GAA2C,OAAQ,GAC3E,EAAA4vB,UAAAA,0BAAP,SAAiCC,GAA6B,OAAO,GAE7D,EAAAw0B,UAAAA,aAAR,SAAqB/tD,GACnBiD,KAAKosD,kBAAkBrvD,EAAE0b,GAAI1b,EAAE2b,GAAI3b,EAAE4b,GAAI5b,EAAE6b,GAAI7b,EAAEwc,MAAM,IAGjD,EAAAwxC,UAAAA,aAAR,SAAqBhuD,GACnBiD,KAAKosD,kBAAkBrvD,EAAE0b,GAAI1b,EAAE2b,GAAI3b,EAAE4b,GAAI5b,EAAE6b,GAAI7b,EAAEwc,MAAM,IAGjD,EAAA6yC,UAAAA,kBAAR,SAA0Bh3C,EAAWsD,EAAYrD,EAAWuD,EAAYW,EAAc8yC,GACpF,KAAOj3C,IAAMsD,GAAMrD,IAAMuD,GAAI,CAC3B,IAAM+S,EAAM3rB,KAAKooD,aAAa/yC,GAC9B,IAAKsW,EACH,OAEF,IAAM2gC,EAAoB3gC,EAAIk+B,SAASz0C,GACnCk3C,IACFA,EAAK75C,MAAM85C,eAAiBF,EAAU,YAAc,UAEhDj3C,GAAKmE,IACTnE,EAAI,EACJC,OA/WgB,EAqBnB,CAAA,EAAApR,EAAAA,EAAAA,kBACA,EAAA3C,EAAAA,EAAAA,iBACA,EAAAR,EAAAA,EAAAA,iBAvBQwmC,GAcX,CAd+B,EAAAvlC,YAApB,EAAAulC,wBCxBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,sBAAA,EAAA,6BAAA,EAAA,uBAAA,EAAA,yBAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,EAGa,EAAA,IAAA,EAAA+jB,WAAa,aACb,EAAAmB,UAAY,YACZ,EAAAlB,aAAe,eACf,EAAAmB,gBAAkB,kBAClB,EAAAlB,aAAe,eACf,EAAAE,mBAAqB,qBACrB,EAAAD,yBAA2B,qBAC3B,EAAAE,uBAAyB,mBACzB,EAAAC,6BAA+B,yBAE5C,IAGE,EAAA,WAAA,SACmBpnB,EAAAA,EACA/yB,EACTH,GAFS,KAAAkzB,UACA,EAAA,KAAA/yB,gBACT,EAAA,KAAAH,QALF,EAAA,KAAAoQ,UAAsB,IAAI,EAAApe,SA+KpC,OAtKS,EAAAuQ,UAAAA,UAAP,SAAiBqe,GACfjyB,KAAKqR,QAAU4gB,GAGV,EAAAk6B,UAAAA,UAAP,SAAiBj1B,EAAuBw1B,EAAsB7rC,EAAiCo6B,EAAiBn6B,EAAsBmqB,EAAmB1xB,GASvJ,IARA,IAAMorB,EAAW3kC,KAAKukC,UAAUK,yBAO5B+nB,EAAa,EACRv3C,EAAIhL,KAAKwB,IAAIsrB,EAAS77B,OAAQke,GAAQ,EAAGnE,GAAK,EAAGA,IACxD,GAAI8hB,EAAS7a,SAASjH,EAAGpV,KAAKyhB,WAAW9d,YAAc,EAAAlB,gBAAmBiqD,GAAet3C,IAAM6lC,EAAU,CACvG0R,EAAav3C,EAAI,EACjB,MAIJ,IAASA,EAAI,EAAGA,EAAIu3C,EAAYv3C,IAAK,CACnC8hB,EAAS7a,SAASjH,EAAGpV,KAAKyhB,WAC1B,IAAM5M,EAAQ7U,KAAKyhB,UAAUje,WAG7B,GAAc,IAAVqR,EAAJ,CAIA,IAAM+3C,EAAc5sD,KAAKukC,UAAUjyB,cAAc,QAKjD,GAJIuC,EAAQ,IACV+3C,EAAYn6C,MAAMoC,MAAWo2B,EAAYp2B,EAAK,MAG5C63C,GAAet3C,IAAM6lC,EAOvB,OANA2R,EAAYr6C,UAAUC,IAAI,EAAA+4C,cAEtBzqC,GACF8rC,EAAYr6C,UAAUC,IAAI,EAAAi5C,oBAGpB5qC,GACN,IAAK,MACH+rC,EAAYr6C,UAAUC,IAAI,EAAAk5C,wBAC1B,MACF,IAAK,YACHkB,EAAYr6C,UAAUC,IAAI,EAAAm5C,8BAC1B,MACF,QACEiB,EAAYr6C,UAAUC,IAAI,EAAAg5C,0BAK5BxrD,KAAKyhB,UAAU7c,UACjBgoD,EAAYr6C,UAAUC,IAAI,EAAA64C,YAGxBrrD,KAAKyhB,UAAUzc,YACjB4nD,EAAYr6C,UAAUC,IAAI,EAAA84C,cAGxBtrD,KAAKyhB,UAAUxc,SACjB2nD,EAAYr6C,UAAUC,IAAI,EAAAg6C,WAGxBxsD,KAAKyhB,UAAU5c,eACjB+nD,EAAYr6C,UAAUC,IAAI,EAAAi6C,iBAGxBzsD,KAAKyhB,UAAU1c,cACjB6nD,EAAY/gB,YAAc,EAAAnpC,qBAE1BkqD,EAAY/gB,YAAc7rC,KAAKyhB,UAAUhe,YAAc,EAAAf,qBAGzD,IAAII,EAAK9C,KAAKyhB,UAAU9b,aACpBuU,EAAcla,KAAKyhB,UAAUvc,iBAC7BnC,EAAK/C,KAAKyhB,UAAU7b,aACpBwU,EAAcpa,KAAKyhB,UAAUtc,iBAC3BR,IAAc3E,KAAKyhB,UAAU9c,YACnC,GAAIA,EAAW,CACb,IAAM0V,EAAOvX,EACbA,EAAKC,EACLA,EAAKsX,EACL,IAAMC,EAAQJ,EACdA,EAAcE,EACdA,EAAcE,EAIhB,OAAQJ,GACN,KAAK,SACL,KAAK,SACCla,KAAKyhB,UAAU7c,UAAY9B,EAAK,GAAK9C,KAAKwR,gBAAgB9K,QAAQmQ,6BACpE/T,GAAM,GAEH9C,KAAK6sD,sBAAsBD,EAAa5sD,KAAKqR,QAAQ0E,WAAY/V,KAAKqR,QAAQ6F,KAAKpU,KACtF8pD,EAAYr6C,UAAUC,IAAI,YAAY1P,GAExC,MACF,KAAK,SACH,IAAM,EAAQ,EAAAmG,KAAKwB,QAChB3H,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAb,GAEG9C,KAAK6sD,sBAAsBD,EAAa5sD,KAAKqR,QAAQ0E,WAAY,IACpE/V,KAAK8sD,UAAUF,EAAa,UAAUG,EAASjqD,EAAGqG,SAAS,IAAK,IAAK,IAEvE,MACF,KAAK,EACL,QACOnJ,KAAK6sD,sBAAsBD,EAAa5sD,KAAKqR,QAAQ0E,WAAY/V,KAAKqR,QAAQ8F,aAC7ExS,GACFioD,EAAYr6C,UAAUC,IAAI,YAAY,EAAA5J,wBAM9C,OAAQwR,GACN,KAAK,SACL,KAAK,SACHwyC,EAAYr6C,UAAUC,IAAI,YAAYzP,GACtC,MACF,KAAK,SACH/C,KAAK8sD,UAAUF,EAAa,qBAAqBG,EAAShqD,EAAGoG,SAAS,IAAK,IAAK,IAChF,MACF,KAAK,EACL,QACMxE,GACFioD,EAAYr6C,UAAUC,IAAI,YAAY,EAAA5J,wBAI5C+7B,EAAShyB,YAAYi6C,IAEvB,OAAOjoB,GAGD,EAAAkoB,UAAAA,sBAAR,SAA8B90B,EAAsBh1B,EAAYD,GAC9D,GAA0D,IAAtD9C,KAAKwR,gBAAgB9K,QAAQmT,qBAC/B,OAAO,EAIT,IAAIC,EAAgB9Z,KAAKqR,QAAQ0I,cAAcC,SAASha,KAAKyhB,UAAU1e,GAAI/C,KAAKyhB,UAAU3e,IAQ1F,YALsBpC,IAAlBoZ,IACFA,EAAgB,EAAAnQ,MAAMY,oBAAoBxH,EAAID,EAAI9C,KAAKwR,gBAAgB9K,QAAQmT,sBAC/E7Z,KAAKqR,QAAQ0I,cAAcU,SAASza,KAAKyhB,UAAU1e,GAAI/C,KAAKyhB,UAAU3e,GAAIgX,MAAiB,EAAA,EAAA,SAGzFA,IACF9Z,KAAK8sD,UAAU/0B,EAAS,SAASje,EAAcjQ,MACxC,IAMH,EAAAijD,UAAAA,UAAR,SAAkB/0B,EAAsBtlB,GACtCslB,EAAQ2M,aAAa,QAAS,IAAG3M,EAAQwxB,aAAa,UAAY,IAAK92C,EAAK,MAEhF,EA7KE,GA+KF,SAASs6C,EAAS51B,EAAc61B,EAAiB3xD,GAC/C,KAAO87B,EAAK97B,OAASA,GACnB87B,EAAO61B,EAAU71B,EAEnB,OAAOA,EAtLI,EAAA0zB,kCChBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,2BAAA,EAAA,IAGMoC,EAAAA,EAAAA,IAAAA,EAA2D,CAE/DC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KAGVC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,KAAM,KACZC,IAAK,CAAC,IAAK,KACXC,IAAK,CAAC,IAAM,MAGd,EACE1rB,sBAAAA,SAAAA,EACA2rB,EACA9hD,EACA09B,GAEA,IAAM/iC,EAA0B,CAC9BjL,KAAM,EAGNusC,QAAQ,EAERppC,SAAKoB,GAED8tD,GAAa5rB,EAAGuF,SAAW,EAAI,IAAMvF,EAAGsF,OAAS,EAAI,IAAMtF,EAAGqF,QAAU,EAAI,IAAMrF,EAAG4H,QAAU,EAAI,GACzG,OAAQ5H,EAAG6H,SACT,KAAK,EACY,sBAAX7H,EAAGtjC,IAEH8H,EAAO9H,IADLivD,EACW,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXk0B,EAAGtjC,IAER8H,EAAO9H,IADLivD,EACW,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,yBAAXk0B,EAAGtjC,IAER8H,EAAO9H,IADLivD,EACW,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAGN,wBAAXk0B,EAAGtjC,MAER8H,EAAO9H,IADLivD,EACW,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,MAG1B,MACF,KAAK,EAEH,GAAIk0B,EAAGuF,SAAU,CACf/gC,EAAO9H,IAAM,EAAAwN,GAAGS,GAChB,MACK,GAAIq1B,EAAGsF,OAAQ,CACpB9gC,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,EAAA5B,GAAGkC,IACzB,MAEF5H,EAAO9H,IAAM,EAAAwN,GAAGkC,IAChB,MACF,KAAK,EAEH,GAAI4zB,EAAGuF,SAAU,CACf/gC,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,KACtB,MAEFtH,EAAO9H,IAAM,EAAAwN,GAAGU,GAChBpG,EAAOshC,QAAS,EAChB,MACF,KAAK,GAEHthC,EAAO9H,IAAMsjC,EAAGsF,OAAS,EAAAp7B,GAAG4B,IAAM,EAAA5B,GAAGc,GAAK,EAAAd,GAAGc,GAC7CxG,EAAOshC,QAAS,EAChB,MACF,KAAK,GAEHthC,EAAO9H,IAAM,EAAAwN,GAAG4B,IACZk0B,EAAGsF,SACL9gC,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,EAAA5B,GAAG4B,KAE3BtH,EAAOshC,QAAS,EAChB,MACF,KAAK,GAEH,GAAI9F,EAAG4H,QACL,MAEEgkB,GACFpnD,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAI5CpnD,EAAO9H,MAAQ,EAAAwN,GAAG4B,IAAM,UAC1BtH,EAAO9H,IAAM,EAAAwN,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvCrF,EAAO9H,IADEivD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIk0B,EAAG4H,QACL,MAEEgkB,GACFpnD,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAI5CpnD,EAAO9H,MAAQ,EAAAwN,GAAG4B,IAAM,UAC1BtH,EAAO9H,IAAM,EAAAwN,GAAG4B,KAAOjC,EAAQ,IAAM,WAGvCrF,EAAO9H,IADEivD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIk0B,EAAG4H,QACL,MAEEgkB,GACFpnD,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAI3C/hD,GAASrF,EAAO9H,MAAQ,EAAAwN,GAAG4B,IAAM,UACpCtH,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,UAGxBtH,EAAO9H,IADEivD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEH,GAAIk0B,EAAG4H,QACL,MAEEgkB,GACFpnD,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAI3C/hD,GAASrF,EAAO9H,MAAQ,EAAAwN,GAAG4B,IAAM,UACpCtH,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,UAGxBtH,EAAO9H,IADEivD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAEEk0B,EAAGuF,UAAavF,EAAGqF,UAGtB7gC,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,OAExB,MACF,KAAK,GAGDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAEnC,EAAA1hD,GAAG4B,IAAM,MAExB,MACF,KAAK,GAGDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IACvCD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAGDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IACvCD,EACI,EAAAzhD,GAAG4B,IAAM,KAET,EAAA5B,GAAG4B,IAAM,KAExB,MACF,KAAK,GAECk0B,EAAGuF,SACL/gC,EAAOjL,KAAO,EAEdiL,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,MAExB,MACF,KAAK,GAECk0B,EAAGuF,SACL/gC,EAAOjL,KAAO,EAEdiL,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM,MAExB,MACF,KAAK,IAGDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAEnC,EAAA1hD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAEnC,EAAA1hD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAEnC,EAAA1hD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,OAAS8/C,EAAY,GAAK,IAEnC,EAAA1hD,GAAG4B,IAAM,KAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,KAAK,IAEDtH,EAAO9H,IADLkvD,EACW,EAAA1hD,GAAG4B,IAAM,QAAU8/C,EAAY,GAAK,IAEpC,EAAA1hD,GAAG4B,IAAM,OAExB,MACF,QAEE,IAAIk0B,EAAGqF,SAAYrF,EAAGuF,UAAavF,EAAGsF,QAAWtF,EAAG4H,QAiB7C,GAAM/9B,IAAS09B,IAAoBvH,EAAGsF,QAAWtF,EAAG4H,QAUhD/9B,IAAUm2B,EAAGsF,SAAWtF,EAAGqF,SAAWrF,EAAG4H,QAC/B,KAAf5H,EAAG6H,UACLrjC,EAAOjL,KAAO,GAEPymC,EAAGtjC,MAAQsjC,EAAGqF,UAAYrF,EAAGsF,SAAWtF,EAAG4H,SAAW5H,EAAG6H,SAAW,IAAwB,IAAlB7H,EAAGtjC,IAAIjE,OAE1F+L,EAAO9H,IAAMsjC,EAAGtjC,IACPsjC,EAAGtjC,KAAOsjC,EAAGqF,SACP,MAAXrF,EAAGtjC,MACL8H,EAAO9H,IAAM,EAAAwN,GAAGgC,QAnBgD,CAElE,IAAM2/C,EAAaxB,EAAqBrqB,EAAG6H,SACrCnrC,EAAMmvD,GAAcA,EAAY7rB,EAAGuF,SAAe,EAAJ,GACpD,GAAI7oC,EACF8H,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAMpP,OACjB,GAAIsjC,EAAG6H,SAAW,IAAM7H,EAAG6H,SAAW,GAAI,CAC/C,IAAMA,EAAU7H,EAAGqF,QAAUrF,EAAG6H,QAAU,GAAK7H,EAAG6H,QAAU,GAC5DrjC,EAAO9H,IAAM,EAAAwN,GAAG4B,IAAM3H,OAAOC,aAAayjC,SAxBxC7H,EAAG6H,SAAW,IAAM7H,EAAG6H,SAAW,GACpCrjC,EAAO9H,IAAMyH,OAAOC,aAAa47B,EAAG6H,QAAU,IACtB,KAAf7H,EAAG6H,QACZrjC,EAAO9H,IAAM,EAAAwN,GAAGC,IACP61B,EAAG6H,SAAW,IAAM7H,EAAG6H,SAAW,GAE3CrjC,EAAO9H,IAAMyH,OAAOC,aAAa47B,EAAG6H,QAAU,GAAK,IAC3B,KAAf7H,EAAG6H,QACZrjC,EAAO9H,IAAM,EAAAwN,GAAGkC,IACQ,MAAf4zB,EAAG6H,QACZrjC,EAAO9H,IAAM,EAAAwN,GAAG4B,IACQ,MAAfk0B,EAAG6H,QACZrjC,EAAO9H,IAAM,EAAAwN,GAAG6B,GACQ,MAAfi0B,EAAG6H,UACZrjC,EAAO9H,IAAM,EAAAwN,GAAG8B,IA2BxB,OAAOxH,aC/WT,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,mBAAA,EAAA,IACA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EAEA,EAAA,GAAA,EACA,EAAA,GAAA,EAQA,EAAA,GAAA,EA2BE,SAAA,GAAA,SACUsnD,EAAAA,EACAz1B,EACRyK,EACiBjJ,EACCk0B,EACF5a,GANlB,IAQE,EAAA,EAAO,KAAA,OAAA,KAwBP,GA/BQ,EAAA2a,UACA,EAAA,EAAAz1B,UAvBF,EAAA,EAAA21B,WAAqB,EACrB,EAAAC,mBAA6B,EAC7B,EAAAC,yBAAmC,EACnC,EAAAC,wBAAkC,EAClC,EAAAC,aAAuB,EACvB,EAAAC,cAAwB,EACxB,EAAAC,gBAAmC,CACzChoD,WAAOxG,EACPyG,SAAKzG,EACLiT,kBAAkB,GAGZ,EAAAw7C,oBAAsB,IAAI,EAAAxuD,aAE1B,EAAAw/B,UAAY,IAAI,EAAAx/B,aAEhB,EAAAyuD,kBAAoB,IAAI,EAAAzuD,aAe9B,EAAKpE,SAAS,CAAE6D,QAAS,WAAM,OAAKsuD,EAAAA,UAAUtuD,aAE9C,EAAKivD,iBAAmB,IAAI,EAAA/1B,gBAAgB,SAACpyB,EAAOC,GAAQ,OAAKwhD,EAAAA,YAAYzhD,EAAOC,KACpF,EAAK5K,SAAS,EAAK8yD,kBAEnB,EAAKjG,kBAAoB,IAAI,EAAAnvB,iBAC7B,EAAKmvB,kBAAkB5vB,YAAY,WAAM,OAAK+Z,EAAAA,6BAC9C,EAAKh3C,SAAS,EAAK6sD,mBAEnB,EAAK7sD,SAASw3C,EAAc5Y,SAAS,SAAAp+B,GAAK,OAAKuyD,EAAAA,kBAC/C,EAAK/yD,SAASk+B,EAAegL,eAAe,WAAM,OAAKipB,EAAAA,UAAUv7C,sBACjE,EAAK5W,SAASoyD,EAAgBY,iBAAiB,WAAM,OAAK/b,EAAAA,uBAG1D,EAAKkb,UAAUjoB,gBAAgB,SAAA1pC,GAAK,OAAK0sC,EAAAA,YAAY1sC,EAAEmK,MAAOnK,EAAEoK,KAAK,KAIrE,EAAK5K,SAAS,EAAA4mC,yBAAyBvlC,OAAQ,SAAU,WAAM,OAAK21C,EAAAA,8BAIhE,yBAA0B31C,OAAQ,CACpC,IAAM,EAAW,IAAI4xD,qBAAqB,SAAAzyD,GAAK,OAAK0yD,EAAAA,sBAAsB1yD,EAAEA,EAAE1B,OAAS,KAAK,CAAEq0D,UAAW,IACzG,EAASC,QAAQjsB,GACjB,EAAKnnC,SAAS,CAAE6D,QAAS,WAAM,OAASwvD,EAAAA,uBAmI9C,EAAA,OAjMmC,EAmBjC,EAAA,GAAA,OAAW,eAAA,EAAkB,UAAA,qBAAA,KAA7B,WAA6D,OAAO5vD,KAAKmvD,oBAAoB3mC,mBAE7F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAsB,UAAA,yBAAA,KAAjC,WAA8E,OAAOxoB,KAAKmgC,UAAU3X,mBAEpG,EAAA,cAAA,IAAA,OAAW,eAAA,EAAgB,UAAA,mBAAA,KAA3B,WAAwE,OAAOxoB,KAAKovD,kBAAkB5mC,mBAEtG,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAA6C,OAAOxoB,KAAK0uD,UAAU3jB,wBAyC3D,EAAA,cAAA,IAAA,EAAA0kB,UAAAA,sBAAR,SAA8Bp9B,GAC5BryB,KAAK4uD,UAAwC,IAA5Bv8B,EAAMw9B,mBAClB7vD,KAAK4uD,WAAa5uD,KAAK6uD,oBAC1B7uD,KAAKypC,YAAY,EAAGzpC,KAAKi5B,UAAY,GACrCj5B,KAAK6uD,mBAAoB,IAItB,EAAAplB,UAAAA,YAAP,SAAmBviC,EAAeC,EAAa2oD,QAAA,IAAAA,IAAA,GAAA,GACzC9vD,KAAK4uD,UACP5uD,KAAK6uD,mBAAoB,GAGtBiB,IACH9vD,KAAK8uD,yBAA0B,GAEjC9uD,KAAKqvD,iBAAiBv2B,QAAQ5xB,EAAOC,EAAKnH,KAAKi5B,aAGzC,EAAA0vB,UAAAA,YAAR,SAAoBzhD,EAAeC,GACjCnH,KAAK0uD,UAAU/a,WAAWzsC,EAAOC,GAG7BnH,KAAK+uD,yBACP/uD,KAAK0uD,UAAUh7C,mBAAmB1T,KAAKkvD,gBAAgBhoD,MAAOlH,KAAKkvD,gBAAgB/nD,IAAKnH,KAAKkvD,gBAAgBv7C,kBAC7G3T,KAAK+uD,wBAAyB,GAI3B/uD,KAAK8uD,yBACR9uD,KAAKmgC,UAAU7/B,KAAK,CAAE4G,MAAK,EAAEC,IAAG,IAElCnH,KAAK8uD,yBAA0B,GAG1B,EAAAx6C,UAAAA,OAAP,SAAciF,EAAcpF,GAC1BnU,KAAKi5B,UAAY9kB,EACjBnU,KAAK+vD,uBAGA,EAAAC,UAAAA,cAAP,WACEhwD,KAAK0uD,UAAUv7C,mBACfnT,KAAKypC,YAAY,EAAGzpC,KAAKi5B,UAAY,GACrCj5B,KAAK+vD,uBAGC,EAAAA,UAAAA,oBAAR,WAEM/vD,KAAK0uD,UAAU3jB,WAAW91B,cAAgBjV,KAAKgvD,cAAgBhvD,KAAK0uD,UAAU3jB,WAAW71B,eAAiBlV,KAAKivD,eAGnHjvD,KAAKmvD,oBAAoB7uD,KAAKN,KAAK0uD,UAAU3jB,aAGxC,EAAA3qC,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KAGR,OAAA,EAAA+hC,UAAAA,YAAP,SAAmBuD,GAAnB,IAEE1lC,EAAAA,KAAAA,KAAK0uD,UAAUtuD,UACfJ,KAAK0uD,UAAYhpB,EACjB1lC,KAAK0uD,UAAUjoB,gBAAgB,SAAA1pC,GAAK,OAAK0sC,EAAAA,YAAY1sC,EAAEmK,MAAOnK,EAAEoK,KAAK,KAGrEnH,KAAK+uD,wBAAyB,EAC9B/uD,KAAKsvD,gBAGC,EAAAA,UAAAA,aAAR,WACMtvD,KAAK4uD,UACP5uD,KAAK6uD,mBAAoB,EAEzB7uD,KAAKypC,YAAY,EAAGzpC,KAAKi5B,UAAY,IAIlC,EAAArlB,UAAAA,UAAP,SAAiBqe,GACfjyB,KAAK0uD,UAAU96C,UAAUqe,GACzBjyB,KAAKsvD,gBAGA,EAAA/b,UAAAA,yBAAP,WACEvzC,KAAK0uD,UAAUnb,2BACfvzC,KAAKypC,YAAY,EAAGzpC,KAAKi5B,UAAY,IAGhC,EAAAkC,UAAAA,SAAP,SAAgB5hB,EAAcpF,GAC5BnU,KAAK0uD,UAAUvzB,SAAS5hB,EAAMpF,GAC9BnU,KAAKsvD,gBAIA,EAAA9b,UAAAA,kBAAP,WACExzC,KAAK0uD,UAAUlb,qBAGV,EAAApgC,UAAAA,OAAP,WACEpT,KAAK0uD,UAAUt7C,UAGV,EAAAC,UAAAA,QAAP,WACErT,KAAK0uD,UAAUr7C,WAGV,EAAAK,UAAAA,mBAAP,SAA0BxM,EAAqCC,EAAmCwM,GAChG3T,KAAKkvD,gBAAgBhoD,MAAQA,EAC7BlH,KAAKkvD,gBAAgB/nD,IAAMA,EAC3BnH,KAAKkvD,gBAAgBv7C,iBAAmBA,EACxC3T,KAAK0uD,UAAUh7C,mBAAmBxM,EAAOC,EAAKwM,IAGzC,EAAAL,UAAAA,aAAP,WACEtT,KAAK0uD,UAAUp7C,gBAGV,EAAA/L,UAAAA,MAAP,WACEvH,KAAK0uD,UAAUnnD,SAGV,EAAA4uB,UAAAA,wBAAP,SAA+B1vB,GAC7B,OAAOzG,KAAK0uD,UAAUv4B,wBAAwB1vB,IAGzC,EAAA4vB,UAAAA,0BAAP,SAAiCC,GAC/B,OAAOt2B,KAAK0uD,UAAUr4B,0BAA0BC,IA/L1B,EA+BrB,CAAA,EAAAh1B,EAAAA,EAAAA,iBACA,EAAA2C,EAAAA,EAAAA,kBACA,EAAAnD,EAAAA,EAAAA,iBAjCQ6kC,GA2BX,CA3BiC,EAAA5jC,YAAtB,EAAA4jC,0BChBb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAGA,EAAA,GAAA,EAYE,WAAA,SACEtzB,EAAAA,EACA4L,EACkCzM,GAAA,KAAAA,gBAZ7B,EAAA,KAAAqD,MAAgB,EAChB,KAAAE,OAAiB,EAKhB,KAAAk7C,kBAAoB,IAAI,EAAAtvD,aAQ9BX,KAAKkwD,iBAAmB,IAAIC,EAAmB99C,EAAU4L,EAAeje,KAAKwR,iBAWjF,OArBE,OAAW,eAAA,EAAY,UAAA,eAAA,KAAvB,WAAqC,OAAOxR,KAAK6U,MAAQ,GAAK7U,KAAK+U,OAAS,eAG5E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAgB,UAAA,mBAAA,KAA3B,WAA8C,OAAO/U,KAAKiwD,kBAAkBznC,mBAUrE,EAAA,cAAA,IAAA,EAAA0Z,UAAAA,QAAP,WACE,IAAM96B,EAASpH,KAAKkwD,iBAAiBhuB,UACjC96B,EAAOyN,QAAU7U,KAAK6U,OAASzN,EAAO2N,SAAW/U,KAAK+U,SACxD/U,KAAK6U,MAAQzN,EAAOyN,MACpB7U,KAAK+U,OAAS3N,EAAO2N,OACrB/U,KAAKiwD,kBAAkB3vD,SAzBD,EAevB,CAAA,EAAAgB,EAAAA,EAAAA,kBAfQ8jC,GAYX,GAZW,EAAAA,gBA6Cb,EAAA,IAIE,EAAA,WAAA,SACUb,EAAAA,EACA6rB,EACA5+C,GAFA,KAAA+yB,UACA,EAAA,KAAA6rB,eACA,EAAA,KAAA5+C,gBANF,EAAA,KAAA6+C,QAA0B,CAAEx7C,MAAO,EAAGE,OAAQ,GAQpD/U,KAAKswD,gBAAkBtwD,KAAKukC,UAAUjyB,cAAc,QACpDtS,KAAKswD,gBAAgB/9C,UAAUC,IAAI,8BACnCxS,KAAKswD,gBAAgBzkB,YAAc,IACnC7rC,KAAKswD,gBAAgB5rB,aAAa,cAAe,QACjD1kC,KAAKowD,eAAez9C,YAAY3S,KAAKswD,iBAmBzC,OAhBS,EAAApuB,UAAAA,QAAP,WACEliC,KAAKswD,gBAAgB79C,MAAMmH,WAAa5Z,KAAKwR,gBAAgB9K,QAAQkT,WACrE5Z,KAAKswD,gBAAgB79C,MAAMkH,SAAc3Z,KAAKwR,gBAAgB9K,QAAQiT,SAAQ,KAG9E,IAAM42C,EAAWvwD,KAAKswD,gBAAgBt4B,wBAStC,OALuB,IAAnBu4B,EAAS17C,OAAmC,IAApB07C,EAASx7C,SACnC/U,KAAKqwD,QAAQx7C,MAAQ07C,EAAS17C,MAC9B7U,KAAKqwD,QAAQt7C,OAAS3K,KAAKsB,KAAK6kD,EAASx7C,SAGpC/U,KAAKqwD,SAEhB,EA5BE,aCrDF,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAEA,EAAA,IAAA,EAGE,WAAA,SACmCzuB,EAAAA,EACEK,GADF,KAAAL,eACE,EAAA,KAAAK,iBAqBvC,EAAA,OAjBS,EAAAof,UAAAA,UAAP,SAAiB74B,EAA2CuP,EAAsBK,EAAkBC,EAAkBI,GACpH,OAAO,EAAA4oB,UACL74B,EACAuP,EACAK,EACAC,EACAr4B,KAAKiiC,iBAAiB6I,aACtB9qC,KAAK4hC,eAAemJ,WAAWxS,gBAC/Bv4B,KAAK4hC,eAAemJ,WAAWvS,iBAC/BC,IAIG,EAAAiP,UAAAA,iBAAP,SAAwBlf,EAAmBuP,EAAsBK,EAAkBC,GACjF,IAAMK,EAAS14B,KAAKqhD,UAAU74B,EAAOuP,EAASK,EAAUC,GACxD,OAAO,EAAAqP,iBAAiBhP,IAxBH,EAIpB,CAAA,EAAAt0B,EAAAA,EAAAA,gBACA,EAAAH,EAAAA,EAAAA,mBALQ+hC,GAGX,GAHW,EAAAA,yBCAb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,gBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EAYA,EAAA,GAAA,EAkBE,SAAA,GAAA,SACmCz0B,EAAAA,GADnC,IAGE,EAAA,EAAO,KAAA,OAAA,YAF0B,EAAAA,eAf3B,EAAA,EAAAi/C,eAAkC,GAGlC,EAAAC,sBAAuC,GAEvC,EAAAC,aAAuB,EAEvB,EAAAC,aAAuB,EAEvB,EAAA3U,qBAAuB,EAAKz/C,SAAS,IAAI,EAAAoE,cAEzC,EAAAu7C,qBAAuB,EAAK3/C,SAAS,IAAI,EAAAoE,cAO/C,EAAKpE,SAAS,EAAAq0D,0BAA0B,EAAKH,0BA4VjD,OAlXgC,EAc9B,EAAA,GAAA,OAAW,eAAA,EAAmB,UAAA,sBAAA,KAA9B,WAA4D,OAAOzwD,KAAKg8C,qBAAqBxzB,mBAE7F,EAAA,cAAA,IAAA,OAAW,eAAA,EAAmB,UAAA,sBAAA,KAA9B,WAA4D,OAAOxoB,KAAKk8C,qBAAqB1zB,mBAStF,EAAA,cAAA,IAAA,EAAA6T,UAAAA,qBAAP,SAA4BC,GAA5B,IAEE,EAAA,KAAA,OADAt8B,KAAKwwD,eAAerwD,KAAKm8B,GAClB,CACLl8B,QAAS,WAEP,IAAMywD,EAAgB,EAAKL,eAAe5uD,QAAQ06B,IAE3B,IAAnBu0B,GACF,EAAKL,eAAenwD,OAAOwwD,EAAe,MAM3C,EAAA/pB,UAAAA,YAAP,SAAmB/O,EAAsB+4B,EAA6BC,GAAtE,IACE/wD,EAAAA,KAAAA,KAAK28C,SAAW5kB,EAChB/3B,KAAK+lC,cAAgB+qB,EACrB9wD,KAAK4hC,eAAiBmvB,EAEtB/wD,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK28C,SAAU,aAAc,WAClE,EAAK+T,aAAc,EACnB,EAAKvU,uBAEPn8C,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK28C,SAAU,YAAa38C,KAAK+/C,aAAaxgD,KAAKS,QAC1FA,KAAKzD,SAAS,EAAA4mC,yBAAyBnjC,KAAK28C,SAAU,QAAS38C,KAAKinD,SAAS1nD,KAAKS,SAG5E,EAAA+/C,UAAAA,aAAR,SAAqBv3B,GAGnB,GAFAxoB,KAAKgxD,gBAAkBxoC,EAElBxoB,KAAK28C,UAAa38C,KAAK+lC,cAA5B,CAIA,IAAMoJ,EAAWnvC,KAAKixD,wBAAwBzoC,EAAOxoB,KAAK28C,SAAU38C,KAAK+lC,eACzE,GAAKoJ,EAAL,CAGAnvC,KAAK0wD,aAAc,EAInB,IADA,IAAMQ,EAAe1oC,EAAM0oC,eAClBvzD,EAAI,EAAGA,EAAIuzD,EAAa71D,OAAQsC,IAAK,CAC5C,IAAM+J,EAASwpD,EAAavzD,GAE5B,GAAI+J,EAAO6K,UAAUpG,SAAS,SAC5B,MAGF,GAAIzE,EAAO6K,UAAUpG,SAAS,eAC5B,OAICnM,KAAKmxD,iBAAoBhiB,EAAS/5B,IAAMpV,KAAKmxD,gBAAgB/7C,GAAK+5B,EAAS95B,IAAMrV,KAAKmxD,gBAAgB97C,IACzGrV,KAAKunD,SAASpY,GACdnvC,KAAKmxD,gBAAkBhiB,MAInB,EAAAoY,UAAAA,SAAR,SAAiBpY,GAGf,GAAInvC,KAAK2wD,cAAgBxhB,EAAS95B,EAGhC,OAFArV,KAAKm8C,yBACLn8C,KAAKoxD,YAAYjiB,GAAU,GAKGnvC,KAAKqxD,cAAgBrxD,KAAKsxD,gBAAgBtxD,KAAKqxD,aAAaE,KAAMpiB,KAEhGnvC,KAAKm8C,oBACLn8C,KAAKoxD,YAAYjiB,GAAU,KAIvB,EAAAiiB,UAAAA,YAAR,SAAoBjiB,EAA+BqiB,GAAnD,IACOxxD,EAAAA,KAAAA,KAAKyxD,wBAA2BD,IACnCxxD,KAAKyxD,uBAAyB,IAAI52C,IAClC7a,KAAK2wD,YAAcxhB,EAAS95B,GAE9B,IAAIq8C,GAAe,EAGnB1xD,KAAKwwD,eAAe5E,QAAQ,SAACtvB,EAAc3+B,OACrC6zD,EAAAA,GAC+C,QAA9B,EAAG,EAAKC,8BAAsB,IAAE7yD,OAAAA,EAAAA,EAAAA,IAAIjB,MAOrD+zD,EAAe,EAAKC,yBAAyBh0D,EAAGwxC,EAAUuiB,IAG5Dp1B,EAAas1B,aAAaziB,EAAS95B,EAAG,SAACw8C,OACrC,EAAA,EAAA,IAAI,EAAKnB,YAAT,CAGA,IAAMoB,EAA+CD,MAAK,OAAA,EAALA,EAAO91D,IAAI,SAAAw1D,GAAS,MAAGA,CAAAA,KAAI,KACrD,QAA3B,EAAKE,EAAAA,8BAAsB,IAAEt2C,GAAAA,EAAAA,IAAIxd,EAAGm0D,GACpCJ,EAAe,EAAKC,yBAAyBh0D,EAAGwxC,EAAUuiB,IAI3B,QAA3B,EAAKD,EAAAA,8BAAsB,IAAE9pD,OAAAA,EAAAA,EAAAA,QAAS,EAAK6oD,eAAen1D,QAC5D,EAAK02D,yBAAyB5iB,EAAS95B,EAAG,EAAKo8C,8BAOjD,EAAAM,UAAAA,yBAAR,SAAiC18C,EAAW28C,GAE1C,IADA,IAAMC,EAAgB,IAAIC,IACjBv0D,EAAI,EAAGA,EAAIq0D,EAAQrqD,KAAMhK,IAAK,CACrC,IAAMw0D,EAAgBH,EAAQpzD,IAAIjB,GAClC,GAAKw0D,EAGL,IAAK,IAAI,EAAI,EAAG,EAAIA,EAAc92D,OAAQ,IAIxC,IAHA,IAAM+2D,EAAgBD,EAAc,GAC9Btd,EAASud,EAAcb,KAAK15B,MAAM3wB,MAAMmO,EAAIA,EAAI,EAAI+8C,EAAcb,KAAK15B,MAAM3wB,MAAMkO,EACnFi9C,EAAOD,EAAcb,KAAK15B,MAAM1wB,IAAIkO,EAAIA,EAAIrV,KAAKuR,eAAegI,KAAO64C,EAAcb,KAAK15B,MAAM1wB,IAAIiO,EACjGA,EAAIy/B,EAAQz/B,GAAKi9C,EAAMj9C,IAAK,CACnC,GAAI68C,EAAcl3C,IAAI3F,GAAI,CACxB+8C,EAAc9xD,OAAO,IAAK,GAC1B,MAEF4xD,EAAcz/C,IAAI4C,MAMlB,EAAAu8C,UAAAA,yBAAR,SAAiChwD,EAAewtC,EAA+BuiB,GAA/E,MAAA,EACE,KAAA,IAAK1xD,KAAKyxD,uBACR,OAAOC,EAOT,IAJA,IAAMG,EAAQ7xD,KAAKyxD,uBAAuB7yD,IAAI+C,GAG1C2wD,GAAgB,EACX/mC,EAAI,EAAGA,EAAI5pB,EAAO4pB,IACpBvrB,KAAKyxD,uBAAuB12C,IAAIwQ,KAAMvrB,KAAKyxD,uBAAuB7yD,IAAI2sB,KACzE+mC,GAAgB,GAMpB,IAAKA,GAAiBT,EAAO,CAC3B,IAAMU,EAAiBV,EAAMW,KAAK,SAAAjB,GAAQ,OAAKD,EAAAA,gBAAgBC,EAAKA,KAAMpiB,KACtEojB,IACFb,GAAe,EACf1xD,KAAKyyD,eAAeF,IAKxB,GAAIvyD,KAAKyxD,uBAAuB9pD,OAAS3H,KAAKwwD,eAAen1D,SAAWq2D,EAEtE,IAASnmC,EAAI,EAAGA,EAAIvrB,KAAKyxD,uBAAuB9pD,KAAM4jB,IAAK,CACzD,IAAMmnC,EAAgD,QAArC,EAAG1yD,KAAKyxD,uBAAuB7yD,IAAI2sB,UAAE,IAAEinC,OAAAA,EAAAA,EAAAA,KAAK,SAAAjB,GAAQ,OAAKD,EAAAA,gBAAgBC,EAAKA,KAAMpiB,KACrG,GAAIujB,EAAa,CACfhB,GAAe,EACf1xD,KAAKyyD,eAAeC,GACpB,OAKN,OAAOhB,GAGD,EAAAzK,UAAAA,SAAR,SAAiBz+B,GACf,GAAKxoB,KAAK28C,UAAa38C,KAAK+lC,eAAkB/lC,KAAKqxD,aAAnD,CAIA,IAAMliB,EAAWnvC,KAAKixD,wBAAwBzoC,EAAOxoB,KAAK28C,SAAU38C,KAAK+lC,eAEpEoJ,GAIDnvC,KAAKsxD,gBAAgBtxD,KAAKqxD,aAAaE,KAAMpiB,IAC/CnvC,KAAKqxD,aAAaE,KAAKoB,SAASnqC,EAAOxoB,KAAKqxD,aAAaE,KAAKp6B,QAI1D,EAAAglB,UAAAA,kBAAR,SAA0B3oC,EAAmBC,GACtCzT,KAAK28C,UAAa38C,KAAKqxD,cAAiBrxD,KAAKgxD,mBAK7Cx9C,IAAaC,GAAWzT,KAAKqxD,aAAaE,KAAK15B,MAAM3wB,MAAMmO,GAAK7B,GAAYxT,KAAKqxD,aAAaE,KAAK15B,MAAM1wB,IAAIkO,GAAK5B,KACrHzT,KAAK4yD,WAAW5yD,KAAK28C,SAAU38C,KAAKqxD,aAAaE,KAAMvxD,KAAKgxD,iBAC5DhxD,KAAKqxD,kBAAe3wD,EACpB,EAAAmB,aAAa7B,KAAKywD,yBAId,EAAAgC,UAAAA,eAAR,SAAuBL,GAAvB,IACE,EAAA,KAAA,GAAKpyD,KAAK28C,UAAa38C,KAAKgxD,iBAAoBhxD,KAAK+lC,cAArD,CAIA,IAAMoJ,EAAWnvC,KAAKixD,wBAAwBjxD,KAAKgxD,gBAAiBhxD,KAAK28C,SAAU38C,KAAK+lC,eAEnFoJ,GAKDnvC,KAAKsxD,gBAAgBc,EAAcb,KAAMpiB,KAC3CnvC,KAAKqxD,aAAee,EACpBpyD,KAAKqxD,aAAajpC,MAAQ,CACxByqC,YAAa,CACXC,eAA8CpyD,IAAnC0xD,EAAcb,KAAKsB,aAAmCT,EAAcb,KAAKsB,YAAYC,UAChGC,mBAAkDryD,IAAnC0xD,EAAcb,KAAKsB,aAAmCT,EAAcb,KAAKsB,YAAYE,eAEtGC,WAAW,GAEbhzD,KAAKizD,WAAWjzD,KAAK28C,SAAUyV,EAAcb,KAAMvxD,KAAKgxD,iBAGxDoB,EAAcb,KAAKsB,YAAc,GACjCp0D,OAAOy0D,iBAAiBd,EAAcb,KAAKsB,YAAa,CACtDE,cAAe,CACbn0D,IAAK,WAA8B,IAAA,EAAA,EAAA,OAAA,QAA9B,EAAuB,QAAvB,EAAM,EAAKyyD,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,aAAK,IAAEyqC,OAAAA,EAAAA,EAAAA,YAAYE,eACjD53C,IAAK,SAAAqY,OACkB,EAAA,GAAA,QAAjB,EAAK69B,EAAAA,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,QAAS,EAAKipC,aAAajpC,MAAMyqC,YAAYE,gBAAkBv/B,IACpF,EAAK69B,aAAajpC,MAAMyqC,YAAYE,cAAgBv/B,EAChD,EAAK69B,aAAajpC,MAAM4qC,YACb,QAAb,EAAKrW,EAAAA,gBAAQ,IAAEpqC,GAAAA,EAAAA,UAAU4gD,OAAO,uBAAwB3/B,OAKhEs/B,UAAW,CACTl0D,IAAK,WAA8B,IAAA,EAAA,EAAA,OAAA,QAA9B,EAAuB,QAAvB,EAAM,EAAKyyD,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,aAAK,IAAEyqC,OAAAA,EAAAA,EAAAA,YAAYC,WACjD33C,IAAK,SAAAqY,OACkB,EAAA,EAAA,GAAA,QAAjB,EAAK69B,EAAAA,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,SAAiC,QAAxB,EAAiB,QAAjB,EAAKipC,EAAAA,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,aAAK,IAAEyqC,OAAAA,EAAAA,EAAAA,YAAYC,aAAct/B,IAClF,EAAK69B,aAAajpC,MAAMyqC,YAAYC,UAAYt/B,EAC5C,EAAK69B,aAAajpC,MAAM4qC,WAC1B,EAAKI,oBAAoBhB,EAAcb,KAAM/9B,QAQnDxzB,KAAK4hC,gBACP5hC,KAAKywD,sBAAsBtwD,KAAKH,KAAK4hC,eAAegE,uBAAuB,SAAA7oC,GAGzE,IAAMmK,EAAoB,IAAZnK,EAAEmK,MAAc,EAAInK,EAAEmK,MAAQ,EAAI,EAAKqK,eAAemP,OAAOgL,MAC3E,EAAKywB,kBAAkBj1C,EAAOnK,EAAEoK,IAAM,EAAI,EAAKoK,eAAemP,OAAOgL,aAMnE,EAAAunC,UAAAA,WAAV,SAAqBl7B,EAAsBw5B,EAAa/oC,OACjC,GAAA,QAArB,EAAIxoB,KAAKqxD,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,SACrBpoB,KAAKqxD,aAAajpC,MAAM4qC,WAAY,EAChChzD,KAAKqxD,aAAajpC,MAAMyqC,YAAYC,WACtC9yD,KAAKozD,oBAAoB7B,GAAM,GAE7BvxD,KAAKqxD,aAAajpC,MAAMyqC,YAAYE,eACtCh7B,EAAQxlB,UAAUC,IAAI,yBAItB++C,EAAK8B,OACP9B,EAAK8B,MAAM7qC,EAAO+oC,EAAKp6B,OAInB,EAAAi8B,UAAAA,oBAAR,SAA4B7B,EAAa+B,GACvC,IAAMz7B,EAAQ05B,EAAK15B,MACb07B,EAAevzD,KAAKuR,eAAemP,OAAOgL,MAC1ClD,EAAQxoB,KAAKwzD,0BAA0B37B,EAAM3wB,MAAMkO,EAAI,EAAGyiB,EAAM3wB,MAAMmO,EAAIk+C,EAAe,EAAG17B,EAAM1wB,IAAIiO,EAAGyiB,EAAM1wB,IAAIkO,EAAIk+C,EAAe,OAAG7yD,IAC/H4yD,EAAYtzD,KAAKg8C,qBAAuBh8C,KAAKk8C,sBACrD57C,KAAKkoB,IAGL,EAAAoqC,UAAAA,WAAV,SAAqB76B,EAAsBw5B,EAAa/oC,OACjC,GAAA,QAArB,EAAIxoB,KAAKqxD,oBAAY,IAAEjpC,OAAAA,EAAAA,EAAAA,SACrBpoB,KAAKqxD,aAAajpC,MAAM4qC,WAAY,EAChChzD,KAAKqxD,aAAajpC,MAAMyqC,YAAYC,WACtC9yD,KAAKozD,oBAAoB7B,GAAM,GAE7BvxD,KAAKqxD,aAAajpC,MAAMyqC,YAAYE,eACtCh7B,EAAQxlB,UAAUywB,OAAO,yBAIzBuuB,EAAKkC,OACPlC,EAAKkC,MAAMjrC,EAAO+oC,EAAKp6B,OASnB,EAAAm6B,UAAAA,gBAAR,SAAwBC,EAAapiB,GACnC,IAAMukB,EAAWnC,EAAK15B,MAAM3wB,MAAMmO,IAAMk8C,EAAK15B,MAAM1wB,IAAIkO,EACjDs+C,EAAkBpC,EAAK15B,MAAM3wB,MAAMmO,EAAI85B,EAAS95B,EAChDu+C,EAAiBrC,EAAK15B,MAAM1wB,IAAIkO,EAAI85B,EAAS95B,EAInD,OAASq+C,GAAYnC,EAAK15B,MAAM3wB,MAAMkO,GAAK+5B,EAAS/5B,GAAKm8C,EAAK15B,MAAM1wB,IAAIiO,GAAK+5B,EAAS/5B,GACnFu+C,GAAmBpC,EAAK15B,MAAM1wB,IAAIiO,GAAK+5B,EAAS/5B,GAChDw+C,GAAkBrC,EAAK15B,MAAM3wB,MAAMkO,GAAK+5B,EAAS/5B,GACjDu+C,GAAmBC,IACpBrC,EAAK15B,MAAM3wB,MAAMmO,GAAK85B,EAAS95B,GAC/Bk8C,EAAK15B,MAAM1wB,IAAIkO,GAAK85B,EAAS95B,GAOzB,EAAA47C,UAAAA,wBAAR,SAAgCzoC,EAAmBuP,EAAsB+4B,GACvE,IAAMp4B,EAASo4B,EAAazP,UAAU74B,EAAOuP,EAAS/3B,KAAKuR,eAAegI,KAAMvZ,KAAKuR,eAAe4C,MACpG,GAAKukB,EAIL,MAAO,CAAEtjB,EAAGsjB,EAAO,GAAIrjB,EAAGqjB,EAAO,GAAK14B,KAAKuR,eAAemP,OAAOgL,QAG3D,EAAA8nC,UAAAA,0BAAR,SAAkC/6C,EAAYE,EAAYD,EAAYE,EAAY9V,GAChF,MAAO,CAAE2V,GAAE,EAAEE,GAAE,EAAED,GAAE,EAAEE,GAAE,EAAEW,KAAMvZ,KAAKuR,eAAegI,KAAMzW,GAAE,IAhXxC,EAmBlB,CAAA,EAAAhC,EAAAA,EAAAA,iBAnBQigC,GAkBX,CAlB8B,EAAAh/B,YAAnB,EAAAg/B,uBChBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,wBAAA,EAAA,IAGE,EAAA,WAAA,SACU0K,EAAAA,GAAA,KAAAA,UAOZ,EAAA,OAHE,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WACE,OAAOp5B,SAASwhD,gBAAkB7zD,KAAKyrC,WAAap5B,SAASyhD,wBAEjE,EAAA,cAAA,IAAA,EARE,GAHW,EAAA5uB,+BCgBb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAGA,EAAA,IAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EAiCE,SAAA,GAAA,SACEx+B,EAAAA,GADF,IAGE,EAAA,EAAO,KAAA,OAAA,YAlBD,EAAAqtD,UAAY,IAAI,EAAApzD,aAEhB,EAAAqzD,QAAU,IAAI,EAAArzD,aAEZ,EAAA8hB,YAAc,IAAI,EAAA9hB,aAEpB,EAAAooD,UAAY,IAAI,EAAApoD,aAEd,EAAA+hB,UAAY,IAAI,EAAA/hB,aAaxB,EAAKggC,sBAAwB,IAAI,EAAAszB,qBACjC,EAAKx5B,eAAiB,IAAI,EAAAy5B,eAAextD,GACzC,EAAKi6B,sBAAsBwE,WAAW,EAAA7jC,gBAAiB,EAAKm5B,gBAC5D,EAAKlpB,eAAiB,EAAKhV,SAAS,EAAKokC,sBAAsBC,eAAe,EAAAuzB,gBAC9E,EAAKxzB,sBAAsBwE,WAAW,EAAArkC,eAAgB,EAAKyQ,gBAC3D,EAAKyO,YAAc,EAAK2gB,sBAAsBC,eAAe,EAAAwzB,YAC7D,EAAKzzB,sBAAsBwE,WAAW,EAAA9jC,YAAa,EAAK2e,aACxD,EAAKD,aAAe,EAAKxjB,SAAS,EAAKokC,sBAAsBC,eAAe,EAAAyzB,YAAa,WAAM,OAAK92B,EAAAA,oBACpG,EAAKoD,sBAAsBwE,WAAW,EAAAlkC,aAAc,EAAK8e,cACzD,EAAKmB,kBAAoB,EAAKyf,sBAAsBC,eAAe,EAAA0zB,kBACnE,EAAK3zB,sBAAsBwE,WAAW,EAAAnkC,kBAAmB,EAAKkgB,mBAC9D,EAAKD,iBAAmB,EAAK0f,sBAAsBC,eAAe,EAAA2zB,iBAClE,EAAK5zB,sBAAsBwE,WAAW,EAAAhkC,iBAAkB,EAAK8f,kBAC7D,EAAK0e,eAAiB,EAAKgB,sBAAsBC,eAAe,EAAA4zB,gBAChE,EAAK7zB,sBAAsBwE,WAAW,EAAA5jC,gBAAiB,EAAKo+B,gBAC5D,EAAK3e,gBAAkB,EAAK2f,sBAAsBC,eAAe,EAAA6zB,gBACjE,EAAK9zB,sBAAsBwE,WAAW,EAAAjkC,gBAAiB,EAAK8f,iBAG5D,EAAKggB,cAAgB,IAAI,EAAAjS,aAAa,EAAKxd,eAAgB,EAAKyP,gBAAiB,EAAKjB,aAAc,EAAKkB,iBAAkB,EAAKjB,YAAa,EAAKya,eAAgB,EAAKvZ,kBAAmB,EAAKye,gBAC/L,EAAKpjC,SAAS,EAAAilC,aAAa,EAAKR,cAAcrG,WAAY,EAAKlY,cAC/D,EAAKlmB,SAAS,EAAKykC,eAGnB,EAAKzkC,SAAS,EAAAilC,aAAa,EAAKjwB,eAAe4pB,SAAU,EAAK4tB,YAC9D,EAAKxsD,SAAS,EAAAilC,aAAa,EAAKzhB,aAAa8a,OAAQ,EAAKm5B,UAC1D,EAAKz3D,SAAS,EAAAilC,aAAa,EAAKzhB,aAAa+a,SAAU,EAAKi5B,YAC5D,EAAKx3D,SAAS,EAAKk+B,eAAegL,eAAe,SAAAnmC,GAAO,OAAK0iC,EAAAA,eAAe1iC,MAG5E,EAAKo1D,aAAe,IAAI,EAAAC,YAAY,SAAA1tD,GAAQ,OAAK+5B,EAAAA,cAAcvY,MAAMxhB,OAkOzE,OAvS2C,EAmBzC,EAAA,GAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAOjH,KAAK+zD,UAAUvrC,mBAE9D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAAsC,OAAOxoB,KAAKg0D,QAAQxrC,mBAE1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAU,UAAA,aAAA,KAArB,WAAwC,OAAOxoB,KAAKyiB,YAAY+F,mBAEhE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAgE,OAAOxoB,KAAK+oD,UAAUvgC,mBAEtF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAOxoB,KAAK0iB,UAAU8F,mBAE9D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAI,UAAA,OAAA,KAAf,WAA4B,OAAOxoB,KAAKuR,eAAegI,kBACvD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAI,UAAA,OAAA,KAAf,WAA4B,OAAOvZ,KAAKuR,eAAe4C,kBACvD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAO,UAAA,UAAA,KAAlB,WAAmC,OAAOnU,KAAKuR,eAAeob,qBAyCvD,EAAA,cAAA,IAAA,EAAAvsB,UAAAA,QAAP,eACMJ,EAAAA,KAAKyB,cAGT,EAAMrB,UAAAA,QAAO,KACI,MAAA,QAAjB,EAAAJ,KAAK40D,oBAAY,IAAEx0D,GAAAA,EAAAA,UACnBJ,KAAK40D,kBAAel0D,IAGf,EAAA+8B,UAAAA,MAAP,SAAax2B,EAA2BgjB,GACtCjqB,KAAK00D,aAAaj3B,MAAMx2B,EAAMgjB,IAGzB,EAAA4qC,UAAAA,UAAP,SAAiB5tD,GACfjH,KAAK00D,aAAaG,UAAU5tD,IAGvB,EAAAqN,UAAAA,OAAP,SAAcc,EAAWC,GACnB8oB,MAAM/oB,IAAM+oB,MAAM9oB,KAItBD,EAAIhL,KAAKqB,IAAI2J,EAAG,EAAA0/C,cAChBz/C,EAAIjL,KAAKqB,IAAI4J,EAAG,EAAA0/C,cAEhB/0D,KAAKuR,eAAe+C,OAAOc,EAAGC,KAOzB,EAAAgsB,UAAAA,OAAP,SAAc1kB,EAA2BlB,QAAA,IAAAA,IAAA,GAAA,GACvC,IAEIyB,EAFEwD,EAAS1gB,KAAKuR,eAAemP,QAGnCxD,EAAUld,KAAKg1D,mBACC93C,EAAQ7hB,SAAW2E,KAAKuZ,MAAQ2D,EAAQlB,MAAM,KAAOW,EAAU7Z,IAAMoa,EAAQjB,MAAM,KAAOU,EAAU5Z,KAClHma,EAAUwD,EAAOoL,aAAanP,EAAWlB,GACzCzb,KAAKg1D,iBAAmB93C,GAE1BA,EAAQzB,UAAYA,EAEpB,IAAMw5C,EAASv0C,EAAO+I,MAAQ/I,EAAOC,UAC/Bu0C,EAAYx0C,EAAO+I,MAAQ/I,EAAOE,aAExC,GAAyB,IAArBF,EAAOC,UAAiB,CAE1B,IAAMw0C,EAAsBz0C,EAAO8I,MAAM4rC,OAGrCF,IAAcx0C,EAAO8I,MAAMnuB,OAAS,EAClC85D,EACFz0C,EAAO8I,MAAM6rC,UAAUr4C,SAASE,GAEhCwD,EAAO8I,MAAMrpB,KAAK+c,EAAQzY,SAG5Bic,EAAO8I,MAAMnpB,OAAO60D,EAAY,EAAG,EAAGh4C,EAAQzY,SAI3C0wD,EASCn1D,KAAKuR,eAAe+jD,kBACtB50C,EAAOgL,MAAQthB,KAAKqB,IAAIiV,EAAOgL,MAAQ,EAAG,KAT5ChL,EAAO+I,QAEFzpB,KAAKuR,eAAe+jD,iBACvB50C,EAAOgL,aASN,CAGL,IAAMiD,EAAqBumC,EAAYD,EAAS,EAChDv0C,EAAO8I,MAAMoF,cAAcqmC,EAAS,EAAGtmC,EAAqB,GAAI,GAChEjO,EAAO8I,MAAMrO,IAAI+5C,EAAWh4C,EAAQzY,SAKjCzE,KAAKuR,eAAe+jD,kBACvB50C,EAAOgL,MAAQhL,EAAO+I,OAIxBzpB,KAAKihB,iBAAiB8K,eAAerL,EAAOC,UAAWD,EAAOE,cAE9D5gB,KAAK0iB,UAAUpiB,KAAKogB,EAAOgL,QAUtB,EAAAwR,UAAAA,YAAP,SAAmB0M,EAAcpD,GAC/B,IAAM9lB,EAAS1gB,KAAKuR,eAAemP,OACnC,GAAIkpB,EAAO,EAAG,CACZ,GAAqB,IAAjBlpB,EAAOgL,MACT,OAEF1rB,KAAKuR,eAAe+jD,iBAAkB,OAC7B1rB,EAAOlpB,EAAOgL,OAAShL,EAAO+I,QACvCzpB,KAAKuR,eAAe+jD,iBAAkB,GAGxC,IAAMC,EAAW70C,EAAOgL,MACxBhL,EAAOgL,MAAQthB,KAAKqB,IAAIrB,KAAKwB,IAAI8U,EAAOgL,MAAQke,EAAMlpB,EAAO+I,OAAQ,GAGjE8rC,IAAa70C,EAAOgL,QAInB8a,GACHxmC,KAAK0iB,UAAUpiB,KAAKogB,EAAOgL,SAQxB,EAAA0R,UAAAA,YAAP,SAAmBC,GACjBr9B,KAAKk9B,YAAYG,GAAar9B,KAAKmU,KAAO,KAMrC,EAAAmpB,UAAAA,YAAP,WACEt9B,KAAKk9B,aAAal9B,KAAKuR,eAAemP,OAAOgL,QAMxC,EAAA6R,UAAAA,eAAP,WACEv9B,KAAKk9B,YAAYl9B,KAAKuR,eAAemP,OAAO+I,MAAQzpB,KAAKuR,eAAemP,OAAOgL,QAG1E,EAAA8R,UAAAA,aAAP,SAAoBvgB,GAClB,IAAMu4C,EAAev4C,EAAOjd,KAAKuR,eAAemP,OAAOgL,MAClC,IAAjB8pC,GACFx1D,KAAKk9B,YAAYs4B,IAKd,EAAAprC,UAAAA,cAAP,SAAqBhvB,EAAyB6uB,GAC5C,OAAOjqB,KAAKghC,cAAc5W,cAAchvB,EAAI6uB,IAIvC,EAAAC,UAAAA,cAAP,SAAqB9uB,EAAyB6uB,GAC5C,OAAOjqB,KAAKghC,cAAc9W,cAAc9uB,EAAI6uB,IAIvC,EAAAD,UAAAA,cAAP,SAAqB5uB,EAAyB6uB,GAC5C,OAAOjqB,KAAKghC,cAAchX,cAAc5uB,EAAI6uB,IAIvC,EAAAI,UAAAA,cAAP,SAAqBxH,EAAeoH,GAClC,OAAOjqB,KAAKghC,cAAc3W,cAAcxH,EAAOoH,IAGvC,EAAAwW,UAAAA,OAAV,WACMzgC,KAAKy6B,eAAe/zB,QAAQ+uD,aAC9Bz1D,KAAK01D,sBAIF,EAAA7nC,UAAAA,MAAP,WACE7tB,KAAKghC,cAAcnT,QACnB7tB,KAAKuR,eAAesc,QACpB7tB,KAAKghB,gBAAgB6M,QACrB7tB,KAAK+f,aAAa8N,QAClB7tB,KAAKkhB,kBAAkB2M,SAGf,EAAAmU,UAAAA,eAAV,SAAyB1iC,OAEvB,EAAA,OAAQA,GACN,IAAK,aACHU,KAAK2sB,QAAQrY,OAAOtU,KAAKuZ,KAAMvZ,KAAKmU,MACpC,MACF,IAAK,cACCnU,KAAKy6B,eAAe/zB,QAAQ+uD,YAC9Bz1D,KAAK01D,sBAEY,QAAjB,EAAA11D,KAAK40D,oBAAY,IAAEx0D,GAAAA,EAAAA,UACnBJ,KAAK40D,kBAAel0D,KAMlB,EAAAg1D,UAAAA,mBAAV,WACE,IAAA,EAAA,KAAA,IAAK11D,KAAK40D,aAAc,CACtB,IAAM,EAA6B,GACnC,EAAYz0D,KAAKH,KAAK26B,WAAW,EAAAg7B,8BAA8Bp2D,KAAK,KAAMS,KAAKuR,kBAC/E,EAAYpR,KAAKH,KAAKgqB,cAAc,CAAEtG,MAAO,KAAO,WAElD,OADA,EAAAiyC,8BAA8B,EAAKpkD,iBAC5B,KAETvR,KAAK40D,aAAe,CAClBx0D,QAAS,WACP,IAAgB,IAAa,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAjB,EACRA,GAAAA,cAMd,EAtQE,CAjCyC,EAAA2B,YAArB,EAAAypC,yBC/BtB,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAEA,EAAA,IAAA,EAIE,WAAA,iBAAY,IAFJ,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,KAAAoqB,SAAW,IAAI/6C,IAGrB,IAA4B,IAAAg7C,EAAAA,EAAAA,EAAAA,EAAA,EAAS,EAAA,OAAA,IAAA,CAA1B,IAACz6D,EAAAA,EAAAA,GAAAA,EAAE,EAAE06D,GAAAA,EAAO,EACrB91D,GAAAA,KAAKmb,IAAI/f,EAAI06D,IAqBnB,OAjBS,EAAA36C,UAAAA,IAAP,SAAc/f,EAA2B26D,GACvC,IAAM3uD,EAASpH,KAAK41D,SAASh3D,IAAIxD,GAEjC,OADA4E,KAAK41D,SAASz6C,IAAI/f,EAAI26D,GACf3uD,GAGF,EAAAwkD,UAAAA,QAAP,SAAe3hC,GACbjqB,KAAK41D,SAAShK,QAAQ,SAAC5sD,EAAOM,GAAQ,OAAA2qB,EAAS3qB,EAAKN,MAG/C,EAAA+b,UAAAA,IAAP,SAAW3f,GACT,OAAO4E,KAAK41D,SAAS76C,IAAI3f,IAGpB,EAAAwD,UAAAA,IAAP,SAAcxD,GACZ,OAAO4E,KAAK41D,SAASh3D,IAAIxD,IAE7B,EAvBE,GAJW,EAAA46D,kBA6Bb,EAAA,IAGE,EAAA,WAAA,SAFiB,IAAA,KAAAC,UAA+B,IAAID,EAGlDh2D,KAAKi2D,UAAU96C,IAAI,EAAA/Z,sBAAuBpB,MAiC9C,OA9BS,EAAAmlC,UAAAA,WAAP,SAAqB/pC,EAA2B26D,GAC9C/1D,KAAKi2D,UAAU96C,IAAI/f,EAAI26D,IAGlB,EAAAG,UAAAA,WAAP,SAAqB96D,GACnB,OAAO4E,KAAKi2D,UAAUr3D,IAAIxD,IAGrB,EAAAwlC,UAAAA,eAAP,SAAyB9lB,OAAW,IAIlC,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAAA,IAHA,IAAMq7C,EAAsB,EAAAC,uBAAuBt7C,GAAMu7C,KAAK,SAAC34D,EAAG+L,GAAM,OAAA/L,EAAEiE,MAAQ8H,EAAE9H,QAE9E20D,EAAqB,GACF,EAAAH,EAAAA,EAAAA,EAAA,EAAqB,EAAA,OAAA,IAAA,CAAzC,IAAMI,EAAU,EACbT,GAAAA,EAAU91D,KAAKi2D,UAAUr3D,IAAI23D,EAAWn7D,IAC9C,IAAK06D,EACH,MAAM,IAAIx7D,MAAM,oBAAoBwgB,EAAKxc,KAAI,+BAA+Bi4D,EAAWn7D,GAAE,KAE3Fk7D,EAAYn2D,KAAK21D,GAGnB,IAAMU,EAAqBL,EAAoB96D,OAAS,EAAI86D,EAAoB,GAAGx0D,MAAQ80D,EAAKp7D,OAGhG,GAAIo7D,EAAKp7D,SAAWm7D,EAClB,MAAM,IAAIl8D,MAAM,gDAAgDwgB,EAAKxc,KAAI,iBAAgBk4D,EAAqB,GAAC,mBAAmBC,EAAKp7D,OAAM,qBAI/I,OAAO,IAAIyf,EAAI,KAAJA,MAAAA,EAAI,EAAQ27C,MAAAA,GAAAA,EAAAA,EAASH,OAEpC,EAlCE,GAHW,EAAArC,iCCtCb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,WAAA,EAAA,cAAA,EAAA,IAiBYyC,EAjBZ,EAiBA,EAAA,IAAA,SAAYA,GACV,EACA,EAAA,MAAA,GAAA,QAAA,EACA,EAAA,KAAA,GAAA,OAAA,EACA,EAAA,KAAA,GAAA,OAAA,EACA,EAAA,MAAA,GAAA,QAAA,EALF,EAAA,IAAA,GAAA,MAAA,CAAYA,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAQpB,IAAMC,EAAoD,CACxD51C,MAAO21C,EAASE,MAChBC,KAAMH,EAASI,KACfthC,KAAMkhC,EAASK,KACf1uC,MAAOquC,EAASM,MAChBC,IAAKP,EAASQ,KAKhB,EAKE,WAAA,SACoC1lD,EAAAA,GADpC,IACoC,EAAA,KAAA,KAAAA,gBAElCxR,EAAAA,KAAKm3D,kBACLn3D,KAAKwR,gBAAgBi0B,eAAe,SAAAnmC,GACtB,aAARA,GACF,EAAK63D,oBA6Cb,OAxCU,EAAAA,UAAAA,gBAAR,WACEn3D,KAAKo3D,UAAYT,EAAqB32D,KAAKwR,gBAAgB9K,QAAQoiC,WAG7D,EAAAuuB,UAAAA,wBAAR,SAAgCC,GAC9B,IAAK,IAAI35D,EAAI,EAAGA,EAAI25D,EAAej8D,OAAQsC,IACR,mBAAtB25D,EAAe35D,KACxB25D,EAAe35D,GAAK25D,EAAe35D,OAKjC,EAAA45D,UAAAA,KAAR,SAAap7D,EAAeq7D,EAAiBF,GAC3Ct3D,KAAKq3D,wBAAwBC,GAC7Bn7D,EAAK+B,KAAI,MAAT/B,EAAI,EAAMo5B,CAAAA,QAhCK,aAgCiBiiC,GAAYF,KAGvC,EAAAv2C,UAAAA,MAAP,SAAay2C,OAAiB,IACxBx3D,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,KAAKo3D,WAAaV,EAASE,OAC7B52D,KAAKu3D,KAAKhiC,QAAQkiC,IAAKD,EAASF,IAI7B,EAAAT,UAAAA,KAAP,SAAYW,OAAiB,IACvBx3D,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,KAAKo3D,WAAaV,EAASI,MAC7B92D,KAAKu3D,KAAKhiC,QAAQshC,KAAMW,EAASF,IAI9B,EAAA9hC,UAAAA,KAAP,SAAYgiC,OAAiB,IACvBx3D,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,KAAKo3D,WAAaV,EAASK,MAC7B/2D,KAAKu3D,KAAKhiC,QAAQC,KAAMgiC,EAASF,IAI9B,EAAAjvC,UAAAA,MAAP,SAAamvC,OAAiB,IACxBx3D,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAAAA,KAAKo3D,WAAaV,EAASM,OAC7Bh3D,KAAKu3D,KAAKhiC,QAAQlN,MAAOmvC,EAASF,IArDjB,EAMlB,CAAA,EAAAh2D,EAAAA,EAAAA,kBANQ8yD,GAKX,GALW,EAAAA,uBCnCb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,cAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAEA,EAAA,IAAA,EACA,EAAA,GAAA,EAEa,EAAA,GAAA,EAAAU,aAAe,EACf,EAAAC,aAAe,EAE5B,IAcE,EAAA,SAAA,GAAA,SAC2BvjD,EAAAA,GAD3B,IAGE,EAAA,EAAO,KAAA,OAAA,YAFkB,EAAAA,gBARpB,EAAA,EAAA8jD,iBAA2B,EAE1B,EAAAvM,UAAY,IAAI,EAAApoD,aAStB,EAAK4Y,KAAOnP,KAAKqB,IAAI+F,EAAgB9K,QAAQ6S,KAAM,EAAAu7C,cACnD,EAAK3gD,KAAO/J,KAAKqB,IAAI+F,EAAgB9K,QAAQyN,KAAM,EAAA4gD,cACnD,EAAKpoC,QAAU,IAAI,EAAA+qC,UAAUlmD,EAAiB,KAqBlD,OAzCmC,EAUjC,EAAA,GAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAgE,OAAOxR,KAAK+oD,UAAUvgC,mBAEtF,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAA+B,OAAOxoB,KAAK2sB,QAAQqS,oBAW5C,EAAA,cAAA,IAAA,EAAA5+B,UAAAA,QAAP,WACE,EAAMA,UAAAA,QAAO,KACbJ,MAAAA,KAAK2sB,QAAQvsB,WAGR,EAAAkU,UAAAA,OAAP,SAAciF,EAAcpF,GAC1BnU,KAAKuZ,KAAOA,EACZvZ,KAAKmU,KAAOA,EACZnU,KAAK2sB,QAAQrY,OAAOiF,EAAMpF,GAC1BnU,KAAK2sB,QAAQ8V,cAAcziC,KAAKuZ,MAChCvZ,KAAK+oD,UAAUzoD,KAAK,CAAEiZ,KAAI,EAAEpF,KAAI,KAG3B,EAAA0Z,UAAAA,MAAP,WACE7tB,KAAK2sB,QAAQvsB,UACbJ,KAAK2sB,QAAU,IAAI,EAAA+qC,UAAU13D,KAAKwR,gBAAiBxR,MACnDA,KAAKs1D,iBAAkB,GAvCD,EAerB,CAAA,EAAAh0D,EAAAA,EAAAA,kBAfQ6yD,GAcX,CAdiC,EAAApyD,YAAtB,EAAAoyD,0BCPb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,eAAA,EAAA,IACA,EAAA,EAAA,IAAA,EAQA,EAAA,GAAA,EAaE,SAAA,GAAA,SACE15B,EAAAA,EACAsZ,GAFF,IAIE,EAAA,EAAO,KAAA,OAAA,YAXD,EAAAuM,kBAAoB,EAAK/jD,SAAS,IAAI,EAAAoE,cAa5C,EAAK+9B,QAAU,IAAI,EAAAi5B,QAAO,EAAMl9B,EAAgBsZ,GAChD,EAAKrV,QAAQk5B,mBAIb,EAAKC,KAAO,IAAI,EAAAF,QAAO,EAAOl9B,EAAgBsZ,GAC9C,EAAK+jB,cAAgB,EAAKp5B,QAE1B,EAAK+D,kBAiFT,OA5G+B,EAO7B,EAAA,GAAA,OAAW,eAAA,EAAgB,UAAA,mBAAA,KAA3B,WAA0F,OAAOziC,KAAKsgD,kBAAkB93B,mBA0BxH,EAAA,cAAA,IAAA,OAAW,eAAA,EAAG,UAAA,MAAA,KAAd,WACE,OAAOxoB,KAAK63D,kBAMd,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAO73D,KAAK83D,2BAMd,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAO93D,KAAK0+B,qBAMP,EAAA,cAAA,IAAA,EAAA3R,UAAAA,qBAAP,WACM/sB,KAAK83D,gBAAkB93D,KAAK0+B,UAGhC1+B,KAAK0+B,QAAQtpB,EAAIpV,KAAK63D,KAAKziD,EAC3BpV,KAAK0+B,QAAQrpB,EAAIrV,KAAK63D,KAAKxiD,EAI3BrV,KAAK63D,KAAKtwD,QACVvH,KAAK83D,cAAgB93D,KAAK0+B,QAC1B1+B,KAAKsgD,kBAAkBhgD,KAAK,CAC1BoiD,aAAc1iD,KAAK0+B,QACnBq5B,eAAgB/3D,KAAK63D,SAOlB,EAAAjrC,UAAAA,kBAAP,SAAyBorC,GACnBh4D,KAAK83D,gBAAkB93D,KAAK63D,OAKhC73D,KAAK63D,KAAKD,iBAAiBI,GAC3Bh4D,KAAK63D,KAAKziD,EAAIpV,KAAK0+B,QAAQtpB,EAC3BpV,KAAK63D,KAAKxiD,EAAIrV,KAAK0+B,QAAQrpB,EAC3BrV,KAAK83D,cAAgB93D,KAAK63D,KAC1B73D,KAAKsgD,kBAAkBhgD,KAAK,CAC1BoiD,aAAc1iD,KAAK63D,KACnBE,eAAgB/3D,KAAK0+B,YASlB,EAAApqB,UAAAA,OAAP,SAAc2jD,EAAiBC,GAC7Bl4D,KAAK0+B,QAAQpqB,OAAO2jD,EAASC,GAC7Bl4D,KAAK63D,KAAKvjD,OAAO2jD,EAASC,IAOrB,EAAAz1B,UAAAA,cAAP,SAAqB9kC,GACnBqC,KAAK0+B,QAAQ+D,cAAc9kC,GAC3BqC,KAAK63D,KAAKp1B,cAAc9kC,IAE5B,EA/FE,CAnBF,EAM+BoE,GAAAA,YAAlB,EAAA21D,sBCXb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,qBAAA,EAAA,IAGA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,EACA,EAAA,IAAA,EAEa,EAAA,GAAA,EAAAS,gBAAkB,WAS/B,IAoBE,EAAA,WAAA,SACUC,EAAAA,EACA5mD,EACAD,GAFA,KAAA6mD,eACA,EAAA,KAAA5mD,gBACA,EAAA,KAAAD,eArBH,EAAA,KAAAma,MAAgB,EAChB,KAAAjC,MAAgB,EAChB,KAAApU,EAAY,EACZ,KAAAD,EAAY,EAKZ,KAAA2Y,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB,EAAA1S,kBAAkB7W,QACrC,KAAAwpB,aAAqC,EAAA5B,gBACrC,KAAAmP,QAAoB,GACnB,KAAA68B,UAAuB,EAAAh1D,SAASF,aAAa,CAAC,EAAG,EAAAZ,eAAgB,EAAAC,gBAAiB,EAAAC,iBAClF,KAAA61D,gBAA6B,EAAAj1D,SAASF,aAAa,CAAC,EAAG,EAAAT,qBAAsB,EAAAC,sBAAuB,EAAAC,uBAS1G5C,KAAKu4D,MAAQv4D,KAAKuR,eAAegI,KACjCvZ,KAAKw4D,MAAQx4D,KAAKuR,eAAe4C,KACjCnU,KAAKwpB,MAAQ,IAAI,EAAAivC,aAA0Bz4D,KAAK04D,wBAAwB14D,KAAKw4D,QAC7Ex4D,KAAK2gB,UAAY,EACjB3gB,KAAK4gB,aAAe5gB,KAAKw4D,MAAQ,EACjCx4D,KAAKyiC,gBAkjBT,OA/iBS,EAAA3Y,UAAAA,YAAP,SAAmBuD,GAUjB,OATIA,GACFrtB,KAAKq4D,UAAUv1D,GAAKuqB,EAAKvqB,GACzB9C,KAAKq4D,UAAUt1D,GAAKsqB,EAAKtqB,GACzB/C,KAAKq4D,UAAUr1D,SAAWqqB,EAAKrqB,WAE/BhD,KAAKq4D,UAAUv1D,GAAK,EACpB9C,KAAKq4D,UAAUt1D,GAAK,EACpB/C,KAAKq4D,UAAUr1D,SAAW,IAAI,EAAAC,eAEzBjD,KAAKq4D,WAGP,EAAAM,UAAAA,kBAAP,SAAyBtrC,GAUvB,OATIA,GACFrtB,KAAKs4D,gBAAgBx1D,GAAKuqB,EAAKvqB,GAC/B9C,KAAKs4D,gBAAgBv1D,GAAKsqB,EAAKtqB,GAC/B/C,KAAKs4D,gBAAgBt1D,SAAWqqB,EAAKrqB,WAErChD,KAAKs4D,gBAAgBx1D,GAAK,EAC1B9C,KAAKs4D,gBAAgBv1D,GAAK,EAC1B/C,KAAKs4D,gBAAgBt1D,SAAW,IAAI,EAAAC,eAE/BjD,KAAKs4D,iBAGP,EAAAxsC,UAAAA,aAAP,SAAoBuB,EAAsB5R,GACxC,OAAO,IAAI,EAAA0B,WAAWnd,KAAKuR,eAAegI,KAAMvZ,KAAK8pB,YAAYuD,GAAO5R,IAG1E,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WACE,OAAOzb,KAAKo4D,gBAAkBp4D,KAAKwpB,MAAMwF,UAAYhvB,KAAKw4D,mBAG5D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAkB,UAAA,qBAAA,KAA7B,WACE,IACMI,EADY54D,KAAKypB,MAAQzpB,KAAKqV,EACNrV,KAAK0rB,MACnC,OAAQktC,GAAa,GAAKA,EAAY54D,KAAKw4D,mBAQrC,EAAA,cAAA,IAAA,EAAAE,UAAAA,wBAAR,SAAgCvkD,GAC9B,IAAKnU,KAAKo4D,eACR,OAAOjkD,EAGT,IAAM0kD,EAAsB1kD,EAAOnU,KAAKwR,gBAAgB9K,QAAQoyD,WAEhE,OAAOD,EAAsB,EAAAV,gBAAkB,EAAAA,gBAAkBU,GAM5D,EAAAjB,UAAAA,iBAAP,SAAwBI,GACtB,GAA0B,IAAtBh4D,KAAKwpB,MAAMnuB,OAAc,MACVqF,IAAbs3D,IACFA,EAAW,EAAA18C,mBAGb,IADA,IAAI3d,EAAIqC,KAAKw4D,MACN76D,KACLqC,KAAKwpB,MAAMrpB,KAAKH,KAAK8rB,aAAaksC,MAQjC,EAAAzwD,UAAAA,MAAP,WACEvH,KAAK0rB,MAAQ,EACb1rB,KAAKypB,MAAQ,EACbzpB,KAAKqV,EAAI,EACTrV,KAAKoV,EAAI,EACTpV,KAAKwpB,MAAQ,IAAI,EAAAivC,aAA0Bz4D,KAAK04D,wBAAwB14D,KAAKw4D,QAC7Ex4D,KAAK2gB,UAAY,EACjB3gB,KAAK4gB,aAAe5gB,KAAKw4D,MAAQ,EACjCx4D,KAAKyiC,iBAQA,EAAAnuB,UAAAA,OAAP,SAAc2jD,EAAiBC,GAE7B,IAAMa,EAAW/4D,KAAK8pB,YAAY,EAAAxO,mBAI5B09C,EAAeh5D,KAAK04D,wBAAwBR,GAOlD,GANIc,EAAeh5D,KAAKwpB,MAAMwF,YAC5BhvB,KAAKwpB,MAAMwF,UAAYgqC,GAKrBh5D,KAAKwpB,MAAMnuB,OAAS,EAAG,CAEzB,GAAI2E,KAAKu4D,MAAQN,EACf,IAAK,IAAIt6D,EAAI,EAAGA,EAAIqC,KAAKwpB,MAAMnuB,OAAQsC,IACrCqC,KAAKwpB,MAAM5qB,IAAIjB,GAAI2W,OAAO2jD,EAASc,GAKvC,IAAIE,EAAS,EACb,GAAIj5D,KAAKw4D,MAAQN,EACf,IAAK,IAAI7iD,EAAIrV,KAAKw4D,MAAOnjD,EAAI6iD,EAAS7iD,IAChCrV,KAAKwpB,MAAMnuB,OAAS68D,EAAUl4D,KAAKypB,QACjCzpB,KAAKwR,gBAAgB9K,QAAQ+uD,YAG/Bz1D,KAAKwpB,MAAMrpB,KAAK,IAAI,EAAAgd,WAAW86C,EAASc,IAEpC/4D,KAAKypB,MAAQ,GAAKzpB,KAAKwpB,MAAMnuB,QAAU2E,KAAKypB,MAAQzpB,KAAKqV,EAAI4jD,EAAS,GAGxEj5D,KAAKypB,QACLwvC,IACIj5D,KAAK0rB,MAAQ,GAEf1rB,KAAK0rB,SAKP1rB,KAAKwpB,MAAMrpB,KAAK,IAAI,EAAAgd,WAAW86C,EAASc,UAMhD,IAAS1jD,EAAIrV,KAAKw4D,MAAOnjD,EAAI6iD,EAAS7iD,IAChCrV,KAAKwpB,MAAMnuB,OAAS68D,EAAUl4D,KAAKypB,QACjCzpB,KAAKwpB,MAAMnuB,OAAS2E,KAAKypB,MAAQzpB,KAAKqV,EAAI,EAE5CrV,KAAKwpB,MAAMgF,OAGXxuB,KAAKypB,QACLzpB,KAAK0rB,UAQb,GAAIstC,EAAeh5D,KAAKwpB,MAAMwF,UAAW,CAEvC,IAAMkqC,EAAel5D,KAAKwpB,MAAMnuB,OAAS29D,EACrCE,EAAe,IACjBl5D,KAAKwpB,MAAMiC,UAAUytC,GACrBl5D,KAAKypB,MAAQrf,KAAKqB,IAAIzL,KAAKypB,MAAQyvC,EAAc,GACjDl5D,KAAK0rB,MAAQthB,KAAKqB,IAAIzL,KAAK0rB,MAAQwtC,EAAc,GACjDl5D,KAAK+tB,OAAS3jB,KAAKqB,IAAIzL,KAAK+tB,OAASmrC,EAAc,IAErDl5D,KAAKwpB,MAAMwF,UAAYgqC,EAIzBh5D,KAAKoV,EAAIhL,KAAKwB,IAAI5L,KAAKoV,EAAG6iD,EAAU,GACpCj4D,KAAKqV,EAAIjL,KAAKwB,IAAI5L,KAAKqV,EAAG6iD,EAAU,GAChCe,IACFj5D,KAAKqV,GAAK4jD,GAEZj5D,KAAK8tB,OAAS1jB,KAAKwB,IAAI5L,KAAK8tB,OAAQmqC,EAAU,GAE9Cj4D,KAAK2gB,UAAY,EAKnB,GAFA3gB,KAAK4gB,aAAes3C,EAAU,EAE1Bl4D,KAAKm5D,mBACPn5D,KAAKo5D,QAAQnB,EAASC,GAGlBl4D,KAAKu4D,MAAQN,GACf,IAASt6D,EAAI,EAAGA,EAAIqC,KAAKwpB,MAAMnuB,OAAQsC,IACrCqC,KAAKwpB,MAAM5qB,IAAIjB,GAAI2W,OAAO2jD,EAASc,GAKzC/4D,KAAKu4D,MAAQN,EACbj4D,KAAKw4D,MAAQN,GAGf,OAAY,eAAA,EAAgB,UAAA,mBAAA,KAA5B,WACE,OAAOl4D,KAAKo4D,iBAAmBp4D,KAAKwR,gBAAgB9K,QAAQ+uD,yBAGtD,EAAA,cAAA,IAAA,EAAA2D,UAAAA,QAAR,SAAgBnB,EAAiBC,GAC3Bl4D,KAAKu4D,QAAUN,IAKfA,EAAUj4D,KAAKu4D,MACjBv4D,KAAKq5D,cAAcpB,EAASC,GAE5Bl4D,KAAKs5D,eAAerB,EAASC,KAIzB,EAAAmB,UAAAA,cAAR,SAAsBpB,EAAiBC,GACrC,IAAMqB,EAAqB,EAAAC,6BAA6Bx5D,KAAKwpB,MAAOxpB,KAAKu4D,MAAON,EAASj4D,KAAKypB,MAAQzpB,KAAKqV,EAAGrV,KAAK8pB,YAAY,EAAAxO,oBAC/H,GAAIi+C,EAASl+D,OAAS,EAAG,CACvB,IAAMo+D,EAAkB,EAAAC,4BAA4B15D,KAAKwpB,MAAO+vC,GAChE,EAAAI,2BAA2B35D,KAAKwpB,MAAOiwC,EAAgBG,QACvD55D,KAAK65D,4BAA4B5B,EAASC,EAASuB,EAAgBK,gBAI/D,EAAAD,UAAAA,4BAAR,SAAoC5B,EAAiBC,EAAiB4B,GAIpE,IAHA,IAAMf,EAAW/4D,KAAK8pB,YAAY,EAAAxO,mBAE9By+C,EAAsBD,EACnBC,KAAwB,GACV,IAAf/5D,KAAKypB,OACHzpB,KAAKqV,EAAI,GACXrV,KAAKqV,IAEHrV,KAAKwpB,MAAMnuB,OAAS68D,GAEtBl4D,KAAKwpB,MAAMrpB,KAAK,IAAI,EAAAgd,WAAW86C,EAASc,MAGtC/4D,KAAK0rB,QAAU1rB,KAAKypB,OACtBzpB,KAAK0rB,QAEP1rB,KAAKypB,SAGTzpB,KAAK+tB,OAAS3jB,KAAKqB,IAAIzL,KAAK+tB,OAAS+rC,EAAc,IAG7C,EAAAR,UAAAA,eAAR,SAAuBrB,EAAiBC,GAOtC,IANA,IAAMa,EAAW/4D,KAAK8pB,YAAY,EAAAxO,mBAG5B0+C,EAAW,GACbC,EAAgB,EAEX5kD,EAAIrV,KAAKwpB,MAAMnuB,OAAS,EAAGga,GAAK,EAAGA,IAAK,CAE/C,IAAI6R,EAAWlnB,KAAKwpB,MAAM5qB,IAAIyW,GAC9B,MAAK6R,IAAaA,EAASzL,WAAayL,EAAS9J,oBAAsB66C,GAAvE,CAMA,IADA,IAAMiC,EAA6B,CAAChzC,GAC7BA,EAASzL,WAAapG,EAAI,GAC/B6R,EAAWlnB,KAAKwpB,MAAM5qB,MAAMyW,GAC5B6kD,EAAatQ,QAAQ1iC,GAKvB,IAAMizC,EAAYn6D,KAAKypB,MAAQzpB,KAAKqV,EACpC,KAAI8kD,GAAa9kD,GAAK8kD,EAAY9kD,EAAI6kD,EAAa7+D,QAAnD,CAIA,IAGI++D,EAHEC,EAAiBH,EAAaA,EAAa7+D,OAAS,GAAG+hB,mBACvDk9C,EAAkB,EAAAC,+BAA+BL,EAAcl6D,KAAKu4D,MAAON,GAC3EuC,EAAaF,EAAgBj/D,OAAS6+D,EAAa7+D,OAIvD++D,EAFiB,IAAfp6D,KAAKypB,OAAezpB,KAAKqV,IAAMrV,KAAKwpB,MAAMnuB,OAAS,EAEtC+O,KAAKqB,IAAI,EAAGzL,KAAKqV,EAAIrV,KAAKwpB,MAAMwF,UAAYwrC,GAE5CpwD,KAAKqB,IAAI,EAAGzL,KAAKwpB,MAAMnuB,OAAS2E,KAAKwpB,MAAMwF,UAAYwrC,GAKxE,IADA,IAAMC,EAAyB,GACtB98D,EAAI,EAAGA,EAAI68D,EAAY78D,IAAK,CACnC,IAAMuf,EAAUld,KAAK8rB,aAAa,EAAAxQ,mBAAmB,GACrDm/C,EAASt6D,KAAK+c,GAEZu9C,EAASp/D,OAAS,IACpB2+D,EAAS75D,KAAK,CAGZ+G,MAAOmO,EAAI6kD,EAAa7+D,OAAS4+D,EACjCQ,SAAQ,IAEVR,GAAiBQ,EAASp/D,QAE5B6+D,EAAa/5D,KAAI,MAAjB+5D,EAAqBO,GAGrB,IAAIC,EAAgBJ,EAAgBj/D,OAAS,EACzCmiB,EAAU88C,EAAgBI,GACd,IAAZl9C,IAEFA,EAAU88C,IADVI,IAKF,IAFA,IAAIC,EAAeT,EAAa7+D,OAASm/D,EAAa,EAClDj9C,EAAS88C,EACNM,GAAgB,GAAG,CACxB,IAAMC,EAAcxwD,KAAKwB,IAAI2R,EAAQC,GAQrC,GAPA08C,EAAaQ,GAAer9C,cAAc68C,EAAaS,GAAep9C,EAASq9C,EAAap9C,EAAUo9C,EAAaA,GAAa,GAEhH,IADhBp9C,GAAWo9C,KAGTp9C,EAAU88C,IADVI,IAIa,IADfn9C,GAAUq9C,GACQ,CAChBD,IACA,IAAME,EAAoBzwD,KAAKqB,IAAIkvD,EAAc,GACjDp9C,EAAS,EAAAu9C,4BAA4BZ,EAAcW,EAAmB76D,KAAKu4D,QAK/E,IAAS56D,EAAI,EAAGA,EAAIu8D,EAAa7+D,OAAQsC,IACnC28D,EAAgB38D,GAAKs6D,GACvBiC,EAAav8D,GAAGme,QAAQw+C,EAAgB38D,GAAIo7D,GAMhD,IADA,IAAIgB,EAAsBS,EAAaJ,EAChCL,KAAwB,GACV,IAAf/5D,KAAKypB,MACHzpB,KAAKqV,EAAI6iD,EAAU,GACrBl4D,KAAKqV,IACLrV,KAAKwpB,MAAMgF,QAEXxuB,KAAKypB,QACLzpB,KAAK0rB,SAIH1rB,KAAKypB,MAAQrf,KAAKwB,IAAI5L,KAAKwpB,MAAMwF,UAAWhvB,KAAKwpB,MAAMnuB,OAAS4+D,GAAiB/B,IAC/El4D,KAAKypB,QAAUzpB,KAAK0rB,OACtB1rB,KAAK0rB,QAEP1rB,KAAKypB,SAIXzpB,KAAK+tB,OAAS3jB,KAAKwB,IAAI5L,KAAK+tB,OAASysC,EAAYx6D,KAAKypB,MAAQyuC,EAAU,KAM1E,GAAI8B,EAAS3+D,OAAS,EAAG,CAGvB,IAAM0/D,EAA+B,GAG/BC,EAA8B,GACpC,IAASr9D,EAAI,EAAGA,EAAIqC,KAAKwpB,MAAMnuB,OAAQsC,IACrCq9D,EAAc76D,KAAKH,KAAKwpB,MAAM5qB,IAAIjB,IAEpC,IAAMs9D,EAAsBj7D,KAAKwpB,MAAMnuB,OAEnC6/D,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAepB,EAASmB,GAC5Bn7D,KAAKwpB,MAAMnuB,OAAS+O,KAAKwB,IAAI5L,KAAKwpB,MAAMwF,UAAWhvB,KAAKwpB,MAAMnuB,OAAS4+D,GACvE,IAAIoB,EAAqB,EACzB,IAAS19D,EAAIyM,KAAKwB,IAAI5L,KAAKwpB,MAAMwF,UAAY,EAAGisC,EAAsBhB,EAAgB,GAAIt8D,GAAK,EAAGA,IAChG,GAAIy9D,GAAgBA,EAAal0D,MAAQg0D,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAaX,SAASp/D,OAAS,EAAGigE,GAAS,EAAGA,IAC7Dt7D,KAAKwpB,MAAMrO,IAAIxd,IAAKy9D,EAAaX,SAASa,IAE5C39D,IAGAo9D,EAAa56D,KAAK,CAChBwB,MAAOu5D,EAAoB,EAC3B/9B,OAAQi+B,EAAaX,SAASp/D,SAGhCggE,GAAsBD,EAAaX,SAASp/D,OAC5C+/D,EAAepB,IAAWmB,QAE1Bn7D,KAAKwpB,MAAMrO,IAAIxd,EAAGq9D,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAAS59D,EAAIo9D,EAAa1/D,OAAS,EAAGsC,GAAK,EAAGA,IAC5Co9D,EAAap9D,GAAGgE,OAAS45D,EACzBv7D,KAAKwpB,MAAMgyC,gBAAgBl7D,KAAKy6D,EAAap9D,IAC7C49D,GAAsBR,EAAap9D,GAAGw/B,OAExC,IAAM+7B,EAAe9uD,KAAKqB,IAAI,EAAGwvD,EAAsBhB,EAAgBj6D,KAAKwpB,MAAMwF,WAC9EkqC,EAAe,GACjBl5D,KAAKwpB,MAAMiyC,cAAcn7D,KAAK44D,KAoB7B,EAAAza,UAAAA,yBAAP,SAAgCid,EAAmBrd,EAAqBxgC,GACtE,SADsE,IAAAA,IAAA,GAAA,GAC/DwgC,GAAa,CAClB,IAAMphC,EAAOjd,KAAKwpB,MAAM5qB,IAAI88D,GAC5B,IAAKz+C,EACH,MAAO,EAAE,GAAI,GAGf,IADA,IAAM,EAAS,EAAcA,EAAKG,mBAAqBH,EAAK5hB,OACnDsC,EAAI,EAAGA,EAAI,IAAUA,EAM5B,GALIsf,EAAKre,IAAIjB,GAAG,EAAA0E,yBAGdg8C,GAAephC,EAAKre,IAAIjB,GAAG,EAAAyE,sBAAsB/G,QAAU,GAEzDgjD,EAAc,EAChB,MAAO,CAACqd,EAAW/9D,GAGvB+9D,IAEF,MAAO,CAACA,EAAW,IAad,EAAA5a,UAAAA,4BAAP,SAAmC4a,EAAmB79C,EAAoBC,EAAsBC,QAAtB,IAAAD,IAAA,EAAA,GACxE,IAAMb,EAAOjd,KAAKwpB,MAAM5qB,IAAI88D,GAC5B,OAAKz+C,EAGEA,EAAKW,kBAAkBC,EAAWC,EAAUC,GAF1C,IAKJ,EAAAkmC,UAAAA,uBAAP,SAA8B5uC,GAI5B,IAHA,IAAIgoC,EAAQhoC,EACR6uC,EAAO7uC,EAEJgoC,EAAQ,GAAKr9C,KAAKwpB,MAAM5qB,IAAIy+C,GAAQ5hC,WACzC4hC,IAGF,KAAO6G,EAAO,EAAIlkD,KAAKwpB,MAAMnuB,QAAU2E,KAAKwpB,MAAM5qB,IAAIslD,EAAO,GAAIzoC,WAC/DyoC,IAEF,MAAO,CAAE7G,MAAK,EAAE6G,KAAI,IAOf,EAAAzhB,UAAAA,cAAP,SAAqB9kC,GAUnB,IATIA,MACGqC,EAAAA,KAAKkrB,KAAKvtB,KACbA,EAAIqC,KAAKmrB,SAASxtB,KAGpBqC,KAAKkrB,KAAO,GACZvtB,EAAI,GAGCA,EAAIqC,KAAKu4D,MAAO56D,GAAKqC,KAAKwR,gBAAgB9K,QAAQi1D,aACvD37D,KAAKkrB,KAAKvtB,IAAK,GAQZ,EAAAwtB,UAAAA,SAAP,SAAgB/V,GAId,IAHIA,MACFA,IAAAA,EAAIpV,KAAKoV,IAEHpV,KAAKkrB,OAAO9V,IAAMA,EAAI,IAC9B,OAAOA,GAAKpV,KAAKu4D,MAAQv4D,KAAKu4D,MAAQ,EAAInjD,EAAI,EAAI,EAAIA,GAOjD,EAAAsV,UAAAA,SAAP,SAAgBtV,GAId,IAHIA,MACFA,IAAAA,EAAIpV,KAAKoV,IAEHpV,KAAKkrB,OAAO9V,IAAMA,EAAIpV,KAAKu4D,QACnC,OAAOnjD,GAAKpV,KAAKu4D,MAAQv4D,KAAKu4D,MAAQ,EAAInjD,EAAI,EAAI,EAAIA,GAGjD,EAAAqnB,UAAAA,UAAP,SAAiBpnB,GAAjB,IACQumD,EAAAA,KAAAA,EAAS,IAAI,EAAAC,OAAOxmD,GA0B1B,OAzBArV,KAAKw7B,QAAQr7B,KAAKy7D,GAClBA,EAAOr/D,SAASyD,KAAKwpB,MAAM42B,OAAO,SAAAjjB,GAChCy+B,EAAO3+C,MAAQkgB,EAEXy+B,EAAO3+C,KAAO,GAChB2+C,EAAOx7D,aAGXw7D,EAAOr/D,SAASyD,KAAKwpB,MAAMsyC,SAAS,SAAAtzC,GAC9BozC,EAAO3+C,MAAQuL,EAAM7mB,QACvBi6D,EAAO3+C,MAAQuL,EAAM2U,WAGzBy+B,EAAOr/D,SAASyD,KAAKwpB,MAAMuyC,SAAS,SAAAvzC,GAE9BozC,EAAO3+C,MAAQuL,EAAM7mB,OAASi6D,EAAO3+C,KAAOuL,EAAM7mB,MAAQ6mB,EAAM2U,QAClEy+B,EAAOx7D,UAILw7D,EAAO3+C,KAAOuL,EAAM7mB,QACtBi6D,EAAO3+C,MAAQuL,EAAM2U,WAGzBy+B,EAAOr/D,SAASq/D,EAAOI,UAAU,WAAM,OAAKC,EAAAA,cAAcL,MACnDA,GAGD,EAAAK,UAAAA,cAAR,SAAsBL,GACpB57D,KAAKw7B,QAAQn7B,OAAOL,KAAKw7B,QAAQ55B,QAAQg6D,GAAS,IAG7C,EAAA1e,UAAAA,SAAP,SAAgBr/B,EAAoBvB,EAAqB2a,EAAmBilC,EAAwBC,GAClG,OAAO,IAAIC,EAAqBp8D,KAAM6d,EAAWvB,EAAY2a,EAAUilC,EAAeC,IAE1F,EA5jBE,GApBW,EAAAxE,OA8lBb,EAAA,IAGE,EAAA,WAAA,SACUv5B,EAAAA,EACAi+B,EACAC,EACAC,EACAC,EACAC,QAHA,IAAAH,IAAA,EAAA,QACA,IAAAC,IAAoBn+B,EAAAA,EAAQ5U,MAAMnuB,aAClC,IAAAmhE,IAAA,EAAA,QACA,IAAAC,IAAA,EAAA,GALA,KAAAr+B,QACA,EAAA,KAAAi+B,WACA,EAAA,KAAAC,YACA,EAAA,KAAAC,UACA,EAAA,KAAAC,eACA,EAAA,KAAAC,aAEJz8D,EAAAA,KAAKs8D,YAAc,IACrBt8D,KAAKs8D,YAAc,GAEjBt8D,KAAKu8D,UAAYv8D,KAAKo+B,QAAQ5U,MAAMnuB,SACtC2E,KAAKu8D,UAAYv8D,KAAKo+B,QAAQ5U,MAAMnuB,QAEtC2E,KAAK08D,SAAW18D,KAAKs8D,YA0BzB,OAvBS,EAAAnf,UAAAA,QAAP,WACE,OAAOn9C,KAAK08D,SAAW18D,KAAKu8D,WAGvB,EAAA1sB,UAAAA,KAAP,WACE,IAAMhY,EAAQ73B,KAAKo+B,QAAQ6lB,uBAAuBjkD,KAAK08D,UAEnD7kC,EAAMwlB,MAAQr9C,KAAKs8D,YAAct8D,KAAKw8D,iBACxC3kC,EAAMwlB,MAAQr9C,KAAKs8D,YAAct8D,KAAKw8D,gBAEpC3kC,EAAMqsB,KAAOlkD,KAAKu8D,UAAYv8D,KAAKy8D,eACrC5kC,EAAMqsB,KAAOlkD,KAAKu8D,UAAYv8D,KAAKy8D,cAGrC5kC,EAAMwlB,MAAQjzC,KAAKqB,IAAIosB,EAAMwlB,MAAO,GACpCxlB,EAAMqsB,KAAO95C,KAAKwB,IAAIisB,EAAMqsB,KAAMlkD,KAAKo+B,QAAQ5U,MAAMnuB,QAErD,IADA,IAAIwH,EAAU,GACLlF,EAAIk6B,EAAMwlB,MAAO1/C,GAAKk6B,EAAMqsB,OAAQvmD,EAC3CkF,GAAW7C,KAAKo+B,QAAQ0iB,4BAA4BnjD,EAAGqC,KAAKq8D,YAG9D,OADAr8D,KAAK08D,SAAW7kC,EAAMqsB,KAAO,EACtB,CAACrsB,MAAK,EAAEh1B,QAAO,IAE1B,EAxCE,GAHW,EAAAu5D,iCClnBb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,kBAAA,EAAA,IAgBA,EAAA,EAAA,GAAA,EAYE,WAAA,SACUO,EAAAA,GAAA,KAAAA,WARH,EAAA,KAAAC,gBAAkB,IAAI,EAAAj8D,aAEtB,KAAA66D,gBAAkB,IAAI,EAAA76D,aAEtB,KAAA86D,cAAgB,IAAI,EAAA96D,aAMzBX,KAAK68D,OAAS,IAAI3hE,MAAS8E,KAAK28D,YAChC38D,KAAKs8D,YAAc,EACnBt8D,KAAK88D,QAAU,EAmMnB,OA9ME,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAA8C,OAAO98D,KAAK48D,gBAAgBp0C,mBAE1E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAA8C,OAAOxoB,KAAKw7D,gBAAgBhzC,mBAE1E,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAAsC,OAAOxoB,KAAKy7D,cAAcjzC,mBAUhE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WACE,OAAOxoB,KAAK28D,gBAGd,SAAqB3D,GAEnB,GAAIh5D,KAAK28D,aAAe3D,EAAxB,CAOA,IADA,IAAM+D,EAAW,IAAI7hE,MAAqB89D,GACjCr7D,EAAI,EAAGA,EAAIyM,KAAKwB,IAAIotD,EAAch5D,KAAK3E,QAASsC,IACvDo/D,EAASp/D,GAAKqC,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr/D,IAEjDqC,KAAK68D,OAASE,EACd/8D,KAAK28D,WAAa3D,EAClBh5D,KAAKs8D,YAAc,gBAGrB,EAAA,cAAA,IAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAOt8D,KAAK88D,aAGd,SAAkBG,GAChB,GAAIA,EAAYj9D,KAAK88D,QACnB,IAAK,IAAIn/D,EAAIqC,KAAK88D,QAASn/D,EAAIs/D,EAAWt/D,IACxCqC,KAAK68D,OAAOl/D,QAAK+C,EAGrBV,KAAK88D,QAAUG,eAWV,EAAA,cAAA,IAAA,EAAAr+D,UAAAA,IAAP,SAAW+C,GACT,OAAO3B,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr7D,KAWnC,EAAAwZ,UAAAA,IAAP,SAAWxZ,EAAe3C,GACxBgB,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr7D,IAAU3C,GAQtC,EAAAmB,UAAAA,KAAP,SAAYnB,GACVgB,KAAK68D,OAAO78D,KAAKg9D,gBAAgBh9D,KAAK88D,UAAY99D,EAC9CgB,KAAK88D,UAAY98D,KAAK28D,YACxB38D,KAAKs8D,cAAgBt8D,KAAKs8D,YAAct8D,KAAK28D,WAC7C38D,KAAKy7D,cAAcn7D,KAAK,IAExBN,KAAK88D,WASF,EAAAzH,UAAAA,QAAP,WACE,GAAIr1D,KAAK88D,UAAY98D,KAAK28D,WACxB,MAAM,IAAIriE,MAAM,4CAIlB,OAFA0F,KAAKs8D,cAAgBt8D,KAAKs8D,YAAct8D,KAAK28D,WAC7C38D,KAAKy7D,cAAcn7D,KAAK,GACjBN,KAAK68D,OAAO78D,KAAKg9D,gBAAgBh9D,KAAK88D,QAAU,KAMzD,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WACE,OAAO98D,KAAK88D,UAAY98D,KAAK28D,wBAOxB,EAAA,cAAA,IAAA,EAAAnuC,UAAAA,IAAP,WACE,OAAOxuB,KAAK68D,OAAO78D,KAAKg9D,gBAAgBh9D,KAAK88D,UAAY,KAYpD,EAAAz8D,UAAAA,OAAP,SAAc6G,EAAeg2D,OAAqB,IAEhD,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAAA,GAAIA,EAAa,CACf,IAAK,IAAIv/D,EAAIuJ,EAAOvJ,EAAIqC,KAAK88D,QAAUI,EAAav/D,IAClDqC,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr/D,IAAMqC,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr/D,EAAIu/D,IAE9El9D,KAAK88D,SAAWI,EAIlB,IAASv/D,EAAIqC,KAAK88D,QAAU,EAAGn/D,GAAKuJ,EAAOvJ,IACzCqC,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr/D,EAAIw/D,EAAM9hE,SAAW2E,KAAK68D,OAAO78D,KAAKg9D,gBAAgBr/D,IAEzF,IAASA,EAAI,EAAGA,EAAIw/D,EAAM9hE,OAAQsC,IAChCqC,KAAK68D,OAAO78D,KAAKg9D,gBAAgB91D,EAAQvJ,IAAMw/D,EAAMx/D,GAIvD,GAAIqC,KAAK88D,QAAUK,EAAM9hE,OAAS2E,KAAK28D,WAAY,CACjD,IAAMS,EAAep9D,KAAK88D,QAAUK,EAAM9hE,OAAU2E,KAAK28D,WACzD38D,KAAKs8D,aAAec,EACpBp9D,KAAK88D,QAAU98D,KAAK28D,WACpB38D,KAAKy7D,cAAcn7D,KAAK88D,QAExBp9D,KAAK88D,SAAWK,EAAM9hE,QAQnB,EAAAowB,UAAAA,UAAP,SAAiButB,GACXA,EAAQh5C,KAAK88D,UACf9jB,EAAQh5C,KAAK88D,SAEf98D,KAAKs8D,aAAetjB,EACpBh5C,KAAK88D,SAAW9jB,EAChBh5C,KAAKy7D,cAAcn7D,KAAK04C,IAGnB,EAAApqB,UAAAA,cAAP,SAAqB1nB,EAAe8xC,EAAevB,GACjD,KAAIuB,GAAS,GAAb,CAGA,GAAI9xC,EAAQ,GAAKA,GAASlH,KAAK88D,QAC7B,MAAM,IAAIxiE,MAAM,+BAElB,GAAI4M,EAAQuwC,EAAS,EACnB,MAAM,IAAIn9C,MAAM,gDAGlB,GAAIm9C,EAAS,EAAG,CACd,IAAK,IAAI95C,EAAIq7C,EAAQ,EAAGr7C,GAAK,EAAGA,IAC9BqC,KAAKmb,IAAIjU,EAAQvJ,EAAI85C,EAAQz3C,KAAKpB,IAAIsI,EAAQvJ,IAEhD,IAAM0/D,EAAgBn2D,EAAQ8xC,EAAQvB,EAAUz3C,KAAK88D,QACrD,GAAIO,EAAe,EAEjB,IADAr9D,KAAK88D,SAAWO,EACTr9D,KAAK88D,QAAU98D,KAAK28D,YACzB38D,KAAK88D,UACL98D,KAAKs8D,cACLt8D,KAAKy7D,cAAcn7D,KAAK,QAI5B,IAAS3C,EAAI,EAAGA,EAAIq7C,EAAOr7C,IACzBqC,KAAKmb,IAAIjU,EAAQvJ,EAAI85C,EAAQz3C,KAAKpB,IAAIsI,EAAQvJ,MAW5C,EAAAq/D,UAAAA,gBAAR,SAAwBr7D,GACtB,OAAQ3B,KAAKs8D,YAAc36D,GAAS3B,KAAK28D,YAE7C,EAxME,GAZW,EAAAlE,yBCuLb,EAAA,EAAA,GAAA,aAAA,SAAgBqC,EAA4BtxC,EAAqB7rB,EAAW4b,GAE1E,GAAI5b,IAAM6rB,EAAMnuB,OAAS,EACvB,OAAOmuB,EAAM7rB,GAAGyf,mBAKlB,IAAMkgD,GAAe9zC,EAAM7rB,GAAGue,WAAW3C,EAAO,IAAuC,IAAhCiQ,EAAM7rB,GAAG6F,SAAS+V,EAAO,GAC1EgkD,EAA2D,IAA7B/zC,EAAM7rB,EAAI,GAAG6F,SAAS,GAC1D,OAAI85D,GAAcC,EACThkD,EAAO,EAETA,SAtMT,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,4BAAA,EAAA,+BAAA,EAAA,2BAAA,EAAA,4BAAA,EAAA,kCAAA,EAAA,EAA6CiQ,6BAAAA,SAAAA,EAAkCg0C,EAAiBvF,EAAiBwF,EAAyB1E,GAKxI,IAFA,IAAMQ,EAAqB,GAElBlkD,EAAI,EAAGA,EAAImU,EAAMnuB,OAAS,EAAGga,IAAK,CAEzC,IAAI1X,EAAI0X,EACJ6R,EAAWsC,EAAM5qB,MAAMjB,GAC3B,GAAKupB,EAASzL,UAAd,CAMA,IADA,IAAMy+C,EAA6B,CAAC1wC,EAAM5qB,IAAIyW,IACvC1X,EAAI6rB,EAAMnuB,QAAU6rB,EAASzL,WAClCy+C,EAAa/5D,KAAK+mB,GAClBA,EAAWsC,EAAM5qB,MAAMjB,GAKzB,GAAI8/D,GAAmBpoD,GAAKooD,EAAkB9/D,EAC5C0X,GAAK6kD,EAAa7+D,OAAS,MAD7B,CAUA,IAJA,IAAIq/D,EAAgB,EAChBl9C,EAAUs9C,EAA4BZ,EAAcQ,EAAe8C,GACnE7C,EAAe,EACfp9C,EAAS,EACNo9C,EAAeT,EAAa7+D,QAAQ,CACzC,IAAMqiE,EAAuB5C,EAA4BZ,EAAcS,EAAc6C,GAC/EG,EAAoBD,EAAuBngD,EAC3CqgD,EAAqB3F,EAAUz6C,EAC/Bo9C,EAAcxwD,KAAKwB,IAAI+xD,EAAmBC,GAEhD1D,EAAaQ,GAAer9C,cAAc68C,EAAaS,GAAep9C,EAAQC,EAASo9C,GAAa,IAEpGp9C,GAAWo9C,KACK3C,IACdyC,IACAl9C,EAAU,IAEZD,GAAUq9C,KACK8C,IACb/C,IACAp9C,EAAS,GAIK,IAAZC,GAAmC,IAAlBk9C,GAC2C,IAA1DR,EAAaQ,EAAgB,GAAGl3D,SAASy0D,EAAU,KACrDiC,EAAaQ,GAAer9C,cAAc68C,EAAaQ,EAAgB,GAAIzC,EAAU,EAAGz6C,IAAW,GAAG,GAEtG08C,EAAaQ,EAAgB,GAAG5+C,QAAQm8C,EAAU,EAAGc,IAM3DmB,EAAaQ,GAAe79C,aAAaW,EAASy6C,EAASc,GAI3D,IADA,IAAI8E,EAAgB,EACX,EAAI3D,EAAa7+D,OAAS,EAAG,EAAI,IACpC,EAAIq/D,GAAwD,IAAvCR,EAAa,GAAG98C,oBADE,IAEzCygD,IAMAA,EAAgB,IAClBtE,EAASp5D,KAAKkV,EAAI6kD,EAAa7+D,OAASwiE,GACxCtE,EAASp5D,KAAK09D,IAGhBxoD,GAAK6kD,EAAa7+D,OAAS,IAE7B,OAAOk+D,GAQT,EAA4C/vC,4BAAAA,SAAAA,EAAkC+vC,GAM5E,IALA,IAAMK,EAAmB,GAErBkE,EAAoB,EACpBC,EAAoBxE,EAASuE,GAC7BE,EAAoB,EACfrgE,EAAI,EAAGA,EAAI6rB,EAAMnuB,OAAQsC,IAChC,GAAIogE,IAAsBpgE,EAAG,CAC3B,IAAMkgE,EAAgBtE,IAAWuE,GAGjCt0C,EAAMozC,gBAAgBt8D,KAAK,CACzBqB,MAAOhE,EAAIqgE,EACX7gC,OAAQ0gC,IAGVlgE,GAAKkgE,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoBxE,IAAWuE,QAE/BlE,EAAOz5D,KAAKxC,GAGhB,MAAO,CACLi8D,OAAM,EACNE,aAAckE,IAUlB,EAA2Cx0C,2BAAAA,SAAAA,EAAkCy0C,GAG3E,IADA,IAAMC,EAA+B,GAC5BvgE,EAAI,EAAGA,EAAIsgE,EAAU5iE,OAAQsC,IACpCugE,EAAe/9D,KAAKqpB,EAAM5qB,IAAIq/D,EAAUtgE,KAI1C,IAASA,EAAI,EAAGA,EAAIugE,EAAe7iE,OAAQsC,IACzC6rB,EAAMrO,IAAIxd,EAAGugE,EAAevgE,IAE9B6rB,EAAMnuB,OAAS4iE,EAAU5iE,QAiB3B,EAA+C6+D,+BAAAA,SAAAA,EAA4BsD,EAAiBvF,GAS1F,IARA,IAAMkG,EAA2B,GAC3BC,EAAclE,EAAan+D,IAAI,SAACiC,EAAGL,GAAM,OAAAm9D,EAA4BZ,EAAcv8D,EAAG6/D,KAAUa,OAAO,SAACz+D,EAAGxB,GAAM,OAAAwB,EAAIxB,IAIvHmf,EAAS,EACT+gD,EAAU,EACVC,EAAiB,EACdA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiBtG,EAAS,CAE1CkG,EAAeh+D,KAAKi+D,EAAcG,GAClC,MAEFhhD,GAAU06C,EACV,IAAMuG,EAAmB1D,EAA4BZ,EAAcoE,EAASd,GACxEjgD,EAASihD,IACXjhD,GAAUihD,EACVF,KAEF,IAAMG,EAA8D,IAA/CvE,EAAaoE,GAAS96D,SAAS+Z,EAAS,GACzDkhD,GACFlhD,IAEF,IAAMovC,EAAa8R,EAAexG,EAAU,EAAIA,EAChDkG,EAAeh+D,KAAKwsD,GACpB4R,GAAkB5R,EAGpB,OAAOwR,GAGT,0CCxMA,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,YAAA,EAAA,IAIA,EAAA,EAAA,GAAA,EAWE,SAAA,GAAA,SACSlhD,EAAAA,GADT,IAGE,EAAA,EAAO,KAAA,OAAA,YAFA,EAAAA,KATD,EAAA,EAAAuT,IAAcqrC,EAAO6C,UACtB,EAAAC,YAAsB,EAIrB,EAAAC,WAAa,IAAI,EAAAj+D,eAkB3B,OA1B4B,EAM1B,EAAA,GAAA,OAAW,eAAA,EAAE,UAAA,KAAA,KAAb,WAA0B,OAAOX,KAAKwwB,iBAGtC,EAAA,cAAA,IAAA,OAAW,eAAA,EAAS,UAAA,YAAA,KAApB,WAAuC,OAAOxwB,KAAK4+D,WAAWp2C,mBAQvD,EAAA,cAAA,IAAA,EAAApoB,UAAAA,QAAP,WACMJ,KAAK2+D,aAGT3+D,KAAK2+D,YAAa,EAClB3+D,KAAKid,MAAQ,EAEbjd,KAAK4+D,WAAWt+D,SAvBH,EAAAo+D,QAAU,EAyB3B,EAfE,CAdF,EAG4B38D,GAAAA,YAAf,EAAA85D,mBCHb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,wBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EAMa,EAAA,IAAA,EAAAgD,mBAAqB,ioBAGrB,EAAAC,gBAAoCrgE,OAAO8c,OAAO,CAC7DhC,KAAM,GACNpF,KAAM,GACN2M,aAAa,EACbD,YAAa,QACbu6B,YAAa,EACb6K,UAAY,EAAA4Y,mBACZtzB,UAAW,OACX10B,4BAA4B,EAC5B83B,mBAAoB,MACpBC,sBAAuB,EACvBh1B,WAAY,kCACZD,SAAU,GACVD,WAAY,SACZD,eAAgB,OAChB8yB,WAAY,EACZob,yBAA0B,IAC1B/T,cAAe,EACf9K,SAAU,OACVgwB,WAAY,IACZjqB,kBAAmB,EACnB7lB,kBAAkB,EAClBmhB,iBAAiB,EACjBqX,+BAA+B,EAC/B3nC,qBAAsB,EACtBklD,cAAc,EACdrkC,kBAAkB,EAClB1H,mBAAmB,EACnB2oC,aAAc,EACdvnC,MAAO,GACPuP,sBAAuB,EAAAl3B,MACvB26B,aAAc,SACd9gB,cAAe,GACfmvC,aAAa,EACb1R,cAAe,eAEfz5B,YAAY,EACZ4B,SAAU,QACVkf,cAAc,IAMhB,IAAM4zB,EAA2B,CAAC,OAAQ,QAE1C,EAQE,WAAA,SAAYt4D,EAAAA,GAHJ,KAAAu4D,gBAAkB,IAAI,EAAAt+D,aAI5BX,KAAK0G,QAAU,EAAAjC,MAAM,EAAAq6D,iBACrB,IAAgB,IAAArgE,EAAAA,EAAAA,EAAAA,OAAOse,KAAKrW,GAAZ,EAAsB,EAAA,OAAA,IAAA,CAAjC,IAAMmpB,EAAC,EACV,GAAA,GAAIA,KAAK7vB,KAAK0G,QAAS,CACrB,IAAMw4D,EAAWx4D,EAAQmpB,GACzB7vB,KAAK0G,QAAQmpB,GAAKqvC,IAyE1B,OAhFE,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WAA8C,OAAOl/D,KAAKi/D,gBAAgBz2C,mBAYnE,EAAA,cAAA,IAAA,EAAAsV,UAAAA,UAAP,SAAiBx+B,EAAaN,GAC5B,KAAMM,KAAO,EAAAw/D,iBACX,MAAM,IAAIxkE,MAAM,uBAAyBgF,EAAM,KAEjD,IAA+C,IAA3C0/D,EAAyBp9D,QAAQtC,GACnC,MAAM,IAAIhF,MAAM,WAAWgF,EAAG,wCAE5BU,KAAK0G,QAAQpH,KAASN,IAI1BA,EAAQgB,KAAKm/D,2BAA2B7/D,EAAKN,GAGzCgB,KAAK0G,QAAQpH,KAASN,IAI1BgB,KAAK0G,QAAQpH,GAAON,EACpBgB,KAAKi/D,gBAAgB3+D,KAAKhB,MAGpB,EAAA6/D,UAAAA,2BAAR,SAAmC7/D,EAAaN,GAC9C,OAAQM,GACN,IAAK,YACL,IAAK,cACL,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,gBACEN,IACHA,EAAQ,EAAA8/D,gBAAgBx/D,IAE1B,MACF,IAAK,cACHN,EAAQoL,KAAKqkC,MAAMzvC,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAI1E,MAASgF,EAAG,kCAAkCN,GAE1D,MACF,IAAK,uBACHA,EAAQoL,KAAKqB,IAAI,EAAGrB,KAAKwB,IAAI,GAAIxB,KAAKC,MAAc,GAARrL,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQoL,KAAKwB,IAAI5M,EAAO,aACZ,EACV,MAAM,IAAI1E,MAASgF,EAAG,kCAAkCN,GAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAI1E,MAASgF,EAAG,8CAA8CN,GAI1E,OAAOA,GAGF,EAAA6+B,UAAAA,UAAP,SAAiBv+B,GACf,KAAMA,KAAO,EAAAw/D,iBACX,MAAM,IAAIxkE,MAAM,uBAAuBgF,EAAG,KAE5C,OAAOU,KAAK0G,QAAQpH,IAExB,EA9EE,GARW,EAAA40D,2BC1Db,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,EAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,iBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAEA,EAAA,GAAA,EACA,EAAA,IAAA,EAEMkL,EAAAA,GAAAA,EAAwB3gE,OAAO8c,OAAO,CAC1C6N,YAAY,IAGRi2C,EAA8C5gE,OAAO8c,OAAO,CAChE4Q,uBAAuB,EACvBG,mBAAmB,EACnBQ,oBAAoB,EACpBlC,QAAQ,EACRL,mBAAmB,EACnBiC,WAAW,EACXrD,YAAY,IAGd,EAkBE,SAAA,GAAA,SAEEoU,EAAAA,EACiChsB,EACHyO,EACIxO,GALpC,IAOE,EAAA,EAAO,KAAA,OAAA,YAJ0B,EAAAD,eACH,EAAA,EAAAyO,YACI,EAAA,EAAAxO,gBApB7B,EAAA,EAAAqb,qBAA+B,EAC/B,EAAAH,gBAA0B,EAOzB,EAAAsnC,QAAU,EAAKz3D,SAAS,IAAI,EAAAoE,cAE5B,EAAA2+D,aAAe,EAAK/iE,SAAS,IAAI,EAAAoE,cAEjC,EAAAozD,UAAY,EAAKx3D,SAAS,IAAI,EAAAoE,cAWpC,EAAK4+D,gBAAkBhiC,EACvB,EAAKhhC,SAAS,CAAE6D,QAAS,WAAM,OAAKm/D,EAAAA,qBAAkB7+D,KACtD,EAAK2oB,MAAQ,EAAA5kB,MAAM26D,GACnB,EAAKl2C,gBAAkB,EAAAzkB,MAAM46D,KAqCjC,OAlEiC,EAY/B,EAAA,GAAA,OAAW,eAAA,EAAM,UAAA,SAAA,KAAjB,WAAsC,OAAOr/D,KAAKg0D,QAAQxrC,mBAE1D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAW,UAAA,cAAA,KAAtB,WAAyC,OAAOxoB,KAAKs/D,aAAa92C,mBAElE,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAOxoB,KAAK+zD,UAAUvrC,mBAgBvD,EAAA,cAAA,IAAA,EAAAqF,UAAAA,MAAP,WACE7tB,KAAKqpB,MAAQ,EAAA5kB,MAAM26D,GACnBp/D,KAAKkpB,gBAAkB,EAAAzkB,MAAM46D,IAGxB,EAAA7+C,UAAAA,iBAAP,SAAwBvZ,EAAcu4D,GAEpC,QAFoC,IAAAA,IAAA,GAAA,IAEhCx/D,KAAKwR,gBAAgB9K,QAAQq4D,aAAjC,CAKA,IAAMr+C,EAAS1gB,KAAKuR,eAAemP,OAC/BA,EAAO+I,QAAU/I,EAAOgL,OAC1B1rB,KAAKu/D,kBAIHC,GACFx/D,KAAKs/D,aAAah/D,OAIpBN,KAAKggB,YAAYe,MAAM,iBAAiB9Z,EAAI,IAAK,WAAM,OAAAA,EAAKyuB,MAAM,IAAI35B,IAAI,SAAAgB,GAAK,OAAAA,EAAE6G,WAAW,OAC5F5D,KAAKg0D,QAAQ1zD,KAAK2G,KAGb,EAAAw4D,UAAAA,mBAAP,SAA0Bx4D,GACpBjH,KAAKwR,gBAAgB9K,QAAQq4D,eAGjC/+D,KAAKggB,YAAYe,MAAM,mBAAmB9Z,EAAI,IAAK,WAAM,OAAAA,EAAKyuB,MAAM,IAAI35B,IAAI,SAAAgB,GAAK,OAAAA,EAAE6G,WAAW,OAC9F5D,KAAK+zD,UAAUzzD,KAAK2G,KAhEA,EAqBnB,CAAA,EAAAnG,EAAAA,EAAAA,gBACA,EAAAO,EAAAA,EAAAA,aACA,EAAAC,EAAAA,EAAAA,kBAvBQ+yD,GAkBX,CAlB+B,EAAAtyD,YAApB,EAAAsyD,wBCrBb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,sBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAMMqL,EAAAA,GAAAA,EAAyD,CAM7DC,KAAM,CACJ92B,OAAQ,EACR+2B,SAAU,WAAM,OAOlBC,IAAAA,IAAK,CACHh3B,OAAQ,EACR+2B,SAAU,SAAC7iE,GAET,OAAiB,IAAbA,EAAEymC,QAAiD,IAAbzmC,EAAEqmB,SAI5CrmB,EAAEirC,MAAO,EACTjrC,EAAE+hC,KAAM,EACR/hC,EAAEwxB,OAAQ,GACH,KAQXuxC,MAAO,CACLj3B,OAAQ,GACR+2B,SAAU,SAAC7iE,GAET,OAAiB,KAAbA,EAAEqmB,SAWV28C,KAAM,CACJl3B,OAAQ,GACR+2B,SAAU,SAAC7iE,GAET,OAAiB,KAAbA,EAAEqmB,QAAgD,IAAbrmB,EAAEymC,SAW/Cw8B,IAAK,CACHn3B,OACE,GAEF+2B,SAAU,SAAC7iE,GAAuB,OAWtC,KAAA,SAASkjE,EAAUljE,EAAoBmjE,GACrC,IAAI1kE,GAAQuB,EAAEirC,KAAO,GAAiB,IAAMjrC,EAAEwxB,MAAQ,EAAkB,IAAMxxB,EAAE+hC,IAAM,EAAgB,GAoBtG,OAnBiB,IAAb/hC,EAAEymC,QACJhoC,GAAQ,GACRA,GAAQuB,EAAEqmB,SAEV5nB,GAAmB,EAAXuB,EAAEymC,OACK,EAAXzmC,EAAEymC,SACJhoC,GAAQ,IAEK,EAAXuB,EAAEymC,SACJhoC,GAAQ,KAEO,KAAbuB,EAAEqmB,OACJ5nB,GAAQ,GACc,IAAbuB,EAAEqmB,QAAkC88C,IAG7C1kE,GAAQ,IAGLA,EAGT,IAAM2kE,EAAIp5D,OAAOC,aAKXo5D,EAAwD,CAM5DC,QAAS,SAACtjE,GACR,IAAMmjB,EAAS,CAAC+/C,EAAUljE,GAAG,GAAS,GAAIA,EAAEgrC,IAAM,GAAIhrC,EAAE4uB,IAAM,IAK9D,OAAIzL,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAASigD,EAAEjgD,EAAO,IAAMigD,EAAEjgD,EAAO,IAAMigD,EAAEjgD,EAAO,KAOzDogD,IAAK,SAACvjE,GACJ,IAAM2mB,EAAsB,IAAb3mB,EAAEqmB,QAA8C,IAAbrmB,EAAEymC,OAAoC,IAAM,IAC9F,MAAO,MAASy8B,EAAUljE,GAAG,GAAK,IAAIA,EAAEgrC,IAAG,IAAIhrC,EAAE4uB,IAAMjI,IAoB3D,EAQE,WAAA,SACmCnS,EAAAA,EACFwO,GADE,KAAAxO,eACF,EAAA,KAAAwO,aATzB,EAAA,KAAAwgD,WAAmD,GACnD,KAAAC,WAAkD,GAClD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,kBAAoB,IAAI,EAAAhgE,aACxB,KAAAigE,WAAqC,KAO3C,IAAmB,IAAAniE,EAAAA,EAAAA,EAAAA,OAAOse,KAAK2iD,GAAZ,EAAgC,EAAA,OAAA,IAAA,CAA9C,IAAM,EAAI,EAAoC1/D,GAAAA,KAAK6gE,YAAY,EAAMnB,EAAkB,IAC5F,IAAmB,IAAAjhE,EAAAA,EAAAA,EAAAA,OAAOse,KAAKqjD,GAAZ,EAAgC,EAAA,OAAA,IAAA,CAA9C,IAAM,EAAI,EAAoCpgE,GAAAA,KAAK8gE,YAAY,EAAMV,EAAkB,IAE5FpgE,KAAK6tB,QAiIT,OA9HS,EAAAgzC,UAAAA,YAAP,SAAmBviE,EAAcyiE,GAC/B/gE,KAAKugE,WAAWjiE,GAAQyiE,GAGnB,EAAAD,UAAAA,YAAP,SAAmBxiE,EAAc0iE,GAC/BhhE,KAAKwgE,WAAWliE,GAAQ0iE,GAG1B,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WACE,OAAOhhE,KAAKygE,qBAOd,SAA0BniE,GACxB,IAAK0B,KAAKugE,WAAWjiE,GACnB,MAAM,IAAIhE,MAAM,qBAAqBgE,EAAI,KAE3C0B,KAAKygE,gBAAkBniE,EACvB0B,KAAK2gE,kBAAkBrgE,KAAKN,KAAKugE,WAAWjiE,GAAMuqC,qBATpD,EAAA,cAAA,IAAA,OAAW,eAAA,EAAoB,UAAA,uBAAA,KAA/B,WACE,OAAwD,IAAjD7oC,KAAKugE,WAAWvgE,KAAKygE,iBAAiB53B,oBAW/C,EAAA,cAAA,IAAA,OAAW,eAAA,EAAc,UAAA,iBAAA,KAAzB,WACE,OAAO7oC,KAAK0gE,qBAGd,SAA0BpiE,GACxB,IAAK0B,KAAKwgE,WAAWliE,GACnB,MAAM,IAAIhE,MAAM,qBAAqBgE,EAAI,KAE3C0B,KAAK0gE,gBAAkBpiE,eAGlB,EAAA,cAAA,IAAA,EAAAuvB,UAAAA,MAAP,WACE7tB,KAAKusB,eAAiB,OACtBvsB,KAAKysB,eAAiB,UACtBzsB,KAAK4gE,WAAa,MAMpB,OAAW,eAAA,EAAgB,UAAA,mBAAA,KAA3B,WACE,OAAO5gE,KAAK2gE,kBAAkBn4C,mBAazB,EAAA,cAAA,IAAA,EAAAsf,UAAAA,kBAAP,SAAyB/qC,GAEvB,GAAIA,EAAEgrC,IAAM,GAAKhrC,EAAEgrC,KAAO/nC,KAAKuR,eAAegI,MACvCxc,EAAE4uB,IAAM,GAAK5uB,EAAE4uB,KAAO3rB,KAAKuR,eAAe4C,KAC/C,OAAO,EAIT,GAAiB,IAAbpX,EAAEymC,QAAiD,KAAbzmC,EAAEqmB,OAC1C,OAAO,EAET,GAAiB,IAAbrmB,EAAEymC,QAAgD,KAAbzmC,EAAEqmB,OACzC,OAAO,EAET,GAAiB,IAAbrmB,EAAEymC,SAAkD,IAAbzmC,EAAEqmB,QAAgD,IAAbrmB,EAAEqmB,QAChF,OAAO,EAQT,GAJArmB,EAAEgrC,MACFhrC,EAAE4uB,MAGe,KAAb5uB,EAAEqmB,QAAmCpjB,KAAK4gE,YAAc5gE,KAAKihE,eAAejhE,KAAK4gE,WAAY7jE,GAC/F,OAAO,EAIT,IAAKiD,KAAKugE,WAAWvgE,KAAKygE,iBAAiBb,SAAS7iE,GAClD,OAAO,EAIT,IAAMmkE,EAASlhE,KAAKwgE,WAAWxgE,KAAK0gE,iBAAiB3jE,GAYrD,OAXImkE,IAE2B,YAAzBlhE,KAAK0gE,gBACP1gE,KAAK+f,aAAa0/C,mBAAmByB,GAErClhE,KAAK+f,aAAaS,iBAAiB0gD,GAAQ,IAI/ClhE,KAAK4gE,WAAa7jE,GAEX,GAGF,EAAAgsC,UAAAA,cAAP,SAAqBF,GACnB,MAAO,CACLs4B,QAAkB,EAATt4B,GACTu4B,MAAgB,EAATv4B,GACPw4B,QAAkB,EAATx4B,GACTy4B,QAAkB,EAATz4B,GACTP,SAAmB,GAATO,KAIN,EAAAo4B,UAAAA,eAAR,SAAuBM,EAAqBC,GAC1C,OAAID,EAAGx5B,MAAQy5B,EAAGz5B,KACdw5B,EAAG51C,MAAQ61C,EAAG71C,KACd41C,EAAG/9B,SAAWg+B,EAAGh+B,QACjB+9B,EAAGn+C,SAAWo+C,EAAGp+C,QACjBm+C,EAAGv5B,OAASw5B,EAAGx5B,MACfu5B,EAAGziC,MAAQ0iC,EAAG1iC,KACdyiC,EAAGhzC,QAAUizC,EAAGjzC,OA9IK,EASxB,CAAA,EAAAztB,EAAAA,EAAAA,gBACA,EAAAG,EAAAA,EAAAA,eAVQqzD,GAQX,GARW,EAAAA,6BC9Jb,EAAA,EAAA,GAAA,aAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,iBAAA,SAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,KAAA,SAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,qBAAA,EAAA,IAEA,EAAA,EAAA,GAAA,EASE,WAAA,SACmC/iD,EAAAA,GAAA,KAAAA,eAEjCvR,EAAAA,KAAK4oB,aAiCT,OAvCE,OAAW,eAAA,EAAK,UAAA,QAAA,KAAhB,WAA6B,OAAO5oB,KAAKixB,oBACzC,EAAA,cAAA,IAAA,OAAW,eAAA,EAAG,UAAA,MAAA,KAAd,WAA2B,OAAOjxB,KAAKoxB,kBAQhC,EAAA,cAAA,IAAA,EAAAxI,UAAAA,WAAP,WACE5oB,KAAKixB,OAASjxB,KAAKuR,eAAemP,OAAOrL,EACzCrV,KAAKoxB,KAAOpxB,KAAKuR,eAAemP,OAAOrL,GAGlC,EAAAqU,UAAAA,UAAP,SAAiBrU,GACXA,EAAIrV,KAAKixB,OACXjxB,KAAKixB,OAAS5b,EACLA,EAAIrV,KAAKoxB,OAClBpxB,KAAKoxB,KAAO/b,IAIT,EAAA0W,UAAAA,eAAP,SAAsBpT,EAAYC,GAChC,GAAID,EAAKC,EAAI,CACX,IAAMyB,EAAO1B,EACbA,EAAKC,EACLA,EAAKyB,EAEH1B,EAAK3Y,KAAKixB,SACZjxB,KAAKixB,OAAStY,GAEZC,EAAK5Y,KAAKoxB,OACZpxB,KAAKoxB,KAAOxY,IAIT,EAAAkW,UAAAA,aAAP,WACE9uB,KAAK+rB,eAAe,EAAG/rB,KAAKuR,eAAe4C,KAAO,IA3C1B,EAUvB,CAAA,EAAArT,EAAAA,EAAAA,iBAVQyzD,GASX,GATW,EAAAA,4BCFb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,oBAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAGA,EAAA,IAAA,EASE,WAAA,SANQ,IAAA,KAAAkN,WAAuDhjE,OAAOY,OAAO,MACrE,KAAAsyB,QAAkB,GAElB,KAAA+vC,UAAY,IAAI,EAAA/gE,aAItB,IAAMghE,EAAkB,IAAI,EAAAC,UAC5B5hE,KAAKzD,SAASolE,GACd3hE,KAAK2xB,QAAUgwC,EAAgB7hC,QAC/B9/B,KAAK6hE,gBAAkBF,EA2D3B,OAjEE,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WAAwC,OAAO3hE,KAAK0hE,UAAUl5C,mBAS9D,EAAA,cAAA,IAAA,OAAW,eAAA,EAAQ,UAAA,WAAA,KAAnB,WACE,OAAO/pB,OAAOse,KAAK/c,KAAKyhE,yBAG1B,EAAA,cAAA,IAAA,OAAW,eAAA,EAAa,UAAA,gBAAA,KAAxB,WACE,OAAOzhE,KAAK2xB,aAGd,SAAyBmO,GACvB,IAAK9/B,KAAKyhE,WAAW3hC,GACnB,MAAM,IAAIxlC,MAAM,4BAA4BwlC,EAAO,KAErD9/B,KAAK2xB,QAAUmO,EACf9/B,KAAK6hE,gBAAkB7hE,KAAKyhE,WAAW3hC,GACvC9/B,KAAK0hE,UAAUphE,KAAKw/B,gBAGf,EAAA,cAAA,IAAA,EAAAvjC,UAAAA,SAAP,SAAgBmjC,GACd1/B,KAAKyhE,WAAW/hC,EAASI,SAAWJ,GAM/B,EAAA/V,UAAAA,QAAP,SAAem4C,GACb,OAAO9hE,KAAK6hE,gBAAgBl4C,QAAQm4C,IAG/B,EAAAjjB,UAAAA,mBAAP,SAA0Bh/C,GAGxB,IAFA,IAAIuH,EAAS,EACP/L,EAASwE,EAAExE,OACRsC,EAAI,EAAGA,EAAItC,IAAUsC,EAAG,CAC/B,IAAInC,EAAOqE,EAAE+D,WAAWjG,GAExB,GAAI,OAAUnC,GAAQA,GAAQ,MAAQ,CACpC,KAAMmC,GAAKtC,EAMT,OAAO+L,EAASpH,KAAK2pB,QAAQnuB,GAE/B,IAAMsI,EAASjE,EAAE+D,WAAWjG,GAGxB,OAAUmG,GAAUA,GAAU,MAChCtI,EAAyB,MAAjBA,EAAO,OAAkBsI,EAAS,MAAS,MAEnDsD,GAAUpH,KAAK2pB,QAAQ7lB,GAG3BsD,GAAUpH,KAAK2pB,QAAQnuB,GAEzB,OAAO4L,GAEX,EA/DE,GATW,EAAAotD,2BCJb,EAAA,EAAA,GAAA,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,eAAA,EAAA,IA0DI7kB,EA1DJ,EAIMoyB,EAAAA,IAAAA,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MA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","file":"sparkline.e89dfa1c.js","sourceRoot":"..","sourcesContent":["import module from './Cargo.toml'\nmodule.run();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n\n  onResize: IEvent<{ cols: number, rows: number }>;\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    // TODO: fix\n    if (!this._drawBoxChar(cell, x, y)) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Maybe manually draw box character\n    if (!this._drawBoxChar(cell, x, y)) {\n      // Draw the character\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    }\n    this._ctx.restore();\n  }\n\n  private _drawBoxChar(cell: ICellData, x: number, y: number): boolean {\n    const char = cell.getChars();\n\n    const boxes = boxDrawingBoxes[char];\n    if (boxes) {\n      this._ctx.strokeStyle = this._ctx.fillStyle;\n      const xOffset = x * this._scaledCellWidth + this._scaledCharLeft;\n      const yOffset = y * this._scaledCellHeight + this._scaledCharTop;\n      const xEighth = this._scaledCellWidth / 8;\n      const yEighth = this._scaledCellHeight / 8;\n\n      for (let i = 0; i < boxes.length; i++) {\n        const box = boxes[i];\n        this._ctx.fillRect(\n          xOffset + (box.x*xEighth),\n          yOffset + (box.y*yEighth),\n          (box.w * xEighth),\n          (box.h * yEighth));\n      }\n\n      return true;\n    }\n\n    const ops = boxDrawingLineSegments[char];\n    if (!ops) {\n      return false;\n    }\n\n    // TODO: Clean below\n    const scale = window.devicePixelRatio;\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    this._ctx.lineWidth = scale; \n\n    const xOffset = x * this._scaledCellWidth + this._scaledCharLeft;\n    const yOffset = y * this._scaledCellHeight + this._scaledCharTop;\n    const horizontalCenter = this._scaledCellWidth / 2;\n    const verticalCenter = this._scaledCellHeight / 2;\n    const xPoints = [\n        xOffset,\n        xOffset + horizontalCenter - scale,\n        xOffset + horizontalCenter - scale/2,\n        xOffset + horizontalCenter,\n        xOffset + horizontalCenter + scale/2,\n        xOffset + horizontalCenter + scale,\n        xOffset + this._scaledCellWidth\n    ];\n    const yPoints = [\n        yOffset,\n        yOffset + verticalCenter - scale,\n        yOffset + verticalCenter - scale/2,\n        yOffset + verticalCenter,\n        yOffset + verticalCenter + scale/2,\n        yOffset + verticalCenter + scale,\n        yOffset + this._scaledCellHeight\n    ];\n\n    for (let i = 0; i < ops.length; i++) {\n      const op = ops[i];\n\n      if (i === 0 || (op.x1 !== ops[i-1].x2 || op.y1 !== ops[i-1].y2)) {\n        this._ctx.beginPath();\n        this._ctx.moveTo(xPoints[op.x1], yPoints[op.y1]);\n      }\n\n      if (typeof op.cx1 !== \"undefined\") {\n        // Draw curve\n        this._ctx.bezierCurveTo(\n          xPoints[op.cx1],\n          yPoints[op.cy1],\n          xPoints[op.cx2],\n          yPoints[op.cy2],\n          xPoints[op.x2],\n          yPoints[op.y2]);\n      } else {\n        // Draw line\n        this._ctx.lineTo(xPoints[op.x2], yPoints[op.y2]);\n      }\n\n      this._ctx.stroke();\n    }\n\n    return true;\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\nconst boxDrawingLineSegments: { [index: string]: any } = {\n  \"─\": [{x1: 0, y1: 3, x2: 6, y2: 3}],\n  \"━\": [{x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 6, y2: 4}],\n  \"│\": [{x1: 3, y1: 0, x2: 3, y2: 6}],\n  \"┃\": [{x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}],\n  \"┌\": [{x1: 6, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┍\": [{x1: 6, y1: 2, x2: 3, y2: 2}, {x1: 3, y1: 2, x2: 3, y2: 6}, {x1: 6, y1: 4, x2: 3, y2: 4}],\n  \"┎\": [{x1: 6, y1: 3, x2: 2, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"┏\": [{x1: 6, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 6}, {x1: 6, y1: 4, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 4, y2: 6}],\n  \"┐\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┑\": [{x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 3, y1: 2, x2: 3, y2: 6}, {x1: 0, y1: 4, x2: 3, y2: 4}],\n  \"┒\": [{x1: 0, y1: 3, x2: 4, y2: 3}, {x1: 4, y1: 3, x2: 4, y2: 6}, {x1: 2, y1: 3, x2: 2, y2: 6}],\n  \"┓\": [{x1: 0, y1: 2, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 4, y2: 6}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}],\n  \"└\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"┕\": [{x1: 3, y1: 0, x2: 3, y2: 4}, {x1: 3, y1: 4, x2: 6, y2: 4}, {x1: 3, y1: 2, x2: 6, y2: 2}],\n  \"┖\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 2, y1: 3, x2: 6, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}],\n  \"┗\": [{x1: 2, y1: 0, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 6, y2: 4}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}],\n  \"┘\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 0}],\n  \"┙\": [{x1: 0, y1: 4, x2: 3, y2: 4}, {x1: 3, y1: 4, x2: 3, y2: 0}, {x1: 0, y1: 2, x2: 3, y2: 2}],\n  \"┚\": [{x1: 0, y1: 3, x2: 4, y2: 3}, {x1: 4, y1: 3, x2: 4, y2: 0}, {x1: 2, y1: 3, x2: 2, y2: 0}],\n  \"┛\": [{x1: 0, y1: 4, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 4, y2: 0}, {x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}],\n  \"├\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"┝\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"┞\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}, {x1: 4, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┟\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"┠\": [{x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}, {x1: 4, y1: 3, x2: 6, y2: 3}],\n  \"┡\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 2, y1: 3, x2: 6, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┢\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 2, y1: 6, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 6, y2: 2}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"┣\": [{x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}, {x1: 6, y1: 4, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 4, y2: 6}],\n  \"┤\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 0, y1: 3, x2: 3, y2: 3}],\n  \"┥\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}],\n  \"┦\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}, {x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┧\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 0, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"┨\": [{x1: 0, y1: 3, x2: 2, y2: 3}, {x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}],\n  \"┩\": [{x1: 2, y1: 0, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 0, y2: 2}, {x1: 4, y1: 0, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 0, y2: 4}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┪\": [{x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 3, y1: 2, x2: 3, y2: 6}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 3, y1: 0, x2: 3, y2: 3}],\n  \"┫\": [{x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}],\n  \"┬\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"┭\": [{x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}, {x1: 3, y1: 6, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"┮\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}, {x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"┯\": [{x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 6, y2: 4}, {x1: 3, y1: 4, x2: 3, y2: 6}],\n  \"┰\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"┱\": [{x1: 0, y1: 2, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 4, y2: 6}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"┲\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 2, y1: 6, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 6, y2: 2}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"┳\": [{x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"┴\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 0, x2: 3, y2: 3}],\n  \"┵\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}, {x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}],\n  \"┶\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 0}, {x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"┷\": [{x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 6, y2: 4}, {x1: 3, y1: 0, x2: 3, y2: 3}],\n  \"┸\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}],\n  \"┹\": [{x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 0, y1: 4, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 4, y2: 0}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"┺\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 2, y1: 0, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 6, y2: 4}, {x1: 3, y1: 0, x2: 3, y2: 2}, {x1: 3, y1: 2, x2: 6, y2: 2}],\n  \"┻\": [{x1: 0, y1: 4, x2: 6, y2: 4}, {x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}],\n  \"┼\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 0, x2: 3, y2: 6}],\n  \"┽\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 3, y1: 3, x2: 6, y2: 3}, {x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}],\n  \"┾\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"┿\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 6, y2: 4}],\n  \"╀\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}, {x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}],\n  \"╁\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"╂\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}],\n  \"╃\": [{x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 0, y1: 4, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 4, y2: 0}, {x1: 3, y1: 6, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"╄\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}, {x1: 2, y1: 0, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 6, y2: 4}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}],\n  \"╅\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 6, y2: 3}, {x1: 0, y1: 2, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 4, y2: 6}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}],\n  \"╆\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 0}, {x1: 2, y1: 6, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 6, y2: 2}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"╇\": [{x1: 0, y1: 4, x2: 6, y2: 4}, {x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"╈\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"╉\": [{x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 2, y1: 2, x2: 2, y2: 0}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 2, y1: 4, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"╊\": [{x1: 0, y1: 3, x2: 2, y2: 3}, {x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 4, y1: 2, x2: 6, y2: 2}, {x1: 4, y1: 6, x2: 4, y2: 4}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"╋\": [{x1: 0, y1: 2, x2: 6, y2: 2}, {x1: 0, y1: 4, x2: 6, y2: 4}, {x1: 2, y1: 0, x2: 2, y2: 6}, {x1: 4, y1: 0, x2: 4, y2: 6}],\n  \"╌\": [{x1: 0, y1: 3, x2: 2, y2: 3}, {x1: 4, y1: 3, x2: 6, y2: 3}],\n  \"╍\": [{x1: 0, y1: 2, x2: 2, y2: 2}, {x1: 0, y1: 4, x2: 2, y2: 4}, {x1: 4, y1: 2, x2: 6, y2: 2}, {x1: 4, y1: 4, x2: 6, y2: 4}],\n  \"╎\": [{x1: 3, y1: 0, x2: 3, y2: 2}, {x1: 3, y1: 4, x2: 3, y2: 6}],\n  \"╏\": [{x1: 2, y1: 0, x2: 2, y2: 2}, {x1: 4, y1: 0, x2: 4, y2: 2}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"═\": [{x1: 0, y1: 1, x2: 6, y2: 1}, {x1: 0, y1: 5, x2: 6, y2: 5}],\n  \"║\": [{x1: 1, y1: 0, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 6}],\n  \"╒\": [{x1: 6, y1: 1, x2: 3, y2: 1}, {x1: 3, y1: 1, x2: 3, y2: 6}, {x1: 6, y1: 5, x2: 3, y2: 5}],\n  \"╓\": [{x1: 6, y1: 3, x2: 1, y2: 3}, {x1: 1, y1: 3, x2: 1, y2: 6}, {x1: 5, y1: 3, x2: 5, y2: 6}],\n  \"╔\": [{x1: 6, y1: 1, x2: 1, y2: 1}, {x1: 1, y1: 1, x2: 1, y2: 6}, {x1: 6, y1: 5, x2: 5, y2: 5}, {x1: 5, y1: 5, x2: 5, y2: 6}],\n  \"╕\": [{x1: 0, y1: 1, x2: 3, y2: 1}, {x1: 3, y1: 1, x2: 3, y2: 6}, {x1: 0, y1: 5, x2: 3, y2: 5}],\n  \"╖\": [{x1: 0, y1: 3, x2: 5, y2: 3}, {x1: 5, y1: 3, x2: 5, y2: 6}, {x1: 1, y1: 3, x2: 1, y2: 6}],\n  \"╗\": [{x1: 0, y1: 1, x2: 5, y2: 1}, {x1: 5, y1: 1, x2: 5, y2: 6}, {x1: 0, y1: 5, x2: 1, y2: 5}, {x1: 1, y1: 5, x2: 1, y2: 6}],\n  \"╘\": [{x1: 3, y1: 0, x2: 3, y2: 5}, {x1: 3, y1: 5, x2: 6, y2: 5}, {x1: 3, y1: 1, x2: 6, y2: 1}],\n  \"╙\": [{x1: 1, y1: 0, x2: 1, y2: 3}, {x1: 1, y1: 3, x2: 6, y2: 3}, {x1: 5, y1: 0, x2: 5, y2: 3}],\n  \"╚\": [{x1: 1, y1: 0, x2: 1, y2: 5}, {x1: 1, y1: 5, x2: 6, y2: 5}, {x1: 5, y1: 0, x2: 5, y2: 1}, {x1: 5, y1: 1, x2: 6, y2: 1}],\n  \"╛\": [{x1: 0, y1: 1, x2: 3, y2: 1}, {x1: 0, y1: 5, x2: 3, y2: 5}, {x1: 3, y1: 5, x2: 3, y2: 0}],\n  \"╜\": [{x1: 0, y1: 3, x2: 5, y2: 3}, {x1: 5, y1: 3, x2: 5, y2: 0}, {x1: 1, y1: 3, x2: 1, y2: 0}],\n  \"╝\": [{x1: 0, y1: 1, x2: 1, y2: 1}, {x1: 1, y1: 1, x2: 1, y2: 0}, {x1: 0, y1: 5, x2: 5, y2: 5}, {x1: 5, y1: 5, x2: 5, y2: 0}],\n  \"╞\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 3, y1: 1, x2: 6, y2: 1}, {x1: 3, y1: 5, x2: 6, y2: 5}],\n  \"╟\": [{x1: 1, y1: 0, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 6}, {x1: 5, y1: 3, x2: 6, y2: 3}],\n  \"╠\": [{x1: 1, y1: 0, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 1}, {x1: 5, y1: 1, x2: 6, y2: 1}, {x1: 5, y1: 6, x2: 5, y2: 5}, {x1: 5, y1: 5, x2: 6, y2: 5}],\n  \"╡\": [{x1: 3, y1: 0, x2: 3, y2: 6}, {x1: 0, y1: 1, x2: 3, y2: 1}, {x1: 0, y1: 5, x2: 3, y2: 5}],\n  \"╢\": [{x1: 0, y1: 3, x2: 1, y2: 3}, {x1: 1, y1: 0, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 6}],\n  \"╣\": [{x1: 0, y1: 1, x2: 1, y2: 1}, {x1: 1, y1: 1, x2: 1, y2: 0}, {x1: 0, y1: 5, x2: 1, y2: 5}, {x1: 1, y1: 5, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 6}],\n  \"╤\": [{x1: 0, y1: 1, x2: 6, y2: 1}, {x1: 0, y1: 5, x2: 6, y2: 5}, {x1: 3, y1: 5, x2: 3, y2: 6}],\n  \"╥\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 1, y1: 3, x2: 1, y2: 6}, {x1: 5, y1: 3, x2: 5, y2: 6}],\n  \"╦\": [{x1: 0, y1: 1, x2: 6, y2: 1}, {x1: 0, y1: 5, x2: 1, y2: 5}, {x1: 1, y1: 5, x2: 1, y2: 6}, {x1: 5, y1: 6, x2: 5, y2: 5}, {x1: 5, y1: 5, x2: 6, y2: 5}],\n  \"╧\": [{x1: 0, y1: 5, x2: 6, y2: 5}, {x1: 0, y1: 1, x2: 6, y2: 1}, {x1: 3, y1: 0, x2: 3, y2: 1}],\n  \"╨\": [{x1: 0, y1: 3, x2: 6, y2: 3}, {x1: 1, y1: 0, x2: 1, y2: 3}, {x1: 5, y1: 0, x2: 5, y2: 3}],\n  \"╩\": [{x1: 0, y1: 1, x2: 1, y2: 1}, {x1: 1, y1: 1, x2: 1, y2: 0}, {x1: 5, y1: 0, x2: 5, y2: 1}, {x1: 5, y1: 1, x2: 6, y2: 1}, {x1: 0, y1: 5, x2: 6, y2: 5}],\n  \"╪\": [{x1: 0, y1: 1, x2: 6, y2: 1}, {x1: 0, y1: 5, x2: 6, y2: 5}, {x1: 3, y1: 0, x2: 3, y2: 6}],\n  \"╫\": [{x1: 1, y1: 0, x2: 1, y2: 6}, {x1: 5, y1: 0, x2: 5, y2: 6}, {x1: 0, y1: 3, x2: 6, y2: 3}],\n  \"╬\": [{x1: 0, y1: 1, x2: 1, y2: 1}, {x1: 1, y1: 1, x2: 1, y2: 0}, {x1: 5, y1: 0, x2: 5, y2: 1}, {x1: 5, y1: 1, x2: 6, y2: 1}, {x1: 6, y1: 5, x2: 5, y2: 5}, {x1: 5, y1: 5, x2: 5, y2: 6}, {x1: 1, y1: 6, x2: 1, y2: 5}, {x1: 1, y1: 5, x2: 0, y2: 5}],\n  \"╭\": [{x1: 6, y1: 3, x2:3, y2: 6, cx1: 3, cy1: 3, cx2: 3, cy2: 3}],\n  \"╮\": [{x1: 0, y1: 3, x2:3, y2: 6, cx1: 3, cy1: 3, cx2: 3, cy2: 3}],\n  \"╯\": [{x1: 0, y1: 3, x2:3, y2: 0, cx1: 3, cy1: 3, cx2: 3, cy2: 3}],\n  \"╰\": [{x1: 3, y1: 0, x2:6, y2: 3, cx1: 3, cy1: 3, cx2: 3, cy2: 3}],\n  \"╱\": [{x1: 0, y1: 6, x2: 6, y2: 0}],\n  \"╲\": [{x1: 0, y1: 0, x2: 6, y2: 6}],\n  \"╳\": [{x1: 0, y1: 6, x2: 6, y2: 0}, {x1: 0, y1: 0, x2: 6, y2: 6}],\n  \"╴\": [{x1: 0, y1: 3, x2: 3, y2: 3}],\n  \"╵\": [{x1: 3, y1: 0, x2: 3, y2: 3}],\n  \"╶\": [{x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"╷\": [{x1: 3, y1: 3, x2: 3, y2: 6}],\n  \"╸\": [{x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}],\n  \"╹\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}],\n  \"╺\": [{x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"╻\": [{x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"╼\": [{x1: 0, y1: 3, x2: 3, y2: 3}, {x1: 3, y1: 2, x2: 6, y2: 2}, {x1: 3, y1: 4, x2: 6, y2: 4}],\n  \"╽\": [{x1: 3, y1: 0, x2: 3, y2: 3}, {x1: 2, y1: 3, x2: 2, y2: 6}, {x1: 4, y1: 3, x2: 4, y2: 6}],\n  \"╾\": [{x1: 0, y1: 2, x2: 3, y2: 2}, {x1: 0, y1: 4, x2: 3, y2: 4}, {x1: 3, y1: 3, x2: 6, y2: 3}],\n  \"╿\": [{x1: 2, y1: 0, x2: 2, y2: 3}, {x1: 4, y1: 0, x2: 4, y2: 3}, {x1: 3, y1: 3, x2: 3, y2: 6}]\n}\n\nconst boxDrawingBoxes: { [index: string]: any } = {\n  \"▀\": [{x: 0, y: 0, w: 8, h: 4}],\n  \"█\": [{x: 0, y: 0, w: 8, h: 8}],\n  \"▇\": [{x: 0, y: 1, w: 8, h: 7}],\n  \"▆\": [{x: 0, y: 2, w: 8, h: 6}],\n  \"▅\": [{x: 0, y: 3, w: 8, h: 5}],\n  \"▄\": [{x: 0, y: 4, w: 8, h: 4}],\n  \"▃\": [{x: 0, y: 5, w: 8, h: 3}],\n  \"▂\": [{x: 0, y: 6, w: 8, h: 2}],\n  \"▁\": [{x: 0, y: 7, w: 8, h: 1}],\n  \"▉\": [{x: 0, y: 0, w: 7, h: 8}],\n  \"▊\": [{x: 0, y: 0, w: 6, h: 8}],\n  \"▋\": [{x: 0, y: 0, w: 5, h: 8}],\n  \"▌\": [{x: 0, y: 0, w: 4, h: 8}],\n  \"▍\": [{x: 0, y: 0, w: 3, h: 8}],\n  \"▎\": [{x: 0, y: 0, w: 2, h: 8}],\n  \"▏\": [{x: 0, y: 0, w: 1, h: 8}],\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  \"\\u{1FB70}\": [{x: 1, y: 0, w: 1, h: 8}],\n  \"\\u{1FB71}\": [{x: 2, y: 0, w: 1, h: 8}],\n  \"\\u{1FB72}\": [{x: 3, y: 0, w: 1, h: 8}],\n  \"\\u{1FB73}\": [{x: 4, y: 0, w: 1, h: 8}],\n  \"\\u{1FB74}\": [{x: 5, y: 0, w: 1, h: 8}],\n  \"\\u{1FB75}\": [{x: 6, y: 0, w: 1, h: 8}],\n  // RIGHT ONE EIGHTH BLOCK\n  \"▕\": [{x: 7, y: 0, w: 1, h: 8}],\n\n  // UPPER ONE EIGHTH BLOCK\n  \"▔\": [{x: 0, y: 0, w: 8, h: 1}],\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  \"\\u{1FB76}\": [{x: 0, y: 1, w: 8, h: 1}],\n  \"\\u{1FB77}\": [{x: 0, y: 2, w: 8, h: 1}],\n  \"\\u{1FB78}\": [{x: 0, y: 3, w: 8, h: 1}],\n  \"\\u{1FB79}\": [{x: 0, y: 4, w: 8, h: 1}],\n  \"\\u{1FB7A}\": [{x: 0, y: 5, w: 8, h: 1}],\n  \"\\u{1FB7B}\": [{x: 0, y: 6, w: 8, h: 1}],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  \"\\u{1FB7C}\": [{x: 0, y: 0, w: 1, h: 8}, {x: 0, y: 7, w: 8, h: 1}],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  \"\\u{1FB7D}\": [{x: 0, y: 0, w: 1, h: 8}, {x: 0, y: 0, w: 8, h: 1}],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  \"\\u{1FB7E}\": [{x: 7, y: 0, w: 1, h: 8}, {x: 0, y: 0, w: 8, h: 1}],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  \"\\u{1FB7F}\": [{x: 7, y: 0, w: 1, h: 8}, {x: 0, y: 7, w: 8, h: 1}],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  \"\\u{1FB80}\": [{x: 0, y: 0, w: 8, h: 1}, {x: 0, y: 7, w: 8, h: 1}],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  \"\\u{1FB81}\": [{x: 0, y: 0, w: 8, h: 1}, {x: 0, y: 2, w: 8, h: 1}, {x: 0, y: 4, w: 8, h: 1}, {x: 0, y: 7, w: 8, h: 1}],\n\n  // UPPER ONE QUARTER BLOCK\n  \"\\u{1FB82}\": [{x: 0, y: 0, w: 8, h: 2}],\n  // UPPER THREE EIGHTHS BLOCK\n  \"\\u{1FB83}\": [{x: 0, y: 0, w: 8, h: 3}],\n  // UPPER FIVE EIGHTHS BLOCK\n  \"\\u{1FB84}\": [{x: 0, y: 0, w: 8, h: 5}],\n  // UPPER THREE QUARTERS BLOCK\n  \"\\u{1FB85}\": [{x: 0, y: 0, w: 8, h: 6}],\n  // UPPER SEVEN EIGHTHS BLOCK\n  \"\\u{1FB86}\": [{x: 0, y: 0, w: 8, h: 7}],\n\n  // RIGHT ONE QUARTER BLOCK\n  \"\\u{1FB87}\": [{x: 6, y: 0, w: 2, h: 8}],\n  // RIGHT THREE EIGHTHS B0OCK\n  \"\\u{1FB88}\": [{x: 5, y: 0, w: 3, h: 8}],\n  // RIGHT FIVE EIGHTHS BL0CK\n  \"\\u{1FB89}\": [{x: 3, y: 0, w: 5, h: 8}],\n  // RIGHT THREE QUARTERS 0LOCK\n  \"\\u{1FB8A}\": [{x: 2, y: 0, w: 6, h: 8}],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  \"\\u{1FB8B}\": [{x: 1, y: 0, w: 7, h: 8}],\n\n  // CHECKER BOARD FILL\n  \"\\u{1FB95}\": [\n    {x: 0, y: 0, w: 2, h: 2}, {x: 4, y: 0, w: 2, h: 2},\n    {x: 2, y: 2, w: 2, h: 2}, {x: 6, y: 2, w: 2, h: 2},\n    {x: 0, y: 4, w: 2, h: 2}, {x: 4, y: 4, w: 2, h: 2},\n    {x: 2, y: 6, w: 2, h: 2}, {x: 6, y: 6, w: 2, h: 2},\n  ],\n  // INVERSE CHECKER BOARD FILL\n  \"\\u{1FB96}\": [\n    {x: 2, y: 0, w: 2, h: 2}, {x: 6, y: 0, w: 2, h: 2},\n    {x: 0, y: 2, w: 2, h: 2}, {x: 4, y: 2, w: 2, h: 2},\n    {x: 2, y: 4, w: 2, h: 2}, {x: 6, y: 4, w: 2, h: 2},\n    {x: 0, y: 6, w: 2, h: 2}, {x: 4, y: 6, w: 2, h: 2},\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  \"\\u{1FB97}\": [{x: 0, y: 2, w: 8, h: 2}, {x: 0, y: 6, w: 8, h: 2}]\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestScroll = new EventEmitter<IAttributeData, boolean | void>();\n  public get onRequestScroll(): IEvent<IAttributeData, boolean | void> { return this._onRequestScroll.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 't'}, params => this.windowOptions(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => { this.setTitle(data); this.setIconName(data); }));\n    //   1 - icon name\n    this._parser.setOscHandler(1, new OscHandler((data: string) => this.setIconName(data)));\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.fullReset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    this._dirtyRowService.clearRange();\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (buffer.x < cols) {\n            bufferRow.setCellFromCodePoint(buffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._onRequestScroll.fire(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.addCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): void {\n    this._onRequestBell.fire();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): void {\n    const buffer = this._bufferService.buffer;\n\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (buffer.x > 0) {\n        buffer.x--;\n      }\n      return;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (buffer.x > 0) {\n      buffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (buffer.x === 0\n          && buffer.y > buffer.scrollTop\n          && buffer.y <= buffer.scrollBottom\n          && buffer.lines.get(buffer.ybase + buffer.y)?.isWrapped)\n      {\n        buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = false;\n        buffer.y--;\n        buffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = buffer.lines.get(buffer.ybase + buffer.y)!;\n        if (line.hasWidth(buffer.x) && !line.hasContent(buffer.x)) {\n          buffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): void {\n    this._charsetService.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): void {\n    this._charsetService.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._bufferService.buffer.x = Math.min(maxCol, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): void {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): void {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): void {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): void {\n    this._iconName = data;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._onRequestScroll.fire(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.ybase + buffer.y, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.ybase + buffer.y, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): void {\n    this._parser.reset();\n    this._onRequestReset.fire();\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._charsetService.setgLevel(level);\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.ybase + buffer.y + yOffset;\n      const line = buffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params || new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})();\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    return new BufferNamespaceApi(this._core.buffers);\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _buffers: IBufferSet) {\n    this._normal = new BufferApiView(this._buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._buffers.alt, 'alternate');\n    this._buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._buffers.active === this._buffers.normal) { return this.normal; }\n    if (this._buffers.active === this._buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, <ICellData>cell);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2 } from 'browser/Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestScroll((eraseAttr, isWrapped) => this.scroll(eraseAttr, isWrapped || undefined)));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this._coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService!.onCursorMove()));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this._coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this._coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: true }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    super.scrollLines(disp, suppressScrollEvent);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService!.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService!.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService!.playBellSound();\n    }\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = '';\n    textarea.style.width = '';\n    textarea.style.height = '';\n    textarea.style.left = '';\n    textarea.style.top = '';\n    textarea.style.zIndex = '';\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this._transitions.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService coreService: ICoreService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(this._bufferService);\n    this._renderLayers = [\n      new TextRenderLayer(this._screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, this._bufferService, _optionsService),\n      new SelectionRenderLayer(this._screenElement, 1, this._colors, this._id, this._bufferService, _optionsService),\n      new LinkRenderLayer(this._screenElement, 2, this._colors, this._id, linkifier, linkifier2, this._bufferService, _optionsService),\n      new CursorRenderLayer(this._screenElement, 3, this._colors, this._id, this._onRequestRedraw, this._bufferService, _optionsService, coreService, coreBrowserService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    bufferService: IBufferService,\n    optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerHTML = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _optionsService: IOptionsService,\n    private _colors: IColorSet\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (this._workCell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = this._workCell.getFgColor();\n      let fgColorMode = this._workCell.getFgColorMode();\n      let bg = this._workCell.getBgColor();\n      let bgColorMode = this._workCell.getBgColorMode();\n      const isInverse = !!this._workCell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (this._workCell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\ninterface ILinkState {\n  decorations: ILinkDecorations;\n  isHovered: boolean;\n}\n\ninterface ILinkWithState {\n  link: ILink;\n  state?: ILinkState;\n}\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _coreService: ICoreService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _coreMouseService: ICoreMouseService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this._coreService.onData, this._onData));\n    this.register(forwardEvent(this._coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this._bufferService.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._bufferService.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._bufferService.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._bufferService.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    const buffer = this._bufferService.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this._bufferService.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this._bufferService.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.addCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.dispose();\n    this.buffers = new BufferSet(this._optionsService, this);\n    this.isUserScrolling = false;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    optionsService: IOptionsService,\n    bufferService: IBufferService\n  ) {\n    super();\n\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range, content};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","import { Terminal } from 'xterm';\nvar wasm;const __exports = {};\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_20(arg0, arg1) {\n    wasm._ZN132__LT_dyn_u20_core__ops__function__FnMut_LT__LP__RP__GT__u2b_Output_u20__u3d__u20_R_u20_as_u20_wasm_bindgen__closure__WasmClosure_GT_8describe6invoke17hf88ede1b5367cfb8E(arg0, arg1);\n}\n\n/**\n* @returns {AnimationFrameCallbackWrapper | undefined}\n*/\n__exports. alt_run = function() {\n    var ret = wasm.alt_run();\n    return ret === 0 ? undefined : AnimationFrameCallbackWrapper.__wrap(ret);\n}\n\n/**\n* @returns {AnimationFrameCallbackWrapper | undefined}\n*/\n__exports. run = function() {\n    var ret = wasm.run();\n    return ret === 0 ? undefined : AnimationFrameCallbackWrapper.__wrap(ret);\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* Width of a Wide Character.\n*/\n__exports.WideCharacterWidth = Object.freeze({\n/**\n* Width of 0.\n*/\n_0:0,\"0\":\"_0\",\n/**\n* Width of 1.\n*/\n_1:1,\"1\":\"_1\",\n/**\n* Width of 2.\n*/\n_2:2,\"2\":\"_2\", });\n/**\n*/\nclass  AnimationFrameCallbackWrapper {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AnimationFrameCallbackWrapper.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_animationframecallbackwrapper_free(ptr);\n    }\n}\n/**\n*r\" Data type to register a `CSI`, `DCS`, or `ESC` callback in the parser in the\n*r\" form:\n*r\"   - ESC I..I F\n*r\"   - CSI Prefix P..P I..I F\n*r\"   - DCS Prefix P..P I..I F data_bytes ST\n*r\"\n*r\" with these rules/restrictions:\n*r\"   - prefix can only be used with `CSI` and `DCS`\n*r\"   - only one leading prefix byte is recognized by the parser before any\n*r\"     other parameter bytes (P..P)\n*r\"   - intermediate bytes are recognized up to 2\n*r\"\n*r\" For custom sequences make sure to read ECMA-48 and the resources at\n*r\" vt100.net to not clash with existing sequences or reserved address space.\n*r\" General recommendations:\n*r\"   - use private address space (see ECMA-48)\n*r\"   - use max one intermediate byte (technically not limited by the spec,\n*r\"     in practice there are no sequences with more than one intermediate byte,\n*r\"     thus parsers might get confused with more intermediates)\n*r\"   - test against other common emulators to check whether they escape/ignore\n*r\"     the sequence correctly\n*r\"\n*r\" Notes:\n*r\"   - OSC command registration is handled differently (see `addOscHandler`).\n*r\"   - APC, PM or SOS is currently not supported.\n*r\"\n*r\" (This is really an interface, but we just go and define our own type that\n*r\" satisfies the interface.)\n*/\nclass  FunctionIdentifier {\n\n    toJSON() {\n        return {\n            prefix: this.prefix,\n            intermediates: this.intermediates,\n            final: this.final,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_functionidentifier_free(ptr);\n    }\n    /**\n    *r\" Optional prefix byte; must be in range `\\x3c` .. `\\x3f`.\"\n    *r\" Usable in `CSI` and `DCS`.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get prefix() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_prefix(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" Optional prefix byte; must be in range `\\x3c` .. `\\x3f`.\"\n    *r\" Usable in `CSI` and `DCS`.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} prefix\n    */\n    set prefix(prefix) {\n        var ptr0 = isLikeNone(prefix) ? 0 : passStringToWasm0(prefix, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_prefix(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" Optional intermediate bytes; must be in range `\\x20` .. `\\x2f`.\"\n    *r\" Usable in `CSI`, `DCS`, and `ESC`.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get intermediates() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_intermediates(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" Optional intermediate bytes; must be in range `\\x20` .. `\\x2f`.\"\n    *r\" Usable in `CSI`, `DCS`, and `ESC`.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} intermediates\n    */\n    set intermediates(intermediates) {\n        var ptr0 = isLikeNone(intermediates) ? 0 : passStringToWasm0(intermediates, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_intermediates(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" Final byte; must be in range `\\x40` .. `\\x7e` for `CSI` and `DCS`,\"\n    *r\" `\\x30` .. `\\x7E` for `ESC`.\"\n    *\n    *\n    *Getter.\n    * @returns {string}\n    */\n    get final() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_final_byte(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    *r\" Final byte; must be in range `\\x40` .. `\\x7e` for `CSI` and `DCS`,\"\n    *r\" `\\x30` .. `\\x7E` for `ESC`.\"\n    *\n    *\n    *Setter.\n    * @param {string} final_byte\n    */\n    set final(final_byte) {\n        var ptr0 = passStringToWasm0(final_byte, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_final_byte(this.ptr, ptr0, len0);\n    }\n}\n/**\n*r\" An object containing options for a link matcher.\n*r\"\n*r\" Note: we had to make some significant compromises to mirroring this\n*r\" interface on the Rust side. Because the interface contains optional\n*r\" functions we choose to model this as a struct rather than as an extern-ed\n*r\" type: we can have fields that have a [`Closure`] or a function trait object\n*r\" in an `Option` but we have no way to have an optional function in a Rust\n*r\" trait.\n*r\"\n*r\" Unfortunately `Option<Closure<_>>` and `Option<dyn Fn{,Mut}(...)>` don't\n*r\" implement `OptionIntoWasmAbi`, so we had to make the fields required.\n*r\" Additionally, the validation callback actually takes another callback which\n*r\" we couldn't model as the appropriate Rust type (`dyn FnMut(bool)`) because\n*r\" `dyn FnMut` and the `Closure` type don't implement `FromWasmAbi` (i.e. you\n*r\" can't produce something of those types on the JS side). So, we had to fall\n*r\" back to using [`js_sys::Function`].\n*r\"\n*r\" Fortunately since this interface is only ever produced by the user of the\n*r\" API, the first point (not having optional functions) isn't too big a deal.\n*r\" The second point makes actually making a [`LinkMatcherOptions`] instance in\n*r\" Rust kind of a pain, but it's still workable.\n*r\"\n*r\" Since we can't actually do the `Option<Closure<_>>` thing, it might actually\n*r\" have been better to model this as an extern-ed type + a Rust trait, but\n*r\" let's leave that for another time. If there's interest in actually using\n*r\" this part of the API in Rust we can make the change (but I doubt there will\n*r\" be).\n*/\nclass  LinkMatcherOptions {\n\n    toJSON() {\n        return {\n            matchIndex: this.matchIndex,\n            validationCallback: this.validationCallback,\n            tooltipCallback: this.tooltipCallback,\n            leaveCallback: this.leaveCallback,\n            priority: this.priority,\n            willLinkActivate: this.willLinkActivate,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_linkmatcheroptions_free(ptr);\n    }\n    /**\n    *r\" The index of the link from the `regex.match(text)` call.\n    *r\"\n    *r\" This defaults to 0 (for regular expressions without capture groups).\n    * @returns {number | undefined}\n    */\n    get matchIndex() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_linkmatcheroptions_matchIndex(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The index of the link from the `regex.match(text)` call.\n    *r\"\n    *r\" This defaults to 0 (for regular expressions without capture groups).\n    * @param {number | undefined} arg0\n    */\n    set matchIndex(arg0) {\n        wasm.__wbg_set_linkmatcheroptions_matchIndex(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" A function that validates whether to create an individual link.\n    *r\"\n    *r\" The callback that this function is given is passed a `bool` indicating\n    *r\" whether the link given (`uri`) is valid.\n    *r\"\n    *r\" Since the signature, post-translation, is rather cryptic, here's the\n    *r\" original TypeScript binding:\n    *r\" ```ts\n    *r\" validationCallback?: (\n    *r\"     uri: string,\n    *r\"     callback: (isValid: boolean) => void,\n    *r\" ) => void;\n    *r\" ```\n    * @returns {any}\n    */\n    get validationCallback() {\n        var ret = wasm.__wbg_get_linkmatcheroptions_validationCallback(this.ptr);\n        return getObject(ret);\n    }\n    /**\n    *r\" A function that is called when the mouse hovers over a link for a period\n    *r\" of time (defined by [`TerminalOptions::link_tooltip_hover_duration`]).\n    *r\"\n    *r\" Since the signature, post-translation, is rather cryptic, here's the\n    *r\" original TypeScript binding:\n    *r\" ```ts\n    *r\" tooltipCallback?: (\n    *r\"     event: MouseEvent,\n    *r\"     uri: string,\n    *r\"     location: IViewportRange,\n    *r\" ) => boolean | void;\n    *r\" ```\n    * @returns {any}\n    */\n    get tooltipCallback() {\n        var ret = wasm.__wbg_get_linkmatcheroptions_tooltipCallback(this.ptr);\n        return getObject(ret);\n    }\n    /**\n    *r\" A function that is called when the mouse leaves a link.\n    *r\"\n    *r\" Note that this can happen even when [`tooltip_callback`] hasn't fired\n    *r\" for the link yet.\n    *r\"\n    *r\" Just to be thorough, here's the original TypeScript binding:\n    *r\" ```ts\n    *r\" leaveCallback?: () => void;\n    *r\" ```\n    *r\"\n    *r\" [`tooltip_callback`]: LinkMatcherOptions::tooltip_callback\n    * @returns {any}\n    */\n    get leaveCallback() {\n        var ret = wasm.__wbg_get_linkmatcheroptions_leaveCallback(this.ptr);\n        return getObject(ret);\n    }\n    /**\n    *r\" The priority of the link matcher.\n    *r\"\n    *r\" This defined the order in which the link matcher is evaluated relative\n    *r\" to others, from highest to lowest. The default value is 0.\n    * @returns {number | undefined}\n    */\n    get priority() {\n        var ret = wasm.__wbg_get_linkmatcheroptions_priority(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The priority of the link matcher.\n    *r\"\n    *r\" This defined the order in which the link matcher is evaluated relative\n    *r\" to others, from highest to lowest. The default value is 0.\n    * @param {number | undefined} arg0\n    */\n    set priority(arg0) {\n        wasm.__wbg_set_linkmatcheroptions_priority(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" A function that is called when the mousedown and click events occur.\n    *r\"\n    *r\" This function is responsible for determining whether a link will be\n    *r\" activated upon click. This enables only activating a link when a certain\n    *r\" modifier is held down. If this function determines that an event does\n    *r\" not activate the link (i.e. by returning `false`) then the event will\n    *r\" continue propagation (e.g. double click to select word).\n    *r\"\n    *r\" Since the signature, post-translation, is rather cryptic, here's the\n    *r\" original TypeScript binding:\n    *r\" ```ts\n    *r\" willLinkActivate?: (event: MouseEvent, uri: string) => boolean;\n    *r\" ```\n    * @returns {any}\n    */\n    get willLinkActivate() {\n        var ret = wasm.__wbg_get_linkmatcheroptions_willLinkActivate(this.ptr);\n        return getObject(ret);\n    }\n}\n/**\n* A type that satisfies the [`Disposable`] interface and does nothing on\n* `dispose`.\n*\n* Can be used wherever an `IDisposable` is required.\n*\n* [`Disposable`]: crate::xterm::Disposable\n*/\nclass  NoOpDispose {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_noopdispose_free(ptr);\n    }\n}\n/**\n*r\" An object containing start up options for the terminal.\n*r\"\n*r\" (This is really an interface, but we just go and define our own type that\n*r\" satisfies the interface.)\n*/\nclass  TerminalOptions {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TerminalOptions.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            allowProposedApi: this.allowProposedApi,\n            allowTransparency: this.allowTransparency,\n            bellStyle: this.bellStyle,\n            cols: this.cols,\n            convertEol: this.convertEol,\n            cursorBlink: this.cursorBlink,\n            cursorStyle: this.cursorStyle,\n            cursorWidth: this.cursorWidth,\n            disableStdin: this.disableStdin,\n            drawBoldTextInBrightColors: this.drawBoldTextInBrightColors,\n            fastScrollModifier: this.fastScrollModifier,\n            fastScrollSensitivity: this.fastScrollSensitivity,\n            fontSize: this.fontSize,\n            fontWeight: this.fontWeight,\n            fontWeightBold: this.fontWeightBold,\n            letterSpacing: this.letterSpacing,\n            lineHeight: this.lineHeight,\n            linkTooltipHoverDuration: this.linkTooltipHoverDuration,\n            logLevel: this.logLevel,\n            macOptionClickForcesSelection: this.macOptionClickForcesSelection,\n            macOptionIsMeta: this.macOptionIsMeta,\n            minimumContrastRatio: this.minimumContrastRatio,\n            rendererType: this.rendererType,\n            rightClickSelectsWord: this.rightClickSelectsWord,\n            rows: this.rows,\n            screenReaderMode: this.screenReaderMode,\n            scrollSensitivity: this.scrollSensitivity,\n            scrollback: this.scrollback,\n            tabStopWidth: this.tabStopWidth,\n            windowsMode: this.windowsMode,\n            bellSound: this.bellSound,\n            fontFamily: this.fontFamily,\n            theme: this.theme,\n            windowOptions: this.windowOptions,\n            wordSeparator: this.wordSeparator,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_terminaloptions_free(ptr);\n    }\n    /**\n    *r\" Whether to allow the use of proposed API. When false, any usage of APIs\n    *r\" marked as experimental/proposed will throw an error. This defaults to\n    *r\" true currently, but will change to false in v5.0.\n    * @returns {boolean | undefined}\n    */\n    get allowProposedApi() {\n        var ret = wasm.__wbg_get_terminaloptions_allowProposedApi(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether to allow the use of proposed API. When false, any usage of APIs\n    *r\" marked as experimental/proposed will throw an error. This defaults to\n    *r\" true currently, but will change to false in v5.0.\n    * @param {boolean | undefined} arg0\n    */\n    set allowProposedApi(arg0) {\n        wasm.__wbg_set_terminaloptions_allowProposedApi(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Whether background should support non-opaque color. It must be set\n    *r\" before executing the [`Terminal::open`] method and can’t be changed\n    *r\" later without executing it again. Note that enabling this can negatively\n    *r\" impact performance.\n    *r\"\n    *r\" [`Terminal::open()`]: Terminal::open\n    * @returns {boolean | undefined}\n    */\n    get allowTransparency() {\n        var ret = wasm.__wbg_get_terminaloptions_allowTransparency(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether background should support non-opaque color. It must be set\n    *r\" before executing the [`Terminal::open`] method and can’t be changed\n    *r\" later without executing it again. Note that enabling this can negatively\n    *r\" impact performance.\n    *r\"\n    *r\" [`Terminal::open()`]: Terminal::open\n    * @param {boolean | undefined} arg0\n    */\n    set allowTransparency(arg0) {\n        wasm.__wbg_set_terminaloptions_allowTransparency(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The type of the bell notification the terminal will use.\n    * @returns {any | undefined}\n    */\n    get bellStyle() {\n        var ret = wasm.__wbg_get_terminaloptions_bellStyle(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" The type of the bell notification the terminal will use.\n    * @param {any | undefined} arg0\n    */\n    set bellStyle(arg0) {\n        wasm.__wbg_set_terminaloptions_bellStyle(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" The number of columns in the terminal.\n    * @returns {number | undefined}\n    */\n    get cols() {\n        var ret = wasm.__wbg_get_terminaloptions_cols(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The number of columns in the terminal.\n    * @param {number | undefined} arg0\n    */\n    set cols(arg0) {\n        wasm.__wbg_set_terminaloptions_cols(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" When enabled the cursor will be set to the beginning of the next line\n    *r\" with every new line. This is equivalent to sending ‘\n    *’ for each ‘\n    *’.\n    *r\" Normally the termios settings of the underlying PTY deals with the\n    *r\" translation of ‘\n    *’ to ‘\n    *’ and this setting should not be used. If\n    *r\" you deal with data from a non-PTY related source, this settings might be\n    *r\" useful.\n    * @returns {boolean | undefined}\n    */\n    get convertEol() {\n        var ret = wasm.__wbg_get_terminaloptions_convertEol(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" When enabled the cursor will be set to the beginning of the next line\n    *r\" with every new line. This is equivalent to sending ‘\n    *’ for each ‘\n    *’.\n    *r\" Normally the termios settings of the underlying PTY deals with the\n    *r\" translation of ‘\n    *’ to ‘\n    *’ and this setting should not be used. If\n    *r\" you deal with data from a non-PTY related source, this settings might be\n    *r\" useful.\n    * @param {boolean | undefined} arg0\n    */\n    set convertEol(arg0) {\n        wasm.__wbg_set_terminaloptions_convertEol(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Whether the cursor blinks.\n    * @returns {boolean | undefined}\n    */\n    get cursorBlink() {\n        var ret = wasm.__wbg_get_terminaloptions_cursorBlink(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether the cursor blinks.\n    * @param {boolean | undefined} arg0\n    */\n    set cursorBlink(arg0) {\n        wasm.__wbg_set_terminaloptions_cursorBlink(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The style of the cursor.\n    * @returns {any | undefined}\n    */\n    get cursorStyle() {\n        var ret = wasm.__wbg_get_terminaloptions_cursorStyle(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" The style of the cursor.\n    * @param {any | undefined} arg0\n    */\n    set cursorStyle(arg0) {\n        wasm.__wbg_set_terminaloptions_cursorStyle(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" The width of the cursor in CSS pixels when [`cursor_style`] is set to\n    *r\" [‘bar’].\n    *r\"\n    *r\" [`cursor_style`]: TerminalOptions.cursor_style\n    *r\" [‘bar’]: CursorStyle::Bar\n    * @returns {number | undefined}\n    */\n    get cursorWidth() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_cursorWidth(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The width of the cursor in CSS pixels when [`cursor_style`] is set to\n    *r\" [‘bar’].\n    *r\"\n    *r\" [`cursor_style`]: TerminalOptions.cursor_style\n    *r\" [‘bar’]: CursorStyle::Bar\n    * @param {number | undefined} arg0\n    */\n    set cursorWidth(arg0) {\n        wasm.__wbg_set_terminaloptions_cursorWidth(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" Whether input should be disabled.\n    * @returns {boolean | undefined}\n    */\n    get disableStdin() {\n        var ret = wasm.__wbg_get_terminaloptions_disableStdin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether input should be disabled.\n    * @param {boolean | undefined} arg0\n    */\n    set disableStdin(arg0) {\n        wasm.__wbg_set_terminaloptions_disableStdin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Whether to draw bold text in bright colors. The default is true.\n    * @returns {boolean | undefined}\n    */\n    get drawBoldTextInBrightColors() {\n        var ret = wasm.__wbg_get_terminaloptions_drawBoldTextInBrightColors(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether to draw bold text in bright colors. The default is true.\n    * @param {boolean | undefined} arg0\n    */\n    set drawBoldTextInBrightColors(arg0) {\n        wasm.__wbg_set_terminaloptions_drawBoldTextInBrightColors(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The modifier key hold to multiply scroll speed.\n    * @returns {any | undefined}\n    */\n    get fastScrollModifier() {\n        var ret = wasm.__wbg_get_terminaloptions_fastScrollModifier(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" The modifier key hold to multiply scroll speed.\n    * @param {any | undefined} arg0\n    */\n    set fastScrollModifier(arg0) {\n        wasm.__wbg_set_terminaloptions_fastScrollModifier(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" The scroll speed multiplier used for fast scrolling.\n    * @returns {number | undefined}\n    */\n    get fastScrollSensitivity() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_fastScrollSensitivity(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The scroll speed multiplier used for fast scrolling.\n    * @param {number | undefined} arg0\n    */\n    set fastScrollSensitivity(arg0) {\n        wasm.__wbg_set_terminaloptions_fastScrollSensitivity(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The font size used to render text.\n    * @returns {number | undefined}\n    */\n    get fontSize() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_fontSize(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The font size used to render text.\n    * @param {number | undefined} arg0\n    */\n    set fontSize(arg0) {\n        wasm.__wbg_set_terminaloptions_fontSize(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The font weight used to render non-bold text.\n    * @returns {number | undefined}\n    */\n    get fontWeight() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_fontWeight(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The font weight used to render non-bold text.\n    * @param {number | undefined} arg0\n    */\n    set fontWeight(arg0) {\n        wasm.__wbg_set_terminaloptions_fontWeight(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The font weight used to render bold text.\n    * @returns {any | undefined}\n    */\n    get fontWeightBold() {\n        var ret = wasm.__wbg_get_terminaloptions_fontWeightBold(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" The font weight used to render bold text.\n    * @param {any | undefined} arg0\n    */\n    set fontWeightBold(arg0) {\n        wasm.__wbg_set_terminaloptions_fontWeightBold(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" The spacing in whole pixels between characters.\n    * @returns {number | undefined}\n    */\n    get letterSpacing() {\n        var ret = wasm.__wbg_get_terminaloptions_letterSpacing(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The spacing in whole pixels between characters.\n    * @param {number | undefined} arg0\n    */\n    set letterSpacing(arg0) {\n        wasm.__wbg_set_terminaloptions_letterSpacing(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" The line height used to render text.\n    * @returns {number | undefined}\n    */\n    get lineHeight() {\n        var ret = wasm.__wbg_get_terminaloptions_lineHeight(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The line height used to render text.\n    * @param {number | undefined} arg0\n    */\n    set lineHeight(arg0) {\n        wasm.__wbg_set_terminaloptions_lineHeight(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" The duration in milliseconds before link tooltip events fire when\n    *r\" hovering on a link.\n    * @returns {number | undefined}\n    */\n    get linkTooltipHoverDuration() {\n        var ret = wasm.__wbg_get_terminaloptions_linkTooltipHoverDuration(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The duration in milliseconds before link tooltip events fire when\n    *r\" hovering on a link.\n    * @param {number | undefined} arg0\n    */\n    set linkTooltipHoverDuration(arg0) {\n        wasm.__wbg_set_terminaloptions_linkTooltipHoverDuration(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" What log level to use, this will log for all levels below and including\n    *r\" what is set:\n    *r\"  1) debug\n    *r\"  2) info __(default)__\n    *r\"  3) warn\n    *r\"  4) error\n    *r\"  5) off\n    * @returns {any | undefined}\n    */\n    get logLevel() {\n        var ret = wasm.__wbg_get_terminaloptions_logLevel(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" What log level to use, this will log for all levels below and including\n    *r\" what is set:\n    *r\"  1) debug\n    *r\"  2) info __(default)__\n    *r\"  3) warn\n    *r\"  4) error\n    *r\"  5) off\n    * @param {any | undefined} arg0\n    */\n    set logLevel(arg0) {\n        wasm.__wbg_set_terminaloptions_logLevel(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" Whether holding a modifier key will force normal selection behavior,\n    *r\" regardless of whether the terminal is in mouse events mode. This will\n    *r\" also prevent mouse events from being emitted by the terminal. For\n    *r\" example, this allows you to use xterm.js’ regular selection inside tmux\n    *r\" with mouse mode enabled.\n    * @returns {boolean | undefined}\n    */\n    get macOptionClickForcesSelection() {\n        var ret = wasm.__wbg_get_terminaloptions_macOptionClickForcesSelection(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether holding a modifier key will force normal selection behavior,\n    *r\" regardless of whether the terminal is in mouse events mode. This will\n    *r\" also prevent mouse events from being emitted by the terminal. For\n    *r\" example, this allows you to use xterm.js’ regular selection inside tmux\n    *r\" with mouse mode enabled.\n    * @param {boolean | undefined} arg0\n    */\n    set macOptionClickForcesSelection(arg0) {\n        wasm.__wbg_set_terminaloptions_macOptionClickForcesSelection(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Whether to treat option as the meta key.\n    * @returns {boolean | undefined}\n    */\n    get macOptionIsMeta() {\n        var ret = wasm.__wbg_get_terminaloptions_macOptionIsMeta(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether to treat option as the meta key.\n    * @param {boolean | undefined} arg0\n    */\n    set macOptionIsMeta(arg0) {\n        wasm.__wbg_set_terminaloptions_macOptionIsMeta(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The minimum contrast ratio for text in the terminal, setting this will\n    *r\" change the foreground color dynamically depending on whether the\n    *r\" contrast ratio is met. Example values:\n    *r\"   - 1: The default, do nothing.\n    *r\"   - 4.5: Minimum for WCAG AA compliance.\n    *r\"   - 7: Minimum for WCAG AAA compliance.\n    *r\"   - 21: White on black or black on white.\n    * @returns {number | undefined}\n    */\n    get minimumContrastRatio() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_minimumContrastRatio(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The minimum contrast ratio for text in the terminal, setting this will\n    *r\" change the foreground color dynamically depending on whether the\n    *r\" contrast ratio is met. Example values:\n    *r\"   - 1: The default, do nothing.\n    *r\"   - 4.5: Minimum for WCAG AA compliance.\n    *r\"   - 7: Minimum for WCAG AAA compliance.\n    *r\"   - 21: White on black or black on white.\n    * @param {number | undefined} arg0\n    */\n    set minimumContrastRatio(arg0) {\n        wasm.__wbg_set_terminaloptions_minimumContrastRatio(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The type of renderer to use, this allows using the fallback DOM renderer\n    *r\" when canvas is too slow for the environment. The following features do\n    *r\" not work when the DOM renderer is used:\n    *r\"   - Letter spacing\n    *r\"   - Cursor blink\n    * @returns {any | undefined}\n    */\n    get rendererType() {\n        var ret = wasm.__wbg_get_terminaloptions_rendererType(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    *r\" The type of renderer to use, this allows using the fallback DOM renderer\n    *r\" when canvas is too slow for the environment. The following features do\n    *r\" not work when the DOM renderer is used:\n    *r\"   - Letter spacing\n    *r\"   - Cursor blink\n    * @param {any | undefined} arg0\n    */\n    set rendererType(arg0) {\n        wasm.__wbg_set_terminaloptions_rendererType(this.ptr, isLikeNone(arg0) ? 0 : addHeapObject(arg0));\n    }\n    /**\n    *r\" Whether to select the word under the cursor on right click, this is\n    *r\" standard behavior in a lot of macOS applications.\n    * @returns {boolean | undefined}\n    */\n    get rightClickSelectsWord() {\n        var ret = wasm.__wbg_get_terminaloptions_rightClickSelectsWord(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether to select the word under the cursor on right click, this is\n    *r\" standard behavior in a lot of macOS applications.\n    * @param {boolean | undefined} arg0\n    */\n    set rightClickSelectsWord(arg0) {\n        wasm.__wbg_set_terminaloptions_rightClickSelectsWord(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The number of rows in the terminal.\n    * @returns {number | undefined}\n    */\n    get rows() {\n        var ret = wasm.__wbg_get_terminaloptions_rows(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The number of rows in the terminal.\n    * @param {number | undefined} arg0\n    */\n    set rows(arg0) {\n        wasm.__wbg_set_terminaloptions_rows(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" Whether screen reader support is enabled. When on this will expose\n    *r\" supporting elements in the DOM to support NVDA on Windows and VoiceOver\n    *r\" on macOS.\n    * @returns {boolean | undefined}\n    */\n    get screenReaderMode() {\n        var ret = wasm.__wbg_get_terminaloptions_screenReaderMode(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether screen reader support is enabled. When on this will expose\n    *r\" supporting elements in the DOM to support NVDA on Windows and VoiceOver\n    *r\" on macOS.\n    * @param {boolean | undefined} arg0\n    */\n    set screenReaderMode(arg0) {\n        wasm.__wbg_set_terminaloptions_screenReaderMode(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" The scrolling speed multiplier used for adjusting normal scrolling\n    *r\" speed.\n    * @returns {number | undefined}\n    */\n    get scrollSensitivity() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_scrollSensitivity(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The scrolling speed multiplier used for adjusting normal scrolling\n    *r\" speed.\n    * @param {number | undefined} arg0\n    */\n    set scrollSensitivity(arg0) {\n        wasm.__wbg_set_terminaloptions_scrollSensitivity(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The amount of scrollback in the terminal. Scrollback is the amount of\n    *r\" rows that are retained when lines are scrolled beyond the initial\n    *r\" viewport.\n    * @returns {number | undefined}\n    */\n    get scrollback() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.__wbg_get_terminaloptions_scrollback(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The amount of scrollback in the terminal. Scrollback is the amount of\n    *r\" rows that are retained when lines are scrolled beyond the initial\n    *r\" viewport.\n    * @param {number | undefined} arg0\n    */\n    set scrollback(arg0) {\n        wasm.__wbg_set_terminaloptions_scrollback(this.ptr, !isLikeNone(arg0), isLikeNone(arg0) ? 0 : arg0);\n    }\n    /**\n    *r\" The size of tab stops in the terminal.\n    * @returns {number | undefined}\n    */\n    get tabStopWidth() {\n        var ret = wasm.__wbg_get_terminaloptions_tabStopWidth(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    *r\" The size of tab stops in the terminal.\n    * @param {number | undefined} arg0\n    */\n    set tabStopWidth(arg0) {\n        wasm.__wbg_set_terminaloptions_tabStopWidth(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0);\n    }\n    /**\n    *r\" Whether “Windows mode” is enabled. Because Windows backends winpty and\n    *r\" conpty operate by doing line wrapping on their side, xterm.js does not\n    *r\" have access to wrapped lines. When Windows mode is enabled the following\n    *r\" changes will be in effect:\n    *r\"\n    *r\"   - Reflow is disabled.\n    *r\"   - Lines are assumed to be wrapped if the last character of the line is\n    *r\"     not whitespace.\n    * @returns {boolean | undefined}\n    */\n    get windowsMode() {\n        var ret = wasm.__wbg_get_terminaloptions_windowsMode(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Whether “Windows mode” is enabled. Because Windows backends winpty and\n    *r\" conpty operate by doing line wrapping on their side, xterm.js does not\n    *r\" have access to wrapped lines. When Windows mode is enabled the following\n    *r\" changes will be in effect:\n    *r\"\n    *r\"   - Reflow is disabled.\n    *r\"   - Lines are assumed to be wrapped if the last character of the line is\n    *r\"     not whitespace.\n    * @param {boolean | undefined} arg0\n    */\n    set windowsMode(arg0) {\n        wasm.__wbg_set_terminaloptions_windowsMode(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" A data uri of the sound to use for the bell when\n    *r\" [`TerminalOptions.bell_style`] = 'sound'.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get bellSound() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_prefix(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" A data uri of the sound to use for the bell when\n    *r\" [`TerminalOptions.bell_style`] = 'sound'.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bell_sound\n    */\n    set bellSound(bell_sound) {\n        var ptr0 = isLikeNone(bell_sound) ? 0 : passStringToWasm0(bell_sound, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_prefix(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The font family used to render text.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get fontFamily() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.terminaloptions_font_family(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The font family used to render text.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} font_family\n    */\n    set fontFamily(font_family) {\n        var ptr0 = isLikeNone(font_family) ? 0 : passStringToWasm0(font_family, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.terminaloptions_set_font_family(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The color theme of the terminal.\n    *\n    *\n    *Getter.\n    * @returns {Theme | undefined}\n    */\n    get theme() {\n        var ret = wasm.terminaloptions_theme(this.ptr);\n        return ret === 0 ? undefined : Theme.__wrap(ret);\n    }\n    /**\n    *r\" The color theme of the terminal.\n    *\n    *\n    *Setter.\n    * @param {Theme | undefined} theme\n    */\n    set theme(theme) {\n        let ptr0 = 0;\n        if (!isLikeNone(theme)) {\n            _assertClass(theme, Theme);\n            ptr0 = theme.ptr;\n            theme.ptr = 0;\n        }\n        wasm.terminaloptions_set_theme(this.ptr, ptr0);\n    }\n    /**\n    *r\" Enable various window manipulation and report features. All features are\n    *r\" disabled by default for security reasons.\n    *\n    *\n    *Getter.\n    * @returns {WindowOptions | undefined}\n    */\n    get windowOptions() {\n        var ret = wasm.terminaloptions_window_options(this.ptr);\n        return ret === 0 ? undefined : WindowOptions.__wrap(ret);\n    }\n    /**\n    *r\" Enable various window manipulation and report features. All features are\n    *r\" disabled by default for security reasons.\n    *\n    *\n    *Setter.\n    * @param {WindowOptions | undefined} window_options\n    */\n    set windowOptions(window_options) {\n        let ptr0 = 0;\n        if (!isLikeNone(window_options)) {\n            _assertClass(window_options, WindowOptions);\n            ptr0 = window_options.ptr;\n            window_options.ptr = 0;\n        }\n        wasm.terminaloptions_set_window_options(this.ptr, ptr0);\n    }\n    /**\n    *r\" A string containing all characters that are considered word separated by\n    *r\" the double click to select work logic.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get wordSeparator() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.terminaloptions_word_separator(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" A string containing all characters that are considered word separated by\n    *r\" the double click to select work logic.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} word_separator\n    */\n    set wordSeparator(word_separator) {\n        var ptr0 = isLikeNone(word_separator) ? 0 : passStringToWasm0(word_separator, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.terminaloptions_set_word_separator(this.ptr, ptr0, len0);\n    }\n}\n/**\n*r\" Contains colors to theme the terminal with.\n*r\"\n*r\" (This is really an interface, but we just go and define our own type that\n*r\" satisfies the interface.)\n*/\nclass  Theme {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Theme.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            background: this.background,\n            black: this.black,\n            blue: this.blue,\n            brightBlack: this.brightBlack,\n            brightBlue: this.brightBlue,\n            brightCyan: this.brightCyan,\n            brightGreen: this.brightGreen,\n            brightMagenta: this.brightMagenta,\n            brightRed: this.brightRed,\n            brightWhite: this.brightWhite,\n            brightYellow: this.brightYellow,\n            cursor: this.cursor,\n            cursorAccent: this.cursorAccent,\n            cyan: this.cyan,\n            foreground: this.foreground,\n            green: this.green,\n            magenta: this.magenta,\n            red: this.red,\n            selection: this.selection,\n            white: this.white,\n            yellow: this.yellow,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_theme_free(ptr);\n    }\n    /**\n    *r\" The default background color.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get background() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_prefix(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The default background color.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} background\n    */\n    set background(background) {\n        var ptr0 = isLikeNone(background) ? 0 : passStringToWasm0(background, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_prefix(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI black (eg. `\\x1b[30m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get black() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.functionidentifier_intermediates(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI black (eg. `\\x1b[30m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} black\n    */\n    set black(black) {\n        var ptr0 = isLikeNone(black) ? 0 : passStringToWasm0(black, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.functionidentifier_set_intermediates(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI blue (eg. `\\x1b[34m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get blue() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_blue(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI blue (eg. `\\x1b[34m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} blue\n    */\n    set blue(blue) {\n        var ptr0 = isLikeNone(blue) ? 0 : passStringToWasm0(blue, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_blue(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright black (eg. `\\x1b[1;30m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightBlack() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_black(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright black (eg. `\\x1b[1;30m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_black\n    */\n    set brightBlack(bright_black) {\n        var ptr0 = isLikeNone(bright_black) ? 0 : passStringToWasm0(bright_black, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_black(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright blue (eg. `\\x1b[1;34m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightBlue() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_blue(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright blue (eg. `\\x1b[1;34m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_blue\n    */\n    set brightBlue(bright_blue) {\n        var ptr0 = isLikeNone(bright_blue) ? 0 : passStringToWasm0(bright_blue, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_blue(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright cyan (eg. `\\x1b[1;36m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightCyan() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_cyan(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright cyan (eg. `\\x1b[1;36m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_cyan\n    */\n    set brightCyan(bright_cyan) {\n        var ptr0 = isLikeNone(bright_cyan) ? 0 : passStringToWasm0(bright_cyan, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_cyan(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright green (eg. `\\x1b[1;32m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightGreen() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_green(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright green (eg. `\\x1b[1;32m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_green\n    */\n    set brightGreen(bright_green) {\n        var ptr0 = isLikeNone(bright_green) ? 0 : passStringToWasm0(bright_green, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_green(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright magenta (eg. `\\x1b[1;35m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightMagenta() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_magenta(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright magenta (eg. `\\x1b[1;35m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_magenta\n    */\n    set brightMagenta(bright_magenta) {\n        var ptr0 = isLikeNone(bright_magenta) ? 0 : passStringToWasm0(bright_magenta, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_magenta(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright red (eg. `\\x1b[1;31m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightRed() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_red(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright red (eg. `\\x1b[1;31m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_red\n    */\n    set brightRed(bright_red) {\n        var ptr0 = isLikeNone(bright_red) ? 0 : passStringToWasm0(bright_red, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_red(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright white (eg. `\\x1b[1;37m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightWhite() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_white(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright white (eg. `\\x1b[1;37m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_white\n    */\n    set brightWhite(bright_white) {\n        var ptr0 = isLikeNone(bright_white) ? 0 : passStringToWasm0(bright_white, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_white(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI bright yellow (eg. `\\x1b[1;33m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get brightYellow() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_bright_yellow(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI bright yellow (eg. `\\x1b[1;33m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} bright_yellow\n    */\n    set brightYellow(bright_yellow) {\n        var ptr0 = isLikeNone(bright_yellow) ? 0 : passStringToWasm0(bright_yellow, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_bright_yellow(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The cursor color.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get cursor() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_cursor(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The cursor color.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} cursor\n    */\n    set cursor(cursor) {\n        var ptr0 = isLikeNone(cursor) ? 0 : passStringToWasm0(cursor, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_cursor(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The accent color of the cursor (fg color for a block cursor).\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get cursorAccent() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_cursor_accent(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The accent color of the cursor (fg color for a block cursor).\n    *\n    *\n    *Setter.\n    * @param {string | undefined} cursor_accent\n    */\n    set cursorAccent(cursor_accent) {\n        var ptr0 = isLikeNone(cursor_accent) ? 0 : passStringToWasm0(cursor_accent, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_cursor_accent(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI cyan (eg. `\\x1b[36m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get cyan() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_cyan(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI cyan (eg. `\\x1b[36m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} cyan\n    */\n    set cyan(cyan) {\n        var ptr0 = isLikeNone(cyan) ? 0 : passStringToWasm0(cyan, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_cyan(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The default foreground color.\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get foreground() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_foreground(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The default foreground color.\n    *\n    *\n    *Setter.\n    * @param {string | undefined} foreground\n    */\n    set foreground(foreground) {\n        var ptr0 = isLikeNone(foreground) ? 0 : passStringToWasm0(foreground, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_foreground(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI green (eg. `\\x1b[32m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get green() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_green(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI green (eg. `\\x1b[32m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} green\n    */\n    set green(green) {\n        var ptr0 = isLikeNone(green) ? 0 : passStringToWasm0(green, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_green(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI magenta (eg. `\\x1b[35m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get magenta() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_magenta(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI magenta (eg. `\\x1b[35m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} magenta\n    */\n    set magenta(magenta) {\n        var ptr0 = isLikeNone(magenta) ? 0 : passStringToWasm0(magenta, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_magenta(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI red (eg. `\\x1b[31m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get red() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_red(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI red (eg. `\\x1b[31m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} red\n    */\n    set red(red) {\n        var ptr0 = isLikeNone(red) ? 0 : passStringToWasm0(red, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_red(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" The selection background color (can be transparent).\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get selection() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_selection(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" The selection background color (can be transparent).\n    *\n    *\n    *Setter.\n    * @param {string | undefined} selection\n    */\n    set selection(selection) {\n        var ptr0 = isLikeNone(selection) ? 0 : passStringToWasm0(selection, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_selection(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI white (eg. `\\x1b[37m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get white() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_white(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI white (eg. `\\x1b[37m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} white\n    */\n    set white(white) {\n        var ptr0 = isLikeNone(white) ? 0 : passStringToWasm0(white, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_white(this.ptr, ptr0, len0);\n    }\n    /**\n    *r\" ANSI yellow (eg. `\\x1b[33m`).\"\n    *\n    *\n    *Getter.\n    * @returns {string | undefined}\n    */\n    get yellow() {\n        try {\n            const retptr = wasm.__wbindgen_export_4.value - 16;\n            wasm.__wbindgen_export_4.value = retptr;\n            wasm.theme_yellow(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getStringFromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 1);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_export_4.value += 16;\n        }\n    }\n    /**\n    *r\" ANSI yellow (eg. `\\x1b[33m`).\"\n    *\n    *\n    *Setter.\n    * @param {string | undefined} yellow\n    */\n    set yellow(yellow) {\n        var ptr0 = isLikeNone(yellow) ? 0 : passStringToWasm0(yellow, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.theme_set_yellow(this.ptr, ptr0, len0);\n    }\n}\n/**\n*r\" An object representing a range within the viewport of the terminal.\n*r\"\n*r\" (This is really an interface but because it's only ever produced by the user\n*r\" we just go and define our own type that satisfies the interface).\n*/\nclass  ViewportRange {\n\n    toJSON() {\n        return {\n            start: this.start,\n            end: this.end,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_viewportrange_free(ptr);\n    }\n    /**\n    *r\" The start of the range.\n    * @returns {ViewportRangePosition}\n    */\n    get start() {\n        var ret = wasm.__wbg_get_viewportrange_start(this.ptr);\n        return ViewportRangePosition.__wrap(ret);\n    }\n    /**\n    *r\" The start of the range.\n    * @param {ViewportRangePosition} arg0\n    */\n    set start(arg0) {\n        _assertClass(arg0, ViewportRangePosition);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_viewportrange_start(this.ptr, ptr0);\n    }\n    /**\n    *r\" The end of the range.\n    * @returns {ViewportRangePosition}\n    */\n    get end() {\n        var ret = wasm.__wbg_get_viewportrange_end(this.ptr);\n        return ViewportRangePosition.__wrap(ret);\n    }\n    /**\n    *r\" The end of the range.\n    * @param {ViewportRangePosition} arg0\n    */\n    set end(arg0) {\n        _assertClass(arg0, ViewportRangePosition);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_viewportrange_end(this.ptr, ptr0);\n    }\n}\n/**\n*r\" An object representing a cell position within the viewport of the terminal.\n*r\"\n*r\" (This is really an interface but because it's only ever produced by the user\n*r\" we just go and define our own type that satisfies the interface).\n*/\nclass  ViewportRangePosition {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ViewportRangePosition.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            x: this.x,\n            y: this.y,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_viewportrangeposition_free(ptr);\n    }\n    /**\n    *r\" The x position of the cell.\n    *r\"\n    *r\" This is a 0-based index that refers to the space in between columns, not\n    *r\" the column itself. Index 0 refers to the left side of the viewport,\n    *r\" index [`Terminal::cols`] refers to the right side of the viewport. This\n    *r\" can be thought of as how a cursor is positioned in a text editor.\n    * @returns {number}\n    */\n    get x() {\n        var ret = wasm.__wbg_get_viewportrangeposition_x(this.ptr);\n        return ret;\n    }\n    /**\n    *r\" The x position of the cell.\n    *r\"\n    *r\" This is a 0-based index that refers to the space in between columns, not\n    *r\" the column itself. Index 0 refers to the left side of the viewport,\n    *r\" index [`Terminal::cols`] refers to the right side of the viewport. This\n    *r\" can be thought of as how a cursor is positioned in a text editor.\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        wasm.__wbg_set_viewportrangeposition_x(this.ptr, arg0);\n    }\n    /**\n    *r\" The y position of the cell.\n    *r\"\n    *r\" This is a 0-based index that refers to a specific row.\n    * @returns {number}\n    */\n    get y() {\n        var ret = wasm.__wbg_get_viewportrangeposition_y(this.ptr);\n        return ret;\n    }\n    /**\n    *r\" The y position of the cell.\n    *r\"\n    *r\" This is a 0-based index that refers to a specific row.\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        wasm.__wbg_set_viewportrangeposition_y(this.ptr, arg0);\n    }\n}\n/**\n*r\" Enable various window manipulation and report features (`CSI Ps ; Ps ; Ps\n*r\" t`).\n*r\"\n*r\" Most settings have no default implementation, as they heavily rely on the\n*r\" embedding environment.\n*r\"\n*r\" To implement a feature, create a custom CSI hook like this:\n*r\"\n*r\" ```ts\n*r\" term.parser.addCsiHandler({final: 't'}, params => {\n*r\"   const ps = params[0];\n*r\"   switch (ps) {\n*r\"     case XY:\n*r\"       ...            // your implementation for option XY\n*r\"       return true;   // signal Ps=XY was handled\n*r\"   }\n*r\"   return false;      // any Ps that was not handled\n*r\" });\n*r\" ```\n*r\"\n*r\" Note on security: Most features are meant to deal with some information of\n*r\" the host machine where the terminal runs on. This is seen as a security risk\n*r\" possibly leaking sensitive data of the host to the program in the terminal.\n*r\" Therefore all options (even those without a default implementation) are\n*r\" guarded by the boolean flag and disabled by default.\n*r\"\n*r\" (This is really an interface, but we just go and define our own type that\n*r\" satisfies the interface.)\n*/\nclass  WindowOptions {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WindowOptions.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    toJSON() {\n        return {\n            fullscreenWin: this.fullscreenWin,\n            getCellSizePixels: this.getCellSizePixels,\n            getIconTitle: this.getIconTitle,\n            getScreenSizeChars: this.getScreenSizeChars,\n            getScreenSizePixels: this.getScreenSizePixels,\n            getWinPosition: this.getWinPosition,\n            getWinSizeChars: this.getWinSizeChars,\n            getWinSizePixels: this.getWinSizePixels,\n            getWinState: this.getWinState,\n            getWinTitle: this.getWinTitle,\n            lowerWin: this.lowerWin,\n            maximizeWin: this.maximizeWin,\n            minimizeWin: this.minimizeWin,\n            popTitle: this.popTitle,\n            pushTitle: this.pushTitle,\n            raiseWin: this.raiseWin,\n            refreshWin: this.refreshWin,\n            restoreWin: this.restoreWin,\n            setWinLines: this.setWinLines,\n            setWinPosition: this.setWinPosition,\n            setWinSizeChars: this.setWinSizeChars,\n            setWinSizePixels: this.setWinSizePixels,\n        };\n    }\n\n    toString() {\n        return JSON.stringify(this);\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_windowoptions_free(ptr);\n    }\n    /**\n    *r\" Ps=10 ; 0 Undo full-screen mode. Ps=10 ; 1 Change to full-screen. Ps=10\n    *r\" ; 2 Toggle full-screen.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get fullscreenWin() {\n        var ret = wasm.__wbg_get_windowoptions_fullscreenWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=10 ; 0 Undo full-screen mode. Ps=10 ; 1 Change to full-screen. Ps=10\n    *r\" ; 2 Toggle full-screen.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set fullscreenWin(arg0) {\n        wasm.__wbg_set_windowoptions_fullscreenWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=16 Report xterm character cell size in pixels. Result is “CSI 6 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getCellSizePixels() {\n        var ret = wasm.__wbg_get_windowoptions_getCellSizePixels(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=16 Report xterm character cell size in pixels. Result is “CSI 6 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getCellSizePixels(arg0) {\n        wasm.__wbg_set_windowoptions_getCellSizePixels(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=20 Report xterm window’s icon label. Result is “OSC L label ST”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getIconTitle() {\n        var ret = wasm.__wbg_get_windowoptions_getIconTitle(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=20 Report xterm window’s icon label. Result is “OSC L label ST”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getIconTitle(arg0) {\n        wasm.__wbg_set_windowoptions_getIconTitle(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=19 Report the size of the screen in characters. Result is “CSI 9 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getScreenSizeChars() {\n        var ret = wasm.__wbg_get_windowoptions_getScreenSizeChars(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=19 Report the size of the screen in characters. Result is “CSI 9 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getScreenSizeChars(arg0) {\n        wasm.__wbg_set_windowoptions_getScreenSizeChars(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=15 Report size of the screen in pixels. Result is “CSI 5 ; height ;\n    *r\" width t”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getScreenSizePixels() {\n        var ret = wasm.__wbg_get_windowoptions_getScreenSizePixels(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=15 Report size of the screen in pixels. Result is “CSI 5 ; height ;\n    *r\" width t”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getScreenSizePixels(arg0) {\n        wasm.__wbg_set_windowoptions_getScreenSizePixels(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=13 Report xterm window position. Result is “CSI 3 ; x ; y t”. Ps=13 ;\n    *r\" 2 Report xterm text-area position. Result is “CSI 3 ; x ; y t”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getWinPosition() {\n        var ret = wasm.__wbg_get_windowoptions_getWinPosition(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=13 Report xterm window position. Result is “CSI 3 ; x ; y t”. Ps=13 ;\n    *r\" 2 Report xterm text-area position. Result is “CSI 3 ; x ; y t”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getWinPosition(arg0) {\n        wasm.__wbg_set_windowoptions_getWinPosition(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=18 Report the size of the text area in characters. Result is “CSI 8 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getWinSizeChars() {\n        var ret = wasm.__wbg_get_windowoptions_getWinSizeChars(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=18 Report the size of the text area in characters. Result is “CSI 8 ;\n    *r\" height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getWinSizeChars(arg0) {\n        wasm.__wbg_set_windowoptions_getWinSizeChars(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=14 Report xterm text area size in pixels. Result is “CSI 4 ; height ;\n    *r\" width t”. Ps=14 ; 2 Report xterm window size in pixels. Result is “CSI 4\n    *r\" ; height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getWinSizePixels() {\n        var ret = wasm.__wbg_get_windowoptions_getWinSizePixels(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=14 Report xterm text area size in pixels. Result is “CSI 4 ; height ;\n    *r\" width t”. Ps=14 ; 2 Report xterm window size in pixels. Result is “CSI 4\n    *r\" ; height ; width t”.\n    *r\"\n    *r\" Has a default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getWinSizePixels(arg0) {\n        wasm.__wbg_set_windowoptions_getWinSizePixels(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=11 Report xterm window state. If the xterm window is non-iconified,\n    *r\" it returns “CSI 1 t”. If the xterm window is iconified, it returns “CSI\n    *r\" 2 t”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getWinState() {\n        var ret = wasm.__wbg_get_windowoptions_getWinState(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=11 Report xterm window state. If the xterm window is non-iconified,\n    *r\" it returns “CSI 1 t”. If the xterm window is iconified, it returns “CSI\n    *r\" 2 t”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getWinState(arg0) {\n        wasm.__wbg_set_windowoptions_getWinState(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=21 Report xterm window’s title. Result is “OSC l label ST”.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get getWinTitle() {\n        var ret = wasm.__wbg_get_windowoptions_getWinTitle(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=21 Report xterm window’s title. Result is “OSC l label ST”.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set getWinTitle(arg0) {\n        wasm.__wbg_set_windowoptions_getWinTitle(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=6 Lower the xterm window to the bottom of the stacking order.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get lowerWin() {\n        var ret = wasm.__wbg_get_windowoptions_lowerWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=6 Lower the xterm window to the bottom of the stacking order.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set lowerWin(arg0) {\n        wasm.__wbg_set_windowoptions_lowerWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=9 ; 0 Restore maximized window. Ps=9 ; 1 Maximize window (i.e.,\n    *r\" resize to screen size). Ps=9 ; 2 Maximize window vertically. Ps=9 ; 3\n    *r\" Maximize window horizontally.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get maximizeWin() {\n        var ret = wasm.__wbg_get_windowoptions_maximizeWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=9 ; 0 Restore maximized window. Ps=9 ; 1 Maximize window (i.e.,\n    *r\" resize to screen size). Ps=9 ; 2 Maximize window vertically. Ps=9 ; 3\n    *r\" Maximize window horizontally.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set maximizeWin(arg0) {\n        wasm.__wbg_set_windowoptions_maximizeWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=2 Iconify window.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get minimizeWin() {\n        var ret = wasm.__wbg_get_windowoptions_minimizeWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=2 Iconify window.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set minimizeWin(arg0) {\n        wasm.__wbg_set_windowoptions_minimizeWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=23 ; 0 Restore xterm icon and window title from stack. Ps=23 ; 1\n    *r\" Restore xterm icon title from stack. Ps=23 ; 2 Restore xterm window\n    *r\" title from stack.\n    *r\"\n    *r\" All variants have a default implementation.\n    * @returns {boolean | undefined}\n    */\n    get popTitle() {\n        var ret = wasm.__wbg_get_windowoptions_popTitle(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=23 ; 0 Restore xterm icon and window title from stack. Ps=23 ; 1\n    *r\" Restore xterm icon title from stack. Ps=23 ; 2 Restore xterm window\n    *r\" title from stack.\n    *r\"\n    *r\" All variants have a default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set popTitle(arg0) {\n        wasm.__wbg_set_windowoptions_popTitle(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=22 ; 0 Save xterm icon and window title on stack. Ps=22 ; 1 Save\n    *r\" xterm icon title on stack. Ps=22 ; 2 Save xterm window title on stack.\n    *r\"\n    *r\" All variants have a default implementation.\n    * @returns {boolean | undefined}\n    */\n    get pushTitle() {\n        var ret = wasm.__wbg_get_windowoptions_pushTitle(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=22 ; 0 Save xterm icon and window title on stack. Ps=22 ; 1 Save\n    *r\" xterm icon title on stack. Ps=22 ; 2 Save xterm window title on stack.\n    *r\"\n    *r\" All variants have a default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set pushTitle(arg0) {\n        wasm.__wbg_set_windowoptions_pushTitle(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=5 Raise the window to the front of the stacking order.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get raiseWin() {\n        var ret = wasm.__wbg_get_windowoptions_raiseWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=5 Raise the window to the front of the stacking order.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set raiseWin(arg0) {\n        wasm.__wbg_set_windowoptions_raiseWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=7 Refresh the window.\n    * @returns {boolean | undefined}\n    */\n    get refreshWin() {\n        var ret = wasm.__wbg_get_windowoptions_refreshWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=7 Refresh the window.\n    * @param {boolean | undefined} arg0\n    */\n    set refreshWin(arg0) {\n        wasm.__wbg_set_windowoptions_refreshWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=1 De-iconify window.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get restoreWin() {\n        var ret = wasm.__wbg_get_windowoptions_restoreWin(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=1 De-iconify window.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set restoreWin(arg0) {\n        wasm.__wbg_set_windowoptions_restoreWin(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps>=24 Resize to Ps lines (DECSLPP). DECSLPP is not implemented. This\n    *r\" settings is also used to enable / disable DECCOLM (earlier variant of\n    *r\" DECSLPP).\n    * @returns {boolean | undefined}\n    */\n    get setWinLines() {\n        var ret = wasm.__wbg_get_windowoptions_setWinLines(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps>=24 Resize to Ps lines (DECSLPP). DECSLPP is not implemented. This\n    *r\" settings is also used to enable / disable DECCOLM (earlier variant of\n    *r\" DECSLPP).\n    * @param {boolean | undefined} arg0\n    */\n    set setWinLines(arg0) {\n        wasm.__wbg_set_windowoptions_setWinLines(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps=3 ; x ; y Move window to [x, y].\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get setWinPosition() {\n        var ret = wasm.__wbg_get_windowoptions_setWinPosition(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps=3 ; x ; y Move window to [x, y].\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set setWinPosition(arg0) {\n        wasm.__wbg_set_windowoptions_setWinPosition(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps = 8 ; height ; width Resize the text area to given height and width\n    *r\" in characters. Omitted parameters should reuse the current height or\n    *r\" width. Zero parameters use the display’s height or width.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get setWinSizeChars() {\n        var ret = wasm.__wbg_get_windowoptions_setWinSizeChars(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps = 8 ; height ; width Resize the text area to given height and width\n    *r\" in characters. Omitted parameters should reuse the current height or\n    *r\" width. Zero parameters use the display’s height or width.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set setWinSizeChars(arg0) {\n        wasm.__wbg_set_windowoptions_setWinSizeChars(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n    /**\n    *r\" Ps = 4 ; height ; width Resize the window to given height and width in\n    *r\" pixels. Omitted parameters should reuse the current height or width.\n    *r\" Zero parameters should use the display’s height or width.\n    *r\"\n    *r\" No default implementation.\n    * @returns {boolean | undefined}\n    */\n    get setWinSizePixels() {\n        var ret = wasm.__wbg_get_windowoptions_setWinSizePixels(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret !== 0;\n    }\n    /**\n    *r\" Ps = 4 ; height ; width Resize the window to given height and width in\n    *r\" pixels. Omitted parameters should reuse the current height or width.\n    *r\" Zero parameters should use the display’s height or width.\n    *r\"\n    *r\" No default implementation.\n    * @param {boolean | undefined} arg0\n    */\n    set setWinSizePixels(arg0) {\n        wasm.__wbg_set_windowoptions_setWinSizePixels(this.ptr, isLikeNone(arg0) ? 0xFFFFFF : arg0 ? 1 : 0);\n    }\n}\n\n__exports.__wbindgen_cb_drop = function(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    var ret = false;\n    return ret;\n};\n\n__exports.__wbindgen_is_function = function(arg0) {\n    var ret = typeof(getObject(arg0)) === 'function';\n    return ret;\n};\n\n__exports.__wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\n__exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n__exports.__wbindgen_object_clone_ref = function(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_new_d9d9adcd590f8983 = function(arg0) {\n    var ret = new Terminal(arg0 === 0 ? undefined : TerminalOptions.__wrap(arg0));\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_cols_69058d29550793da = function(arg0) {\n    var ret = getObject(arg0).cols;\n    return ret;\n};\n\n__exports.__wbg_rows_01fb1799b4fe09f6 = function(arg0) {\n    var ret = getObject(arg0).rows;\n    return ret;\n};\n\n__exports.__wbg_open_9f5ab6b87050dde5 = function(arg0, arg1) {\n    getObject(arg0).open(takeObject(arg1));\n};\n\n__exports.__wbg_reset_56236028fb703e24 = function(arg0) {\n    getObject(arg0).reset();\n};\n\n__exports.__wbg_write_127ae9e1488ba0d7 = function(arg0, arg1, arg2) {\n    try {\n        getObject(arg0).write(getStringFromWasm0(arg1, arg2));\n    } finally {\n        wasm.__wbindgen_free(arg1, arg2);\n    }\n};\n\n__exports.__wbg_instanceof_Window_e8f84259147dce74 = function(arg0) {\n    var ret = getObject(arg0) instanceof Window;\n    return ret;\n};\n\n__exports.__wbg_document_d3b6d86af1c5d199 = function(arg0) {\n    var ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\n__exports.__wbg_crypto_571359f22faacd5e = handleError(function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_cancelAnimationFrame_396f71da29fb2b46 = handleError(function(arg0, arg1) {\n    getObject(arg0).cancelAnimationFrame(arg1);\n});\n\n__exports.__wbg_requestAnimationFrame_e5d576010b9bc3a3 = handleError(function(arg0, arg1) {\n    var ret = getObject(arg0).requestAnimationFrame(getObject(arg1));\n    return ret;\n});\n\n__exports.__wbg_getElementById_71dfbba1688677b0 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\n__exports.__wbg_getRandomValues_ed3960a0dccdd876 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_log_61ea781bd002cc41 = function(arg0) {\n    console.log(getObject(arg0));\n};\n\n__exports.__wbg_call_e9f0ce4da840ab94 = handleError(function(arg0, arg1) {\n    var ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_newnoargs_e2fdfe2af14a2323 = function(arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_self_179e8c2a5a4c73a3 = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_window_492cfe63a6e41dfa = handleError(function() {\n    var ret = window.window;\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_globalThis_8ebfea75c2dd63ee = handleError(function() {\n    var ret = globalThis.globalThis;\n    return addHeapObject(ret);\n});\n\n__exports.__wbg_global_62ea2619f58bf94d = handleError(function() {\n    var ret = global.global;\n    return addHeapObject(ret);\n});\n\n__exports.__wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\n__exports.__wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\n__exports.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\n__exports.__wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports.__wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n__exports.__wbindgen_closure_wrapper125 = function(arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 75, __wbg_adapter_20);\n    return addHeapObject(ret);\n};\n\n\n__exports. AnimationFrameCallbackWrapper =  AnimationFrameCallbackWrapper;\n__exports. FunctionIdentifier =  FunctionIdentifier;\n__exports. LinkMatcherOptions =  LinkMatcherOptions;\n__exports. NoOpDispose =  NoOpDispose;\n__exports. TerminalOptions =  TerminalOptions;\n__exports. Theme =  Theme;\n__exports. ViewportRange =  ViewportRange;\n__exports. ViewportRangePosition =  ViewportRangePosition;\n__exports. WindowOptions =  WindowOptions;\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './sparkline_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './sparkline_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './sparkline_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}